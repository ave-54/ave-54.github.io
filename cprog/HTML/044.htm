<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 11">
<meta name=Originator content="Microsoft Word 11">
<link rel=Edit-Time-Data href="044.files/editdata.mso">
<title>4.4. Символы. Строки. Текст</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="place"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="State"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>www.PHILka.RU</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>vtpc112</o:LastAuthor>
  <o:Revision>3</o:Revision>
  <o:TotalTime>262</o:TotalTime>
  <o:Created>2008-07-14T07:29:00Z</o:Created>
  <o:LastSaved>2008-07-14T07:29:00Z</o:LastSaved>
  <o:Pages>8</o:Pages>
  <o:Words>5138</o:Words>
  <o:Characters>29289</o:Characters>
  <o:Company>NSTU_VT</o:Company>
  <o:Bytes>11776</o:Bytes>
  <o:Lines>244</o:Lines>
  <o:Paragraphs>68</o:Paragraphs>
  <o:CharactersWithSpaces>34359</o:CharactersWithSpaces>
  <o:Version>11.6360</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DoNotHyphenateCaps/>
  <w:DrawingGridHorizontalSpacing>0,55 пт</w:DrawingGridHorizontalSpacing>
  <w:DrawingGridVerticalSpacing>0,55 пт</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DrawingGridVerticalOrigin>99,25 пт</w:DrawingGridVerticalOrigin>
  <w:Compatibility>
   <w:WW6BorderRules/>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
   <w:UseWord97LineBreakingRules/>
   <w:SelectEntireFieldWithStartOrEnd/>
   <w:UseWord2002TableStyleRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:"Courier New CYR";
	panose-1:2 7 3 9 2 2 5 2 4 4;
	mso-font-charset:204;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:536902279 -2147483648 8 0 511 0;}
@font-face
	{font-family:"Times New Roman CYR";
	panose-1:2 2 6 3 5 4 5 2 3 4;
	mso-font-charset:204;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:536902279 -2147483648 8 0 511 0;}
@font-face
	{font-family:"Arial CYR";
	panose-1:2 11 6 4 2 2 2 2 2 4;
	mso-font-charset:204;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:536902279 -2147483648 8 0 511 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
h1
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial CYR";
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:14.0pt;
	mso-bidi-font-weight:normal;}
h2
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial CYR";
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-font-weight:normal;
	font-style:italic;
	mso-bidi-font-style:normal;}
h3
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial CYR";
	mso-bidi-font-family:"Times New Roman";
	font-weight:normal;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:center 8.0cm right 16.0cm;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:EN-US;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:center 8.0cm right 16.0cm;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:EN-US;}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a, li.a, div.a
	{mso-style-name:текст;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:36.0pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a0, li.a0, div.a0
	{mso-style-name:программа;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:Arial;
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a1, li.a1, div.a1
	{mso-style-name:список;
	mso-style-parent:текст;
	margin-top:6.0pt;
	margin-right:18.45pt;
	margin-bottom:0cm;
	margin-left:64.35pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:-18.0pt;
	mso-pagination:widow-orphan;
	mso-list:l1 level1 lfo1;
	tab-stops:42.55pt list 64.35pt;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a2, li.a2, div.a2
	{mso-style-name:определение;
	mso-style-parent:текст;
	margin-top:12.0pt;
	margin-right:32.9pt;
	margin-bottom:12.0pt;
	margin-left:35.45pt;
	text-align:justify;
	text-indent:.55pt;
	mso-pagination:widow-orphan;
	border:none;
	mso-border-alt:solid windowtext 1.5pt;
	padding:0cm;
	mso-padding-alt:1.0pt 1.0pt 1.0pt 1.0pt;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a3, li.a3, div.a3
	{mso-style-name:эпиграф;
	margin-top:0cm;
	margin-right:32.9pt;
	margin-bottom:0cm;
	margin-left:5.0cm;
	margin-bottom:.0001pt;
	text-align:right;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Arial CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-style:italic;
	mso-bidi-font-style:normal;}
p.a4, li.a4, div.a4
	{mso-style-name:"от края";
	mso-style-parent:текст;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a5, li.a5, div.a5
	{mso-style-name:Формула;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	mso-ansi-language:EN-US;
	layout-grid-mode:line;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.a6, li.a6, div.a6
	{mso-style-name:"без формата";
	mso-style-parent:программа;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:Arial;
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a7, li.a7, div.a7
	{mso-style-name:стихи;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:36.0pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.1, li.1, div.1
	{mso-style-name:эпиграф1;
	mso-style-parent:эпиграф;
	margin-top:0cm;
	margin-right:9.35pt;
	margin-bottom:0cm;
	margin-left:9.0cm;
	margin-bottom:.0001pt;
	text-align:right;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Arial CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-style:italic;
	mso-bidi-font-style:normal;}
 /* Page Definitions */
 @page
	{mso-footnote-separator:url("044.files/header.htm") fs;
	mso-footnote-continuation-separator:url("044.files/header.htm") fcs;
	mso-endnote-separator:url("044.files/header.htm") es;
	mso-endnote-continuation-separator:url("044.files/header.htm") ecs;}
@page Section1
	{size:21.0cm 842.0pt;
	margin:33.45pt 42.55pt 72.0pt 89.85pt;
	mso-header-margin:14.2pt;
	mso-footer-margin:31.75pt;
	mso-even-header:url("044.files/header.htm") eh1;
	mso-header:url("044.files/header.htm") h1;
	mso-even-footer:url("044.files/header.htm") ef1;
	mso-footer:url("044.files/header.htm") f1;
	mso-first-header:url("044.files/header.htm") fh1;
	mso-first-footer:url("044.files/header.htm") ff1;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:1593272633;
	mso-list-type:hybrid;
	mso-list-template-ids:-578417850 68747279 68747267 68747269 68747265 68747267 68747269 68747265 68747267 68747269;}
@list l0:level1
	{mso-level-tab-stop:64.35pt;
	mso-level-number-position:left;
	margin-left:64.35pt;
	text-indent:-18.0pt;}
@list l1
	{mso-list-id:1628194852;
	mso-list-type:hybrid;
	mso-list-template-ids:-964799380 -1450833310 68747267 68747269 68747265 68747267 68747269 68747265 68747267 68747269;}
@list l1:level1
	{mso-level-number-format:bullet;
	mso-level-style-link:список;
	mso-level-text:\F0B7;
	mso-level-tab-stop:64.35pt;
	mso-level-number-position:left;
	margin-left:64.35pt;
	text-indent:-18.0pt;
	font-family:Symbol;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Обычная таблица";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-bidi-font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
table.MsoTableGrid
	{mso-style-name:"Сетка таблицы";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	border:solid windowtext 1.0pt;
	mso-border-alt:solid windowtext .5pt;
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-border-insideh:.5pt solid windowtext;
	mso-border-insidev:.5pt solid windowtext;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-bidi-font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
  <o:regrouptable v:ext="edit">
   <o:entry new="1" old="0"/>
   <o:entry new="2" old="1"/>
   <o:entry new="3" old="0"/>
  </o:regrouptable>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=RU style='tab-interval:36.0pt' background="back.gif">

<div class=Section1>

<h2>4.4. Символы. Строки. Текст</h2>

<p class=a>Любой язык программирования содержит средства представления и
обработки текстовой информации. Другое дело, что обычно программист наряду с
символами имеет дело с типом данных (формой представления) – <b
style='mso-bidi-font-weight:normal'>строкой</b>, причем особенности ее
организации скрыты, а для работы предоставлен стандартный набор функций. В Си,
наоборот, форма представления строки является открытой, а программист работает
с ней «на низком уровне».</p>

<h3>Представление символов и строк в Си</h3>

<p class=a4><b
style='mso-bidi-font-weight:normal'>
<img border="0" src="Images/story.jpg" width="44" height="27" align="left">Немного истории. </b>Символы и строки в Си
реализованы в соответствии со сложившимися<span style='mso-spacerun:yes'> 
</span>в 70-годы прошлого века стандартами представления текста. Тогдашний
уровень технологии привел к тому, что в качестве единицы представления символа
был выбран байт, информационная емкость которого равно <b style='mso-bidi-font-weight:
normal'><a name="m1">2<sup>8</sup>=256</b>. Это означает, что одновременно в программе можно
представить не более 256 различных символов<b style='mso-bidi-font-weight:normal'><a name="m2">.</b>
Этого<span style='mso-spacerun:yes'>  </span>хватает для стандартного набора
символов и букв латинского алфавита. Для прочих символов (кириллица,
национальные алфавиты, псевдо-графика, математические) используются различные <b
style='mso-bidi-font-weight:normal'>кодовые таблицы, </b>работа с которыми не
включена в стандарты языка (т.е. попросту не оговаривается в нем). Аналогично,
имеются различные варианты представления символа «конец строки» в различных ОС,
что создает проблемы, связанные с переносом текстовых файлов.</p>

<p class=a4><i style='mso-bidi-font-style:normal'>Примечание.</i><b
style='mso-bidi-font-weight:normal'> </b>Исторически сложившееся «рыночное
разнообразие» на момент появления стандарта привело к тому, что имеются
несколько кодовых таблиц, представляющих кириллицу:</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>кодовая таблица <span lang=EN-US
style='mso-ansi-language:EN-US'>Windows</span><span lang=EN-US> </span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>CP</span>-1251</b><span lang=EN-US style='mso-ansi-language:EN-US'>;</span></p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>кодовая таблица <span lang=EN-US
style='mso-ansi-language:EN-US'>DOS</span><span lang=EN-US> </span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>CP</span>-866</b><span lang=EN-US style='mso-ansi-language:EN-US'>;</span></p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>кодовая таблица Международной организации
стандартизации (<b style='mso-bidi-font-weight:normal'><a name="m3"><span lang=EN-US
style='mso-ansi-language:EN-US'>ISO</span></b>), используемая семействами
мобильных ОС <span lang=EN-US style='mso-ansi-language:EN-US'>UNIX</span>, <span
lang=EN-US style='mso-ansi-language:EN-US'>Linux</span>, <span lang=EN-US
style='mso-ansi-language:EN-US'>FreeBSD</span><span lang=EN-US> </span>и т.п. -
<b style='mso-bidi-font-weight:normal'><a name="m4"><span lang=EN-US style='mso-ansi-language:
EN-US'>ISO</span>-8859-5</b>;</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>кодовые таблицы «советских» стандартов<span
style='mso-spacerun:yes'>  </span>кодов информационного обмена (<b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>KOI</span>-8)</b> - <b style='mso-bidi-font-weight:normal'><a name="m5"><span
lang=EN-US style='mso-ansi-language:EN-US'>CP</span><span lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:
EN-US'>KOI</span>-8<span lang=EN-US
style='mso-ansi-language:EN-US'>U</span></b><span lang=EN-US> </span>и <span
style='mso-spacerun:yes'> </span><b style='mso-bidi-font-weight:normal'><a name="m6"><span
lang=EN-US style='mso-ansi-language:EN-US'>CP</span><span lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:
EN-US'>KOI</span>-8<span lang=EN-US
style='mso-ansi-language:EN-US'>R</span></b>.</p>

<p class=a><b style='mso-bidi-font-weight:normal'><a name="m7">Стандартный ввод-вывод. Текстовый
файл. <span style='mso-spacerun:yes'> </span></b>Имеющийся в большинстве языков
программирования стандартный символьный ввод-вывод соответствует работе
программы в режиме <b style='mso-bidi-font-weight:normal'><a name="m8">командной строки
(консольного приложения). </b>Несмотря на то, что такой режим работы не имеет
массового распространения, он остается актуальным для «внутреннего»
программирования по следующим причинам:</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>работа с текстовыми файлами «вписана» в
стандартный ввод-вывод. Например, в Си потоки ввода-вывода могут быть
перенаправлены как на текстовый файл, так и на консольный ввод-вывод
(клавиатура – экран);</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>текстовыми файлами являются файлы исходных текстов
программ (Си-<b style='mso-bidi-font-weight:normal'><a name="m9"><span lang=EN-US
style='mso-ansi-language:EN-US'>cpp</span>, </b>Паскаль-<b style='mso-bidi-font-weight:
normal'><a name="m10"><span lang=EN-US style='mso-ansi-language:EN-US'>pas</span>, </b>Бейсик-<b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>bas</span></b>), значительная часть файлов с параметрами настройки
различных приложений (<b style='mso-bidi-font-weight:normal'><a name="m11"><span lang=EN-US
style='mso-ansi-language:EN-US'>ini</span></b>), командных файлов (файлов
последовательностей команд – <b style='mso-bidi-font-weight:normal'><a name="m12"><span
lang=EN-US style='mso-ansi-language:EN-US'>bat</span></b>);</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>если приложения не работают с форматами данных
друг друга (не совместимы по данным), то единственным форматом обмена является
текстовый файл, в котором числовые (или символьные ) данные разделены
стандартными разделителями (пробел, табуляция, запятая, точка с запятой, конец
строки). Обмен данными через такие файлы называется <b style='mso-bidi-font-weight:
normal'><a name="m13">экспортом-импортом. </b>В Си файлы такого формата читаются стандартными
функциями <b style='mso-bidi-font-weight:normal'><a name="m14">форматного ввода;</b></p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>многие приложения (компиляторы, серверные
приложения) наряду с оконными интерфейсами имеют возможность работы в режиме
командной строки и чтения управляющих (текстовых) командных файлов.</p>

<p class=a><b style='mso-bidi-font-weight:normal'><a name="m15">Символ текста.</b> Базовый
тип данных<b style='mso-bidi-font-weight:normal'><a name="m16"> char</b> понимается трояко:
как байт - минимальная адресуемая единица представления данных в компьютере,
как целое со знаком (в диапазоне –127…+127) и как <b style='mso-bidi-font-weight:
normal'><a name="m17">символ</b> <b style='mso-bidi-font-weight:normal'><a name="m18">текста</b>. Этот факт
отражает общепринятые стандарты на представление текстовой информации, которые
«зашиты» как в архитектуре компьютера (клавиатура, экран, принтер), так и в
системных программах. Стандартом установлено соответствие между символами и
присвоенными им значениями целой переменной (<b style='mso-bidi-font-weight:
normal'><a name="m19">кодами</b>). Любое устройство, отображающее символьные данные, при
получении кода выводит соответствующий ему символ. Аналогично клавиатура
(совместно с драйвером) кодирует нажатие любой клавиши с учетом регистровых и
управляющих клавиш в соответствующий ей код.<span style='mso-spacerun:yes'> 
</span></p>

<p class=a0><span style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>' '<span
style='mso-tab-count:1'>          </span>- 0x20,<span style='mso-tab-count:
2'>              </span>'B'<span style='mso-tab-count:1'>         </span>-
0x42,<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>'*'<span
style='mso-tab-count:1'>          </span>- 0x2A,<span style='mso-tab-count:
2'>              </span>'Y'<span style='mso-tab-count:1'>         </span>-
0x59,<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>'0'<span
style='mso-tab-count:1'>         </span>- 0x30,<span style='mso-tab-count:2'>              </span>'Z'<span
style='mso-tab-count:1'>         </span>- 0x5A,<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>'1'<span
style='mso-tab-count:1'>         </span>- 0x31,<span style='mso-tab-count:2'>              </span>'a'<span
style='mso-tab-count:1'>         </span>- 0x61,<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>'9'<span
style='mso-tab-count:1'>         </span>- 0x39,<span style='mso-tab-count:2'>              </span>'b'<span
style='mso-tab-count:1'>         </span>- 0x62,<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>'A'<span
style='mso-tab-count:1'>         </span>- 0x41,<span style='mso-tab-count:2'>              </span>'z'
<span style='mso-tab-count:1'>        </span>- 0x7A.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=a><b style='mso-bidi-font-weight:normal'><a name="m20">Обработка символов.</b>
Числовая и символьная интерпретация типа данных <b style='mso-bidi-font-weight:
normal'><a name="m21"><span lang=EN-US style='mso-ansi-language:EN-US'>char</span><span
lang=EN-US> </span></b>позволяются использовать обычные операции для работы с
целыми числами для обработки символов текста. Тип данных <b style='mso-bidi-font-weight:
normal'><a name="m22">char</b> не имеет никаких ограничений на выполнение операций,
допустимых для целых переменных: от операций сравнения и присваивания до
арифметических операций и операций с отдельными разрядами.<span
style='mso-spacerun:yes'>  </span>Но за исключением редких случаев знание кодов
символов не требуется. Для представления отдельных символов можно пользоваться
символьными (литерными) константами. Транслятор вместо такой константы всегда
подставляет код соответствующего символа: </p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><a name="m23"><span style='font-family:"Courier New CYR";mso-bidi-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></b></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>char<span
style='mso-tab-count:1'>      </span>c;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>for (c= 'A'; c
&lt;= 'Z'; c++) ...<o:p></o:p></span></p>

<p class=a0>for (c=0x41; c &lt;=0x5A; c++) ...</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=a4><span style='mso-spacerun:yes'> </span>Имеется ряд кодов так
называемых неотображаемых символов, которым соответствуют определенные действия
при вводе-выводе. Например, символу с кодом <b style='mso-bidi-font-weight:
normal'><a name="m24">13<sub>10</sub></b> (<b style='mso-bidi-font-weight:normal'><a name="m25">0x0D)</b> -<span
style='font-family:"Times New Roman"'>«</span>возврат каретки<span
style='font-family:"Times New Roman"'>»</span> соответствует перевод курсора в
начало строки. Для их представления в программе используются символьные
константы, начинающиеся с обратной косой черты.</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=a0>Константа Название<span style='mso-spacerun:yes'>  </span>Действие </p>

<p class=a0><span style='mso-spacerun:yes'>          </span></p>

<p class=a0><span style='mso-spacerun:yes'> </span>\<span lang=EN-US
style='mso-ansi-language:EN-US'>a</span><span style='mso-spacerun:yes'>  
</span><span style='mso-tab-count:1'>     </span>bel <span style='mso-tab-count:
2'>                   </span>Звуковой сигнал<span
style='mso-spacerun:yes'>            </span></p>

<p class=a0><span style='mso-spacerun:yes'> </span>\b<span
style='mso-spacerun:yes'>   </span><span style='mso-tab-count:1'>     </span>bs<span
style='mso-spacerun:yes'>  </span><span style='mso-tab-count:2'>                   </span>Курсор
на одну позицию назад<span style='mso-spacerun:yes'>                    
</span></p>

<p class=a0><span style='mso-spacerun:yes'> </span>\f<span
style='mso-spacerun:yes'>   </span><span style='mso-tab-count:1'>      </span>ff<span
style='mso-spacerun:yes'>  </span><span style='mso-tab-count:2'>                     </span>Переход
к началу (перевод формата)</p>

<p class=a0><span style='mso-spacerun:yes'> </span>\n<span
style='mso-spacerun:yes'>   </span><span style='mso-tab-count:1'>     </span>lf<span
style='mso-spacerun:yes'>  </span><span style='mso-tab-count:2'>                     </span>Переход
на одну строку вниз(перевод строки)<span style='mso-spacerun:yes'>   </span></p>

<p class=a0><span style='mso-spacerun:yes'> </span>\r<span
style='mso-spacerun:yes'>   </span><span style='mso-tab-count:1'>      </span>cr<span
style='mso-spacerun:yes'>  </span><span style='mso-tab-count:2'>                   </span>Возврат
на первую позицию строки</p>

<p class=a0><span style='mso-spacerun:yes'> </span>\<span lang=EN-US
style='mso-ansi-language:EN-US'>t</span><span style='mso-spacerun:yes'>  
</span><span style='mso-tab-count:1'>      </span>ht<span
style='mso-spacerun:yes'>  </span><span style='mso-tab-count:2'>                   </span>Переход
к позиции, кратной 8 (табуляция)</p>

<p class=a0><span style='mso-spacerun:yes'> </span>\v<span
style='mso-spacerun:yes'>   </span><span style='mso-tab-count:1'>      </span><span
lang=EN-US style='mso-ansi-language:EN-US'>vt</span><span
style='mso-spacerun:yes'>  </span><span style='mso-tab-count:2'>                    </span>Вертикальная
табуляция по строкам<span style='mso-spacerun:yes'>               </span></p>

<p class=a0><span style='mso-spacerun:yes'> </span>\\ <span
style='mso-spacerun:yes'> </span>\' <span style='mso-spacerun:yes'> </span>\” <span
style='mso-spacerun:yes'> </span>\? <span style='mso-tab-count:2'>                    </span>Представление
символов \, ', &quot;, ?<span
style='mso-spacerun:yes'>                                                                 </span></p>

<p class=a0><span style='mso-spacerun:yes'> </span>\nn<span
style='mso-spacerun:yes'>        </span><span style='mso-tab-count:2'>                       </span>Символ
с восьмеричным кодом nn<span style='mso-spacerun:yes'>                 </span></p>

<p class=a0><span style='mso-spacerun:yes'> </span>\xnn<span
style='mso-spacerun:yes'>        </span><span style='mso-tab-count:2'>                     </span>Символ
с шестнадцатеричным кодом nn<span style='mso-spacerun:yes'>            </span></p>

<p class=a0><span style='mso-spacerun:yes'> </span>\0<span
style='mso-spacerun:yes'>          </span><span style='mso-tab-count:2'>                      </span>Символ
с кодом 0</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a>Некоторые программы и стандартные функции обработки символов и строк
(isdigit,isalpha) используют тот факт, что цифры, прописные и строчные
(маленькие и большие) латинские буквы имеют упорядоченные по возрастанию
значения кодов: </p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>'0' - '9'<span
style='mso-tab-count:1'>    </span>0x30 - 0x39<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>'A' - 'Z'<span
style='mso-tab-count:1'>   </span>0x41 - 0x5A<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>'a' - 'z'<span
style='mso-tab-count:1'>    </span>0x61 - 0x7A<o:p></o:p></span></p>

<p class=a><b style='mso-bidi-font-weight:normal'><a name="m26">Строка. </b>Строкой
называется последовательность символов, ограниченная символом с кодом 0, то
есть '\0'. Из ее определения видно, что она является объектом переменной
размерности. Местом хранения строки является массив символов. Суть
взаимоотношений между строкой и массивом символов состоит в том, что строка
является структурой данных, а массив – переменной:</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>строка хранится в массиве символов, массив
символов может быть инициализирован строкой, а может быть заполнен программно: </p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><a name="m27"><span style='font-family:"Courier New CYR";mso-bidi-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></b></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>char A[20] = { '</span>С<span
lang=EN-US style='mso-ansi-language:EN-US'>','</span>т<span lang=EN-US
style='mso-ansi-language:EN-US'>','</span>р<span lang=EN-US style='mso-ansi-language:
EN-US'>','</span>о<span lang=EN-US style='mso-ansi-language:EN-US'>','</span>к<span
lang=EN-US style='mso-ansi-language:EN-US'>','</span>а<span lang=EN-US
style='mso-ansi-language:EN-US'>','\0' };<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>char B[80];<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>for (int i=0;
i&lt;20; i++) B[i] = 'A';<o:p></o:p></span></p>

<p class=a0>B[20] = '\0';</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>строка представляет собой последовательность,
ограниченную символом <b style='mso-bidi-font-weight:normal'><a name="m28">'\0'</b>, поэтому
работать с ней нужно в цикле, ограниченном не размерностью массива, а условием
обнаружения символа конца строки: </p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=a0>for (i=0; B[i] !='\0'; i++)...</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>соответствие размерности массива и длины строки
транслятором не контролируется, за это несет ответственность программа
(программист, ее написавший): </p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=a0>char<span style='mso-tab-count:1'>      </span>C[20],<span
lang=EN-US style='mso-ansi-language:EN-US'>B</span>[]=”Строка слишком длинная
для <span lang=EN-US style='mso-ansi-language:EN-US'>C</span>”;</p>

<p class=a0>// следить за переполнением массива </p>

<p class=a0>// и ограничить строку его размерностью<span
style='mso-spacerun:yes'>  </span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>for (i=0; i&lt;19
&amp;&amp; B[i]!='\0'; i++) C[i] = B[i];<o:p></o:p></span></p>

<p class=a0>C[i]='\0';</p>

<p class=a><b style='mso-bidi-font-weight:normal'><a name="m29">Строковая константа</b> -
последовательность символов, заключенная в двойные кавычки. Допустимо
использование неотображаемых символов. Строковая константа автоматически
дополняется символом <b style='mso-bidi-font-weight:normal'><a name="m30">'\0'</b>, ею можно
инициализироваться массив, в том числе такой, размерность которого определяется
размерностью строки: </p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><a name="m31"><span style='font-family:"Courier New CYR";mso-bidi-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></b></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>char<span
style='mso-tab-count:1'>      </span>A[80] = &quot;123456\r\n&quot;;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>char<span
style='mso-tab-count:1'>      </span>B[] = &quot;aaaaa\033bbbb&quot;; <o:p></o:p></span></p>

<p class=a0>...&quot;Это строка&quot;...</p>

<p class=a><b style='mso-bidi-font-weight:normal'><a name="m32">Представление текста. </b>Текст
является последовательностью строк, и наш уровень работы с данными не позволяет
предложить для его хранения что-либо иное, кроме массива двумерного массива
символов: </p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=a0>char<span style='mso-tab-count:1'>      </span>A[20][80];</p>

<p class=a0>char<span style='mso-tab-count:1'>      </span>B[][40] = {
&quot;Строка&quot;,&quot;Еще строка&quot;,&quot;0000&quot;,&quot;abcdef&quot;};</p>

<p class=a4>Первый индекс двумерного массива соответствует номеру строки,
второй - номеру символа в нем: </p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>for (int i=0;
i&lt;20; i++)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>for (int k=0;
A[i][k] !='\0'; k++) {…} // </span>Работа<span lang=EN-US style='mso-ansi-language:
EN-US'> c </span>символами<span lang=EN-US style='mso-ansi-language:EN-US'> i-</span>й<span
style='mso-ansi-language:EN-US'> </span>строки<span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a><b style='mso-bidi-font-weight:normal'><a name="m33">Текстовые файлы. </b>Формат
строки, ограниченной символом <b style='mso-bidi-font-weight:normal'><a name="m34">'\0'</b>,
используется для представления ее в памяти программы. При чтении строки или
последовательности символов из внешнего потока (клавиатура, экран, файл)
ограничителем строки является другой символ – <b style='mso-bidi-font-weight:
normal'><a name="m35">'\</b><b style='mso-bidi-font-weight:normal'><a name="m36"><span lang=EN-US
style='mso-ansi-language:EN-US'>n</span>'</b> («перевод строки», <b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>line</span><span lang=EN-US> </span></b><b style='mso-bidi-font-weight:
normal'><a name="m37"><span lang=EN-US style='mso-ansi-language:EN-US'>feed</span></b> (<b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>LF</span></b>)). Здесь возможны различные «тонкости» при вызове функций,
работающих со строками. Например, функция чтения из потока-клавиатуры
возвращает строку ограниченную единственным символом <b style='mso-bidi-font-weight:
normal'><a name="m38">'\0'</b>, а функция чтения из потока-файла – дополнительно помещает
символ <b style='mso-bidi-font-weight:normal'><a name="m39">'\</b><b style='mso-bidi-font-weight:
normal'><a name="m40"><span lang=EN-US style='mso-ansi-language:EN-US'>n</span>'</b>, если
строка полностью поместилась в отведенный буфер (массив символов).</p>

<p class=a>Функции стандартной библиотеки ввода-вывода обязаны «сглаживать
противоречия», связанные с исторически сложившимися формами и анахронизмами в
представлении строки в различных устройствах ввода-вывода и операционных
системах (текстовый файл, клавиатура, экран) и приводить их к единому
внутреннему формату.</p>

<h3>Стандартные приемы обработки строк</h3>

<p class=a>Большинство программ, обрабатывающих строки, используют
последовательный просмотр символ за символом – <b style='mso-bidi-font-weight:
normal'><a name="m41">посимвольный просмотр строки</b>. Если же в процессе обработки строки
предполагается изменение ее содержимого, то возможны два варианта:</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>редактировать строку «на месте», реализуя
вставку и удаление символов или фрагментов;</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>организовать посимвольное переписывание входной
строки в выходную, с копированием нужных и преобразованных фрагментов (что
проще).</p>

<p class=a><b style='mso-bidi-font-weight:normal'><a name="m42">Обработка символов с учетом
особенностей их кодирования. </b>Некоторые программы используют свойства
упорядоченности значений кодов латинских букв и цифр. Такое программирование
является, по большому счету, машинно-зависимым, но ввиду «незыблемости»
стандарта представления символов может быть отнесено к языку.</p>

<p class=a4>Получить символ десятичной цифры из значения целой переменной,
лежащей в диапазоне 0..9: </p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m43"><span style='font-family:
"Courier New CYR";mso-bidi-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></b></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>int<span
style='mso-spacerun:yes'>  </span>n;<span style='mso-spacerun:yes'> 
</span>char<span style='mso-spacerun:yes'>  </span>c;<span
style='mso-spacerun:yes'>  </span>c = n + '0';<span style='mso-spacerun:yes'> 
</span><o:p></o:p></span></p>

<p class=a4>Получить символ шестнадцатеричной цифры из значения целой
переменной, лежащей в диапазоне 0..15: </p>

<p class=a0><span style='font-family:"Times New Roman CYR";mso-bidi-font-family:
"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>if (n &lt;=9) c =
n + '0'; else c = n - 10 + 'A';<o:p></o:p></span></p>

<p class=a4>Получить значение целой переменной из символа десятичной цифры: </p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m44"><span style='font-family:
"Courier New CYR";mso-bidi-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></b></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>if (c &gt;='0'
&amp;&amp; c &lt;='9') n = c - '0';<o:p></o:p></span></p>

<p class=a4>Получить значение целой переменной из шестнадцатеричной цифры: </p>

<p class=a0><span style='font-family:"Times New Roman CYR";mso-bidi-font-family:
"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>if (c &gt;='0'
&amp;&amp; c &lt;='9') n = c - '0'; <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>else<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>if (c &gt;='A'
&amp;&amp; c &lt;='F') c = c - 'A' + 10;<o:p></o:p></span></p>

<p class=a4>Преобразовать маленькую латинскую букву в большую: </p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m45"><span style='font-family:
"Courier New CYR";mso-bidi-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></b></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>if (c &gt;='a'
&amp;&amp; c &lt;='z') c = c - 'a' + 'A';<o:p></o:p></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=a><b style='mso-bidi-font-weight:normal'><a name="m46">Подсчет количества слов.</b>
Нужно учесть, что программа не умеет просто «видеть слово», для нее необходимо
формальное условие его обнаружения. Таковым может быть либо конец слова, либо
его начало. Начало слова обнаруживается по сочетанию пары символов: текущий –
символ слова (не пробел), перед которым либо пробел, либо – начало строки.</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------44-01.cpp</p>

<p class=a0>//--- Подсчет количества слов</p>

<p class=a0><span style='mso-spacerun:yes'> </span>int words(char c[]) {</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span
style='mso-spacerun:yes'> </span>for ( int nc=0,i=0;c[i]!=0;i++){ //
Посимвольный просмотр строки </p>

<p class=a0><span style='mso-tab-count:1'>            </span><span
style='mso-spacerun:yes'> </span><span lang=EN-US style='mso-ansi-language:
EN-US'>if (c[i]!=' ' &amp;&amp; (i==0 || c[i-1]==' ')) <st1:place w:st="on"><st1:State
 w:st="on">nc++</st1:State></st1:place>;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span
style='mso-spacerun:yes'> </span></span>// начало слова<span
style='mso-spacerun:yes'>  </span>- не пробел, начало строки или впереди пробел</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span
style='mso-spacerun:yes'> </span><span lang=EN-US style='mso-ansi-language:
EN-US'>// if (c[i]!=' ' &amp;&amp; (c[i+1]==0 || c[i+1]==' ')) <st1:place
w:st="on"><st1:State w:st="on">nc++</st1:State></st1:place>;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span
style='mso-spacerun:yes'> </span></span>// конец слова<span
style='mso-spacerun:yes'>  </span>- не пробел, далее - конец строки или пробел</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span
style='mso-spacerun:yes'> </span>}</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>return</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>nc</span>; }</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a><b style='mso-bidi-font-weight:normal'><a name="m47">Удаление лишних пробелов. </b>Здесь
уместно напомнить одно правило: количество индексов определяет количество
независимых перемещений по массивам (степеней свободы). Если для входной строки
индекс может изменяться в заголовке цикла посимвольного просмотра (равномерное
«движение» по строке), то для выходной строки он меняется только в моменты
добавления очередного символа. Кроме того, не нужно забывать «закрывать»
выходную строку символом конца строки. </p>

<p class=a4><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------<span
lang=EN-US style='mso-ansi-language:EN-US'>4</span>4-0<span lang=EN-US
style='mso-ansi-language:EN-US'>2</span>.<span lang=EN-US style='mso-ansi-language:
EN-US'>cpp</span></p>

<p class=a0>//--- Удаление лишних пробелов при посимвольном переписывании</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void nospace(char
c1[],char c2[]) {<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>      </span>for</span> ( <span lang=EN-US
style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>j</span>=0,<span lang=EN-US
style='mso-ansi-language:EN-US'>i</span>=0;<span lang=EN-US style='mso-ansi-language:
EN-US'>c</span>1[<span lang=EN-US style='mso-ansi-language:EN-US'>i</span>]!=0;<span
lang=EN-US style='mso-ansi-language:EN-US'>i</span>++) { <span
style='mso-tab-count:1'>            </span>// Посимвольный просмотр строки </p>

<p class=a0><span style='mso-spacerun:yes'>           </span><span lang=EN-US
style='mso-ansi-language:EN-US'>if</span> (<span lang=EN-US style='mso-ansi-language:
EN-US'>c</span>1[<span lang=EN-US style='mso-ansi-language:EN-US'>i</span>]!='
') {<span style='mso-spacerun:yes'>              </span><span style='mso-tab-count:
1'>      </span><span style='mso-tab-count:1'>            </span>// Текущий
символ не пробел </p>

<p class=a0><span style='mso-spacerun:yes'>           </span><span lang=EN-US
style='mso-ansi-language:EN-US'>if</span> (<span lang=EN-US style='mso-ansi-language:
EN-US'>i</span>!=0 &amp;&amp; <span lang=EN-US style='mso-ansi-language:EN-US'>c</span>1[<span
lang=EN-US style='mso-ansi-language:EN-US'>i</span>-1]==' ')<span
style='mso-spacerun:yes'>       </span><span
style='mso-tab-count:1'>           </span>// Первый в слове -</p>

<p class=a0><span style='mso-spacerun:yes'>           </span><span lang=EN-US
style='mso-ansi-language:EN-US'>c</span>2[<span lang=EN-US style='mso-ansi-language:
EN-US'>j</span>++]=' ';<span style='mso-spacerun:yes'>                       
</span><span style='mso-tab-count:2'>                      </span>// добавить
пробел</p>

<p class=a0><span style='mso-spacerun:yes'>           </span><span lang=EN-US
style='mso-ansi-language:EN-US'>c</span>2[<span lang=EN-US style='mso-ansi-language:
EN-US'>j</span>++]=<span lang=EN-US style='mso-ansi-language:EN-US'>c</span>1[<span
lang=EN-US style='mso-ansi-language:EN-US'>i</span>];<span
style='mso-spacerun:yes'>                    </span><span style='mso-tab-count:
2'>                      </span>// Перенести символ слова</p>

<p class=a0><span style='mso-spacerun:yes'>           </span>} }<span
style='mso-spacerun:yes'>                                   </span><span
style='mso-tab-count:1'>           </span>
<span style='mso-tab-count:1; mso-ansi-language:EN-US' lang="EN-US">            </span>// в выходную
строку </p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>c</span>2[<span lang=EN-US style='mso-ansi-language:
EN-US'>j</span>]=0; }</p>

<p class=a4>Контекст <b style='mso-bidi-font-weight:normal'><a name="m48">c1[j++]=</b><span
style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'> </span><span
style='font-family:"Times New Roman"'>имеет вполне определенный смысл: добавить
к выходной строке очередной символ и переместиться к следующему. <span
style='mso-spacerun:yes'> </span>Поскольку в процессе переписывания размер
«уплотненной» части строки всегда меньше исходной, то можно совместить входную
и выходную строку в одном массиве (запись нового содержимого будет происходить
поверх просмотренного старого).<o:p></o:p></span></p>

<p class=a><b style='mso-bidi-font-weight:normal'><a name="m49">Сравнение строк. </b>При
работе со строками часто возникает необходимость их сравнения в алфавитном
порядке. Простейший способ состоит в сравнении кодов символов, что при наличии
последовательного кодирования латинских букв и цифр дает гарантию их
алфавитного упорядочения (цифры, прописные латинские, строчные латинские). Так,
например, работает стандартная функция <b style='mso-bidi-font-weight:normal'><a name="m50"><span
lang=EN-US style='mso-ansi-language:EN-US'>strcmp</span></b>.</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------44-03.cpp</p>

<p class=a0>//---- Сравнение строк по значениям кодов</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>int my_strcmp(unsigned char s1[],unsigned char
s2[]) { <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for ( int n=0; s1[n]!='\0' &amp;&amp;
s2[n]!='\0'; n++)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>      </span>if (s1[n] != s2[n]) break;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>if (s1[n] == s2[n]) return 0;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>if (s1[n] &lt; s2[n]) return -1; <o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US"> </span>return 1; }</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=a4>Обратите внимание на то, что массивы символов указаны как
беззнаковые. В противном случае коды с весом более <b style='mso-bidi-font-weight:
normal'><a name="m51">0x80</b> (символы кириллицы) будут иметь отрицательные значения и
располагаться в алфавите «раньше» латинских, имеющих положительные значения
кодов. Чтобы установить свой порядок следования символов в алфавите, символы
расставляют в порядке убываня их «весов» и использовать порядковый номер
символа в последовательности в качестве характеристики его «веса». </p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><a name="m52"><span
style='font-family:"Courier New CYR";mso-bidi-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></b></p>

<p class=a0>//------------------------------------------------------44-04.cpp</p>

<p class=a0>//---- Сравнение строк с заданными &quot;весами&quot; символов</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>int Carry(char c){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>static char ORD[] = &quot;</span>АаБбВвГгДдЕе<span
lang=EN-US style='mso-ansi-language:EN-US'>1234567890&quot;; <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>if (c=='\0') return 0;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for ( int n=0; ORD[n]!='\0'; n++)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span>if (ORD[n]==c) return n;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>return n+1; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>int my_strcmp(char s1[],char s2[]){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>int n; char c1,c2;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for (n=0; (c1=Carry(s1[n]))!='\0'
&amp;&amp;(c2=Carry(s2[n]))!='\0'; n++)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span>if (c1 != c2) break;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>if (c1 == c2) return 0;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>if (c1 &lt; c2) return -1;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>return 1; }<o:p></o:p></span></p>

<p class=a><b style='mso-bidi-font-weight:normal'><a name="m53">Выделение вложенных
фрагментов. </b>Этот пример включает в себя практически все перечисленные выше
приемы работы со строкой: поиск символов с запоминанием их позиций, исключение
фрагментов, преобразование числа из внутренней формы во внешнюю. Сложность
задачи обязывает использовать принцип модульного проектирования. Требуется
переписать из входной строки вложенные друг в друга фрагменты последовательно
друг за другом, оставляя при исключении<span style='mso-spacerun:yes'> 
</span>фрагмента на его месте уникальный номер.</p>

<p class=a0><span style='mso-spacerun:yes'>                     </span></p>

<p class=a0>Пример: <span lang=EN-US style='mso-ansi-language:EN-US'>a</span>{<span
lang=EN-US style='mso-ansi-language:EN-US'>b</span>{<span lang=EN-US
style='mso-ansi-language:EN-US'>c</span>}<span lang=EN-US style='mso-ansi-language:
EN-US'>b</span>}<span lang=EN-US style='mso-ansi-language:EN-US'>a</span>{<span
lang=EN-US style='mso-ansi-language:EN-US'>d</span>{<span lang=EN-US
style='mso-ansi-language:EN-US'>e</span>{<span lang=EN-US style='mso-ansi-language:
EN-US'>g</span>}<span lang=EN-US style='mso-ansi-language:EN-US'>e</span>}<span
lang=EN-US style='mso-ansi-language:EN-US'>d</span>}<span lang=EN-US
style='mso-ansi-language:EN-US'>a</span> =&gt; {<span lang=EN-US
style='mso-ansi-language:EN-US'>c</span>}{<span lang=EN-US style='mso-ansi-language:
EN-US'>b</span>1<span lang=EN-US style='mso-ansi-language:EN-US'>b</span>}{<span
lang=EN-US style='mso-ansi-language:EN-US'>g</span>}{<span lang=EN-US
style='mso-ansi-language:EN-US'>e</span>3<span lang=EN-US style='mso-ansi-language:
EN-US'>e</span>}{<span lang=EN-US style='mso-ansi-language:EN-US'>d</span>4<span
lang=EN-US style='mso-ansi-language:EN-US'>d</span>}<span lang=EN-US
style='mso-ansi-language:EN-US'>a</span>2<span lang=EN-US style='mso-ansi-language:
EN-US'>a</span>5<span lang=EN-US style='mso-ansi-language:EN-US'>a</span></p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a4>Задачу будем решать по частям. Несомненно, нам потребуется функция,
которая ищет открывающуюся скобку для самого внутреннего вложенного фрагмента.
Имея ее, можно организовать уже известное нам переписывание и «выкусывание».
Основная идея алгоритма поиска состоит в использовании переменной-счетчика,
которая увеличивает свое значение на 1 на каждую из открывающихся скобок и
уменьшает на 1 на каждую из закрывающихся. При этом фиксируется максимальное
значение счетчика и позиция элемента, где это происходит.</p>

<p class=a4><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------44-05.<span
lang=EN-US style='mso-ansi-language:EN-US'>cpp</span></p>

<p class=a0>//---- возвращается индекс скобки &quot; {&quot; для пары с
максимальной глубиной</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>int find(char
c[]){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>int i;<span
style='mso-spacerun:yes'>                                        </span><span
style='mso-tab-count:1'>  </span>// Индекс в строке<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>int</span><span
lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:EN-US'>k</span>;<span
style='mso-spacerun:yes'>                                    </span><span
style='mso-tab-count:1'>     </span>// Счетчик вложенности</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>int</span><span
lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:EN-US'>max</span>;<span
style='mso-spacerun:yes'>                                 </span><span
style='mso-tab-count:1'>   </span>// Максимум вложенности</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>int b;<span
style='mso-spacerun:yes'>                              </span><span
style='mso-tab-count:1'>           </span>// Индекс максимальной &quot; {&quot;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>for (i=0, max=0, b=-1; c[i]!=0;
i++){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>if (c[i]== '}' ) k--;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>if (c[i]== '{' ) {<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:3'>                                    </span>k++;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:3'>                                    </span>if
(k&gt;max) { max=k; b=i; }}<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:1; mso-ansi-language:EN-US' lang="EN-US">            </span>}</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>if</span> (<span
lang=EN-US style='mso-ansi-language:EN-US'>k</span>!=0) <span lang=EN-US
style='mso-ansi-language:EN-US'>return</span> 0;<span
style='mso-spacerun:yes'>   </span><span style='mso-tab-count:1'>                     </span>// Защита &quot; от дурака&quot; ,
нет парных скобок</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>return b; }<o:p></o:p></span></p>

<p class=a>Другой вариант: функция ищет первую внутреннюю пару скобок.
Запоминается позиция открывающейся скобки, при обнаружении закрывающейся скобки
возвращается индекс последней открывающейся. Заметим, что его также можно
использовать, просто последовательность извлечения фрагментов будет другая.</p>

<p class=a><o:p>&nbsp;</o:p></p>

<span style='font-size:10.0pt;font-family:Arial;mso-fareast-font-family:"Times New Roman";
mso-bidi-font-family:"Times New Roman";mso-ansi-language:RU;mso-fareast-language:
RU;mso-bidi-language:AR-SA'><br clear=all style='page-break-before:always'>
</span>

<p class=a0>//------------------------------------------------------44-06.<span
lang=EN-US style='mso-ansi-language:EN-US'>cpp</span></p>

<p class=a0>//---- возвращается индекс скобки &quot; {&quot; для первой самой
внутренней пары</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>int find(char
c[]){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>int i;<span
style='mso-spacerun:yes'>                                        </span><span
style='mso-tab-count:1'>  </span>// </span>Индекс<span style='mso-ansi-language:
EN-US'> </span>в<span style='mso-ansi-language:EN-US'> </span>строке<span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>int b;<span
style='mso-spacerun:yes'>                              </span><span
style='mso-tab-count:2'>                       </span>// </span>Индекс<span
style='mso-ansi-language:EN-US'> </span>максимальной<span lang=EN-US
style='mso-ansi-language:EN-US'> &quot; {&quot; <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>for (i=0, b=-1;
c[i]!=0; i++){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>           </span>if (c[i]== '}' ) return b;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>           </span>if (c[i]== '{' ) b=i;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>           </span>}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>return b;}<o:p></o:p></span></p>

<p class=a>Идея основного алгоритма заключается в последовательной нумерации
«выкусываемых» из входной строки фрагментов, при этом на место каждого
помещается его номер – значение счетчика, которое для этого переводится<span
style='mso-spacerun:yes'>  </span>во внешнюю форму представления.</p>

<p class=a><o:p>&nbsp;</o:p></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>//------------------------------------------------------</span>4<span
lang=EN-US style='mso-ansi-language:EN-US'>4-</span>07<span lang=EN-US
style='mso-ansi-language:EN-US'>.cpp<o:p></o:p></span></p>

<p class=a0>//----- Копирование вложенных фрагментов с &quot;
выкусыванием&quot;</p>

<p class=a0><span style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span><span lang=EN-US>void copy(char c1[], char
c2[]){<o:p></o:p></span></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>i</span>=0;<span
style='mso-spacerun:yes'>                                  </span><span style='mso-tab-count:1'>   </span><span
style='mso-tab-count:2'>                        </span>// Индекс в выходной
строке</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>k</span>;<span
style='mso-spacerun:yes'>                                 </span><span
style='mso-tab-count:2'>                   </span><span style='mso-tab-count:
1'>            </span>// Индекс найденного фрагмента</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>n</span>;<span
style='mso-spacerun:yes'>                                </span><span
style='mso-tab-count:2'>                    </span><span style='mso-tab-count:
1'>            </span>// Запоминание начала фрагмента</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>m</span>;<span
style='mso-spacerun:yes'>                                         </span><span
style='mso-tab-count:3'>                                  </span>// Счетчик
фрагментов</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>for</span> (<span lang=EN-US style='mso-ansi-language:
EN-US'>m</span>=1; (<span lang=EN-US style='mso-ansi-language:EN-US'>k</span>=<span
lang=EN-US style='mso-ansi-language:EN-US'>find</span>(<span lang=EN-US
style='mso-ansi-language:EN-US'>c</span>1))!=-1; <span lang=EN-US
style='mso-ansi-language:EN-US'>m</span>++){<span
style='mso-spacerun:yes'>        </span><span style='mso-tab-count:2'>                 </span>//
Пока есть фрагменты</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>for</span> (<span lang=EN-US style='mso-ansi-language:
EN-US'>n</span>=<span lang=EN-US style='mso-ansi-language:EN-US'>k</span>; <span
lang=EN-US style='mso-ansi-language:EN-US'>c</span>1[<span lang=EN-US
style='mso-ansi-language:EN-US'>k</span>]!= '}' ; <span lang=EN-US
style='mso-ansi-language:EN-US'>k</span>++, <span lang=EN-US style='mso-ansi-language:
EN-US'>i</span>++) <span lang=EN-US style='mso-ansi-language:EN-US'>c</span>2[<span
lang=EN-US style='mso-ansi-language:EN-US'>i</span>]=<span lang=EN-US
style='mso-ansi-language:EN-US'>c</span>1[<span lang=EN-US style='mso-ansi-language:
EN-US'>k</span>]; // Переписать фрагмент и его &quot;}&quot;</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span style='mso-tab-count:
1'>           </span><span lang=EN-US style='mso-ansi-language:EN-US'>c</span>2[<span
lang=EN-US style='mso-ansi-language:EN-US'>i</span>++] = <span lang=EN-US
style='mso-ansi-language:EN-US'>c</span>1[<span lang=EN-US style='mso-ansi-language:
EN-US'>k</span>++];<span
style='mso-spacerun:yes'>                                  </span><span
style='mso-tab-count:1'>            </span>// </p>

<p class=a0 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>if</span> (<span lang=EN-US style='mso-ansi-language:EN-US'>m</span>/10!=0)
<span lang=EN-US style='mso-ansi-language:EN-US'>c</span>1[<span lang=EN-US
style='mso-ansi-language:EN-US'>n</span>++] = <span lang=EN-US
style='mso-ansi-language:EN-US'>m</span>/10 + '0' ;<span
style='mso-spacerun:yes'>        </span><span style='mso-tab-count:1'>    </span>//
На его место две цифры</p>

<p class=a0 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>c</span>1[<span lang=EN-US style='mso-ansi-language:EN-US'>n</span>++] =
<span lang=EN-US style='mso-ansi-language:EN-US'>m</span>%10 + '0' ;<span
style='mso-spacerun:yes'>                       </span><span style='mso-tab-count:
1'>    </span>// номера во внешней форме</p>

<p class=a0 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>for (;c1[k]!=0; k++, n++) c1[n]=c1[k];<o:p></o:p></span></p>

<p class=a0 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>c</span>1[<span lang=EN-US style='mso-ansi-language:EN-US'>n</span>]=0;
}<span style='mso-spacerun:yes'>                                </span><span
style='mso-tab-count:2'>              </span>// сдвинуть &quot; хвост&quot; к
началу</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>for</span> (<span lang=EN-US style='mso-ansi-language:
EN-US'>k</span>=0; <span lang=EN-US style='mso-ansi-language:EN-US'>c</span>1[<span
lang=EN-US style='mso-ansi-language:EN-US'>k</span>]!=0; <span lang=EN-US
style='mso-ansi-language:EN-US'>k</span>++, <span lang=EN-US style='mso-ansi-language:
EN-US'>i</span>++) <span lang=EN-US style='mso-ansi-language:EN-US'>c</span>2[<span
lang=EN-US style='mso-ansi-language:EN-US'>i</span>]=<span lang=EN-US
style='mso-ansi-language:EN-US'>c</span>1[<span lang=EN-US style='mso-ansi-language:
EN-US'>k</span>];<span style='mso-spacerun:yes'>      </span><span
style='mso-tab-count:1'>       </span>// перенести остаток</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>c</span>2[<span lang=EN-US style='mso-ansi-language:
EN-US'>i</span>]=0;}<span
style='mso-spacerun:yes'>                                     </span><span
style='mso-tab-count:2'>                      </span><span style='mso-tab-count:
1'>            </span>// входной строки</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a4>Практический
совет – желательно избегать сложные вычисления над индексами. Лучше всего для
каждого фрагмента строки заводить свой индекс и перемещать их независимо друг
от друга в нужные моменты. Что, например, сделано при «уплотнении» строки – индекс
<b style='mso-bidi-font-weight:normal'><a name="m54"><span lang=EN-US style='mso-ansi-language:
EN-US'>k</span><span lang=EN-US> </span></b>после переписывания найденного
фрагмента «останавливается» на начале «хвоста» строки, который переносится под
индекс <b style='mso-bidi-font-weight:normal'><a name="m55"><span lang=EN-US
style='mso-ansi-language:EN-US'>n</span> – </b>начало удаляемого фрагмента.
Причем записываемые цифры номера смещают это начало на один или два символа.
Таким образом, фрагмент заменяется во входной строке на его номер.</p>

<p class=a4 style="text-align: center">
<img border="0" src="Images/044-01.jpg" width="249" height="227"></p>
<p class=a4 style="text-align: center"><b style='mso-bidi-font-weight:normal'><a name="m56">Рис. 24-1. Удаление
фрагмента путем переписывания пар символов<o:p></o:p></b></p>

<h3>Внешняя и внутренняя форма представления чисел</h3>

<p class=a>Текст и числовые данные имеют еще одну точку соприкосновения. Дело в
том, что все наблюдаемые нами числовые данные – это совсем не то, с чем имеет
дело компьютер. При вводе или выводе целого или вещественного числа мы имеем
дело со строкой текста, в которой присутствуют символы, изображающие цифры
числа – внешней формой представления.</p>

<p class=a><b style='mso-bidi-font-weight:normal'><a name="m57">Внутренняя форма
представления числа</b> - представление числа в виде целой или вещественной
переменной. </p>

<p class=a><b style='mso-bidi-font-weight:normal'><a name="m58">Внешняя форма представления
числа</b> - представление числа в виде строки символов – цифр в заданной
системе счисления.</p>

<p class=a>Функции и объекты стандартных потоков ввода/вывода могут, в 
частности, вводить и выводить целые числа, представленные в десятичной, 
восьмеричной и шестнадцатеричной системах счисления. При этом происходят 
преобразования, связанные с переходом от внешней формы представления к 
внутренней и наоборот.</p>
<p class=a style="text-align: center">
<img border="0" src="Images/044-02.jpg" width="396" height="185"><br
style='mso-ignore:vglayout' clear=ALL>
&nbsp;</p>

<p class=a4 align=center style='text-align:center'><b><a name="m59">Рис.24-2. Внешняя и
внутренняя форма представления числа<o:p></o:p></b></p>

<p class=a>Обратите внимание, что о системе счисления имеет смысл говорить только тогда,
когда число рассматривается в виде последовательности цифр, то есть во внешней
форме представления числа. Внутренняя форма представления числа – двоичная и
нас, грубо говоря, не интересует, поскольку компьютер корректно оперирует с ней
и без нашего участия.</p>
</p>

<p class=a>На самом деле алгоритмы ввода-вывода числовых данных (вернее,
преобразования данных из внешней формы во внутреннюю, и наоборот) идентичны
алгоритмам преобразования чисел из произвольной системы счисления в десятичную
(см.<b style='mso-bidi-font-weight:normal'><a name="m60">1.3</b>). При этом десятичная
система играет роль внутренней («родной») формы представления.</p>

<p class=a><b style='mso-bidi-font-weight:normal'><a name="m61">Преобразование целого из
внешней формы во внутреннюю (ввод целого числа)</b>. Преобразования при вводе и
выводе чисел начинаются с перехода от символа-цифры к значению целой
переменной, соответствующему этой цифре, и наоборот: </p>

<p class=a0><span style='font-family:"Times New Roman CYR";mso-bidi-font-family:
"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>char c; int n;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>n = c - '0';<o:p></o:p></span></p>

<p class=a0>c = n + '0'; </p>

<p class=a style='text-indent:0cm'>Ввод целого числа сопровождается его
преобразованием из внешней формы – последовательности цифр – в внутренней –
целой переменной, которая «интегрирует» цифры в одно значение с учетом их веса
(что зависит, кроме всего прочего, и от системы счисления, в которой
представлено вводимое число). В преобразовании используется тот факт, что при
добавлении к числу очередной цифры справа старое значение увеличивается в 10
раз и к нему добавляется значение новой цифры, например: </p>

<p class=a6><o:p>&nbsp;</o:p></p>

<p class=a0>Число:<span style='mso-spacerun:yes'>         </span>'123'<span style='mso-spacerun:yes'>  </span>'1234'</p>

<p class=a0>Значение:<span style='mso-spacerun:yes'>    </span>123<span
style='mso-spacerun:yes'>   </span>1234 = 123 * 10 + 4<span style='mso-tab-count:
2'>                </span> </p>

<p class=a4>Тогда в основу алгоритма может быть положен цикл просмотра всех
цифр числа слева направо, в котором значение числа на текущем шаге цикла
получается умножением на 10 результата предыдущего цикла и добавлением значения
очередной цифры: </p>

<p class=a0><span style='font-family:"Times New Roman CYR";mso-bidi-font-family:
"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=a0>n = n * 10 + c[i] - '0';</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------44-08.cpp</p>

<p class=a0>//----- Ввод десятичного целого числа</p>

<p class=a0><span style='mso-spacerun:yes'> </span>int StringToInt(char c[]){</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>int n,i;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for (i=0; !(c[i]&gt;='0' &amp;&amp;
c[i]&lt;='9'); i++)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span>if (c[i]=='\0') return 0;<span
style='mso-spacerun:yes'>                  </span><span style='mso-tab-count:
1'>          </span>// </span>Поиск<span style='mso-ansi-language:EN-US'> </span>первой<span
style='mso-ansi-language:EN-US'> </span>цифры<span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for (n=0; c[i]&gt;='0' &amp;&amp;
c[i]&lt;='9'; i++)<span style='mso-spacerun:yes'>          </span><span
style='mso-tab-count:1'>           </span>// </span>Накопление<span
style='mso-ansi-language:EN-US'> </span>целого<span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US"> </span>n = n * 10 + c[i] - '0';<span
style='mso-spacerun:yes'>                         </span><span
style='mso-tab-count:2'>                 </span>// «цифра за цифрой»</p>

<p class=a0><span style='mso-spacerun:yes'> </span>return n; }</p>

<p class=a>Преобразование целого из внутренней формы во внешнюю (вывод целого
числа)<span style='display:none;mso-hide:all'>елого зование из внутренней формы
во внешнюю ((&quot;звольной системы счисления в десятичную. шней формы во
внутреннюю, и наоборот) </span>.<span style='mso-spacerun:yes'>  </span>В
преобразовании используется тот факт, что значение младшей цифры целого числа n
равно остатку от деления его на 10, вторая цифра - остатку от деления на 10
частного n/10 и т.д.. В основе алгоритма положен цикл, в котором на каждом шаге
получается значение очередной цифры справа как остаток от деления числа на 10,
а само число уменьшается в 10 раз.<span style='mso-spacerun:yes'> 
</span>Поскольку цифры получаются в обратном порядке (по-арабски), массив
символов также необходимо заполнять от конца к началу. Для этого нужно либо
вычислить заранее количество цифр, либо заполнять лишние позиции слева нулями
или пробелами. </p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------44-09.cpp</p>

<p class=a0>//---- Вывод целого десятичного числа</p>

<p class=a0><span style='mso-spacerun:yes'> </span>void IntToString(char c[],
int n)</p>

<p class=a0><span style='mso-spacerun:yes'> </span>{ int nn,k; </p>

<p class=a0><span style='mso-spacerun:yes'> </span>for (nn=n, k=0; nn!=0; k++,
nn/=10); <span style='mso-tab-count:1'>      </span>// Подсчет количества цифр
числа</p>

<p class=a0><span style='mso-spacerun:yes'> </span>c[k] = '\0';<span
style='mso-spacerun:yes'>                                          </span><span style='mso-tab-count:
1'>   </span>// Конец строки</p>

<p class=a0><span style='mso-spacerun:yes'> </span>for (k--; k &gt;=0; k--, n
/= 10)<span style='mso-spacerun:yes'>               </span><span
style='mso-tab-count:1'>     </span>// Получение цифр числа</p>

<p class=a0><span style='mso-spacerun:yes'> </span>c[k] = n % 10 + '0';<span
style='mso-spacerun:yes'>                            </span><span
style='mso-tab-count:1'>    </span>// в обратном порядке</p>

<p class=a0><span style='mso-spacerun:yes'> </span>}</p>

<p class=a>При преобразовании дробной части во внешнюю форму используется тот
факт, что при умножении дробной части на 10 (точнее, на основание системы
счисления) очередная цифра «вылезает» в целую часть. Из нее формируется символ,
после чего целая часть отбрасывается.</p>

<p class=MsoPlainText><span style='mso-bidi-font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=a0>//------------------------------------------------------44-10.cpp</p>

<p class=a0>//---- Вывод вещественного десятичного числа</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>void FloatToString(char c[], double v)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>{ int i,nn,k,kk; <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for (nn=v, k=0; nn!=0; k++, nn/=10);<span
style='mso-tab-count:1'>        </span>// </span>Подсчет<span style='mso-ansi-language:
EN-US'> </span>количества<span style='mso-ansi-language:EN-US'> </span>цифр<span
lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US"> </span>kk=k-1; c[k++] = '.';<span
style='mso-tab-count:3'>                               </span>// целой части
числа</p>

<p class=a0><span style='mso-spacerun:yes'> </span>for (nn=v; kk &gt;=0; kk--,
nn /= 10)<span style='mso-tab-count:1'>            </span>// Получение цифр
числа</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span style='mso-tab-count:
1'>           </span>c[kk] = nn % 10 + '0';<span style='mso-tab-count:2'>                 </span>//
в обратном порядке</p>

<p class=a0><span style='mso-spacerun:yes'> </span>v-=(int)v;<span
style='mso-tab-count:4'>                                               </span>//
Убрать целую часть</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>for</span> (<span lang=EN-US style='mso-ansi-language:
EN-US'>i</span>=0; <span lang=EN-US style='mso-ansi-language:EN-US'>i</span>&lt;6;
<span lang=EN-US style='mso-ansi-language:EN-US'>i</span>++) {</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>v</span> *= 10.;<span style='mso-tab-count:
3'>                                    </span>// *10 - очередная цифра</p>

<p class=a0><span style='mso-tab-count:1'>            </span>c[k++]=(int)v +
'0';<span style='mso-tab-count:2'>                      </span>// в целой части
- записать</p>

<p class=a0><span style='mso-tab-count:1'>            </span>v -= (int)v;<span
style='mso-tab-count:3'>                                  </span>// и отбросить</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=a0><span style='mso-spacerun:yes' lang="EN-US"> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>c</span>[<span lang=EN-US
style='mso-ansi-language:EN-US'>k</span>]=0; }</p>

<p class=a>Фрагменты вывода целой и дробной частей «сшиваются» путем
запоминания местонахождения в строке символа «точка», разделяющего целую и
дробную части.</p>

<p class=a>При приведении дробной части к внутренней форме приходится
запоминать значение текущей степени <b style='mso-bidi-font-weight:normal'><a name="m62">10<sup>-<span lang=EN-US style='mso-ansi-language:
EN-US'>k</span></sup><span lang=EN-US> </span></b>для умножения очередной цифры
дробной части.</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------44-11.cpp</p>

<p class=a0>//----- Ввод десятичного вещественного числа</p>

<p class=a0><span style='mso-spacerun:yes'> </span>double StringToFloat(char
c[]){</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>int i;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>double n,v;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for (i=0; !(c[i]&gt;='0' &amp;&amp;
c[i]&lt;='9'); i++)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span>if (c[i]=='\0') return 0;<span style='mso-tab-count:2'>                </span>//
</span>Поиск<span style='mso-ansi-language:EN-US'> </span>первой<span
style='mso-ansi-language:EN-US'> </span>цифры<span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for (n=0; c[i]&gt;='0' &amp;&amp;
c[i]&lt;='9'; i++)<span style='mso-spacerun:yes'>     </span><span
style='mso-tab-count:1'>    </span>// </span>Накопление<span style='mso-ansi-language:
EN-US'> </span>целого<span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0><span style='mso-spacerun:yes' lang="EN-US"> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>n</span> = <span lang=EN-US
style='mso-ansi-language:EN-US'>n</span> * 10 + <span lang=EN-US
style='mso-ansi-language:EN-US'>c</span>[<span lang=EN-US style='mso-ansi-language:
EN-US'>i</span>] - '0';<span style='mso-spacerun:yes'>                  
</span><span style='mso-tab-count:2'>                       </span>//
&quot;цифра за цифрой&quot;</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>if (c[i]!='.') return n;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for (i++, v=0.1; c[i]&gt;='0' &amp;&amp;
c[i]&lt;='9';i++){<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:1; mso-ansi-language:EN-US' lang="EN-US">            </span>n+=v*(c[i] - '0');<span
style='mso-tab-count:3'>                           </span>// Взвешивание цифр<span
style='mso-tab-count:1'>    </span></p>

<p class=a0><span style='mso-tab-count:1'>            </span>v=v/10;<span
style='mso-tab-count:4'>                                      </span>// весом
разряда дробной части</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>return n; }</span></p>

<p class=a>Преобразование, в котором внешняя форма числа задана в другой
системе счисления, выполняются аналогично, только вместо числа 10 используется
основание системы, а для систем счисления, больших 10, используется особое
преобразование символов-цифр во внутреннее представление:</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>if</span> (<span
lang=EN-US style='mso-ansi-language:EN-US'>n</span> &lt;=9) <span lang=EN-US
style='mso-ansi-language:EN-US'>c</span> = <span lang=EN-US style='mso-ansi-language:
EN-US'>n</span> + '0'; <span lang=EN-US style='mso-ansi-language:EN-US'>else</span><span
lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:EN-US'>c</span> = <span
lang=EN-US style='mso-ansi-language:EN-US'>n</span> - 10 + '<span lang=EN-US
style='mso-ansi-language:EN-US'>A</span>';<span style='mso-tab-count:2'>             </span>//
Внутренняя во внешнюю</p>

<p class=a0><span style='font-family:"Times New Roman CYR";mso-bidi-font-family:
"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>if</span> (<span
lang=EN-US style='mso-ansi-language:EN-US'>c</span> &gt;='0' &amp;&amp; <span
lang=EN-US style='mso-ansi-language:EN-US'>c</span> &lt;='9') <span lang=EN-US
style='mso-ansi-language:EN-US'>n</span> = <span lang=EN-US style='mso-ansi-language:
EN-US'>c</span> - '0'; <span style='mso-tab-count:3'>                          </span>//
Внешняя во внутреннюю</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>else</span><span
lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:EN-US'>if</span> (<span
lang=EN-US style='mso-ansi-language:EN-US'>c</span> &gt;='<span lang=EN-US
style='mso-ansi-language:EN-US'>A</span>' &amp;&amp; <span lang=EN-US
style='mso-ansi-language:EN-US'>c</span> &lt;='<span lang=EN-US
style='mso-ansi-language:EN-US'>F</span>') <span lang=EN-US style='mso-ansi-language:
EN-US'>c</span> = <span lang=EN-US style='mso-ansi-language:EN-US'>c</span> - '<span
lang=EN-US style='mso-ansi-language:EN-US'>A</span>' + 10;</p>

<h3>Посимвольная и пословная обработка.</h3>

<p class=a>Последовательность символов в строке подчиняется некоторому закону
следования, иначе говоря, <b style='mso-bidi-font-weight:normal'><a name="m63">формату. </b>Например,
строка, содержащая слова, может быть определена как последовательность цепочек
символов слова, разделенных цепочками пробелов. </p>

<p class=a>Одну и ту же программу обработки строки текста можно написать
разными способами. Если речь идет о формате текстовой строки, то отслеживать
его можно двумя способами (см.<b style='mso-bidi-font-weight:normal'><a name="m64">3.8</b>):</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>используя <b style='mso-bidi-font-weight:normal'><a name="m65">логику
переменных состояния</b>. В этом случае программа содержит основной цикл
посимвольного просмотра строки, а в зависимости от текущего символа меняются
значения переменной состояния. Например, для выделения слов достаточно
использовать счетчик символов внутри слова, который обнуляется на каждом
пробеле и увеличивается на 1 каждым символом слова. При этом в момент обнуления
ненулевого счетчика программа находится в конце текущего слова;</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>при использовании <b style='mso-bidi-font-weight:
normal'><a name="m66">структурной логики</b> устанавливается однозначное соответствие между
элементами формата (например, повторениями) и управляющими конструкциями
алгоритма (соответственно, циклами). Описание формата как бы «зашивается» в
текст алгоритма. Например, при пословной обработке строки должен быть цикл, за
каждый шаг которого просматривается одно слово (включая пробелы перед ним).
Внутри него должны быть два цикла – по цепочке пробелов и по цепочке символов
слова.</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------44-12.cpp</p>

<p class=a0>//---- Поиск слова максимальной длины - посимвольная обработка</p>

<p class=a0>// Функция возвращает индекс начала слова или 1, если нет слов</p>

<p class=a0>// Логика переменной состояния – <span lang=EN-US style='mso-ansi-language:
EN-US'>n</span> – счетчик символов слова</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>find</span>(<span lang=EN-US
style='mso-ansi-language:EN-US'>char</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>s</span>[]) {</p>

<p class=a0><span style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span><span lang=EN-US>int i,n,lmax,b;<o:p></o:p></span></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for (i=0,n=0,lmax=0,b=-1; s[i]!=0; i++){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span><span style='mso-tab-count:1'>           </span></span>if
(s[i]!=' ') n++;<span style='mso-spacerun:yes'>            </span><span
style='mso-tab-count:1'>   </span>// символ слова увеличить счетчик</p>

<p class=a0><span style='mso-tab-count:1'>            </span>else {<span
style='mso-spacerun:yes'>            </span><span style='mso-tab-count:2'>                </span>//
перед сбросом счетчика</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>if (n &gt; lmax) { lmax=n; b=i-n; }<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:2; mso-ansi-language:EN-US' lang="EN-US">                        </span>n=0;<span
style='mso-spacerun:yes'>               </span><span style='mso-tab-count:1'>   </span>//
фиксация максимального значения</p>

<p class=a0><span style='mso-tab-count:2'>                        </span>}}<span
style='mso-tab-count:2'>                      </span>// то же самое для
последнего слова</p>

<p class=a0><span style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span><span lang=EN-US>if (n &gt; lmax) { lmax=n; b=i-n;
}<o:p></o:p></span></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>return</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>b</span>; }</p>

<p class=a0>//------------------------------------------------------44-13.cpp</p>

<p class=a0>//---- Поиск слова максимальной длины - пословная обработка</p>

<p class=a0>// Структурная логика – 3 цикла: просмотр слов, пробелов и символов</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>find</span>(<span lang=EN-US
style='mso-ansi-language:EN-US'>char</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>in</span>[]){</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>int i=0, k, m, b;<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US"> </span>b=-1; m=0;</p>

<p class=a0><span style='mso-spacerun:yes'>      </span>while (in[i]!=0) {<span
style='mso-spacerun:yes'>         </span><span style='mso-tab-count:1'>           </span>//
Цикл пословного просмотра строки </p>

<p class=a0><span style='mso-spacerun:yes'>      </span>while (in[i]==' ')
i++;<span style='mso-spacerun:yes'>     </span><span style='mso-tab-count:1'>         </span>//
Пропуск пробелов перед словом</p>

<p class=a0><span style='mso-spacerun:yes'>      </span><span lang=EN-US
style='mso-ansi-language:EN-US'>for (k=0;in[i]!=' ' &amp;&amp; in[i]!=0;
i++,k++); // </span>Подсчет<span style='mso-ansi-language:EN-US'> </span>длины<span
style='mso-ansi-language:EN-US'> </span>слова<span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US">           </span>if (k&gt;m){<span
style='mso-spacerun:yes'>             </span><span style='mso-tab-count:2'>                        </span>//
Контекст выбора максимума</p>

<p class=a0><span style='mso-spacerun:yes'>           </span>m=k; b=i-k; }<span
style='mso-spacerun:yes'>          </span><span style='mso-tab-count:1'>        </span>//
Одновременно запоминается</p>

<p class=a0><span style='mso-spacerun:yes'>      </span>}<span
style='mso-spacerun:yes'>                           </span><span
style='mso-tab-count:2'>              </span>// индекс начала</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>return</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>b</span>; }</p>

<p class=MsoPlainText><span style='mso-bidi-font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=a>По завершении посимвольного просмотра строки последнее слово (если
после него нет пробела) оказывается необработанным. Поэтому контекст фиксации
максимума повторяется после выхода из цикла. </p>

<p class=a>Здесь можно проиллюстрировать еще один принцип разработки программ: после
ее написания для произвольной «усредненной» ситуации необходимо проверить ее
«на крайности». В данном случае, при отсутствии в строке слов (строка состоит
из пробелов или пуста), установленное начальное значение <b style='mso-bidi-font-weight:
normal'><a name="m67"><span lang=EN-US style='mso-ansi-language:EN-US'>b</span>=-1 </b>будет возвращено
в качестве результата (что и задумывалось при установке значения –1 как
недопустимого).</p>

<a name="lr4"><h3>Лабораторный практикум</h3>

<p class="a4">1.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>В строке найти последовательности цифр, каждую из них считать числом в 
той системе счисления, которая соответствует максимальной цифре, заменить числа 
в строке символами с кодами, полученными из этих чисел. Пример:
<span lang="EN-US">aaa</span>010101<span lang="EN-US">bbb</span>343<span lang="EN-US">ccc</span> 
– двоичная и пятиричная системы счисления.</p>
<p class="a4">2.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>В строке найти последовательности цифр, каждую из них считать числом в 
той системе счисления, которая соответствует первой цифре, заменить числа в 
строке символами с кодами, полученными из этих чисел. Пример: <span lang="EN-US">
aaa</span>2010101<span lang="EN-US">bbb</span>8343<span lang="EN-US">ccc</span> 
– двоичная и восьмиричная системы счисления.</p>
<p class="a4">3.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Для двух чисел,&nbsp; представленных в виде своих цифр и символов
<span lang="EN-US">A</span>…<span lang="EN-US">F </span>определить системы 
счисления каждого, в которых они будут равны, например 134&nbsp; и 30 - пятиричная и 
двенадцатиричная.</p>
<p class="a4">4.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Найти в строке последовательность одинаковых символов максимальной длины 
и переписать в выходную строку в виде <span lang="EN-US">n</span>1,<span lang="EN-US">n</span>2<span lang="EN-US">c
</span>– начало и длина фрагмента и символ, например <span lang="EN-US">
abcddddddddddddedfg</span> -&gt; 3,12<span lang="EN-US">d</span>. Из исходной 
строки фрагмент удалить. Повторять этот процесс. Пока в строке есть 
последовательности, в конце переписать остаток в выходную строку.</p>
<p class="a4">5.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Преобразовать&nbsp; строку, содержащую&nbsp;&nbsp; выражение на Си с операциями 
(=,==,!=,a+=,a-=), в&nbsp; строку,&nbsp; содержащую&nbsp; эти же операции с синтаксисом языка 
Паскаль (:=,=,#,a<span lang="EN-US">bc</span>=a<span lang="EN-US">bc</span>+,a<span lang="EN-US">bc</span>=a<span lang="EN-US">bc</span>-). 
Т.е. идентификатор перед операцией +- или -= должен дублироваться.</p>
<p class="a4">6.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Найти в строке два одинаковых фрагмента (не включающих в себя пробелы) 
длиной более 5 символов, скопировать их в выходную строку и удалить. Повторять 
этот процесс, пока такие фрагменты находятся. Остаток строки добавить в 
выходную.</p>
<p class="a4">7.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Найти во входной строке самую внутреннюю пару скобок
<span style="font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">{...}</span> 
и переписать в выходную строку содержащиеся между ними символы. Во входной 
строке фрагмент удаляется. Повторять этот процесс, пока во входной строке не 
останется скобок, остаток также переписать в выходную строку.</p>
<p class="a4">8.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Если в строке встречаются подряд два числа, разделенные запятыми –
<span lang="EN-US">n</span>1,<span lang="EN-US">n</span>2, то последующий 
фрагмент из <span lang="EN-US">n</span>2 символов повторяется <span lang="EN-US">
n</span>1 раз. Если встречается одно число, то <span lang="EN-US">n</span>1 раз 
повторяется символ, например, <span lang="EN-US">aaa</span>4,3<span lang="EN-US">abcdef
</span>преобразуется в <span lang="EN-US">aaaabcaabcabcabcdef</span>.</p>
<p class="a4">9.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>&quot;Перевернуть&quot; в строке все слова. (Например<span style="font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">:
</span>&quot;Жили были дед и баба&quot; - &quot;илиЖ илиб дед и абаб&quot;). Удалить слова – 
палинандромы.</p>
<p class="a4">10.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp; </span>
Определить, является ли строка палиандромом (например, «я у ребят беру наган») – 
удалить пробелы, найти фрагменты – палиандромы максимальной длины и удалить.</p>
<p class="a4">11.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp; </span>
Функция переписывает строку. Если она находит в строке число, то вместо него она 
переписывает в выходную строку соответствующее по счету слово из входной строки. 
(например, &quot;<span lang="EN-US" style="font-family: 'Times New Roman',serif">aaa</span><span lang="EN-US" style="font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
</span><span lang="EN-US" style="font-family: 'Times New Roman',serif">bb</span><span style="font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">1</span><span lang="EN-US" style="font-family: 'Times New Roman',serif">bb</span><span lang="EN-US" style="font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
</span><span lang="EN-US" style="font-family: 'Times New Roman',serif">cc</span><span style="font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">2</span><span lang="EN-US" style="font-family: 'Times New Roman',serif">cc</span>&quot; 
- &quot;<span lang="EN-US" style="font-family: 'Times New Roman',serif">aaa</span><span lang="EN-US" style="font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
</span><span lang="EN-US" style="font-family: 'Times New Roman',serif">bbaaabb</span><span lang="EN-US" style="font-family:
&quot;Times New Roman&quot;,&quot;serif&quot;"> </span>
<span lang="EN-US" style="font-family: 'Times New Roman',serif">ccbb</span><span style="font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">1</span><span lang="EN-US" style="font-family: 'Times New Roman',serif">bbcc</span>&quot;)<span style="font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.</span> 
Повторять этот процесс, пока в строке не останется чисел. Отследить возможное 
зацикливание, когда два слова ссылаются друг на другую.</p>
<p class="a4">12.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp; </span>
Программа – шифровальщик. Коды символов записать в промежуточную строку в виде 
символов-цифр (во внешней форме) в системе счисления основанием
<span lang="EN-US">N</span>1. Для системы счисления <span lang="EN-US">N</span>2 
определить максимальное количество цифр числа <span lang="EN-US">M</span>, 
которое может быть записано в виде 1 байта. Каждые <span lang="EN-US">M </span>
цифр рассматривать как код символа в системе счисления <span lang="EN-US">N</span>2. 
Полученные коды записать в виде зашифрованного текста.</p>

<h3>Вопросы без ответов<span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></h3>

<p class=a>Содержательно определите действие, производимое над строкой.
Напишите вызов функции (входные неизменяемые строки могут быть представлены
фактическими параметрами – строковыми константами).</p>

<p class=a4><b style='mso-bidi-font-weight:normal'><a name="m68">Пример оформления тестового
задания.<o:p></o:p></b></p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>//------------------------------------------------------24-1</span>4<span
lang=EN-US style='mso-ansi-language:EN-US'>.cpp<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>int F(char c[]){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for (int i=0,ns=0; c[i]!=0; i++)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span>if (c[i]!=' ' &amp;&amp; (c[i+1]==' ' || c[i+1]==0)) ns++;<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US"> </span>return ns;}</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>#include &lt;stdio.h&gt;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>void main(){
printf(&quot;words=%d\n&quot;,F(&quot;aaaa bbb ccc dddd&quot;));}<span
style='mso-spacerun:yes'>   </span>// </span>Выведет<span lang=EN-US
style='mso-ansi-language:EN-US'> - 4<o:p></o:p></span></p>

<p class=a4>Функция работает со строкой, поскольку в качестве параметра
получает массив символов, которую просматривает до обнаружения символа конца
строки. Переменная <b style='mso-bidi-font-weight:normal'><a name="m69"><span lang=EN-US
style='mso-ansi-language:EN-US'>ns</span><span lang=EN-US> </span></b>является
счетчиком. Условие, выполнение которого увеличивает счетчик – текущий символа
не является пробелом, а следующий – пробел, либо конец строки. Это условие
обнаруживает конец слова. Таким образом, программа подсчитывает количество слов
в строке, разделенных пробелами.</p>

<p class=a4><o:p>&nbsp;</o:p></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>//------------------------------------------------------24-1</span>5<span
lang=EN-US style='mso-ansi-language:EN-US'>.cpp<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>//-------------------------------------------------
1<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>void F1(char c[])<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>{ int i,j;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for (i=0; c[i] !='\0'; i++);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for (j=0,i--; i&gt;j; i--,j++)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span>{ char s; s=c[i]; c[i]=c[j]; c[j]=s; }}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>//-------------------------------------------------
2<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>int F2(char s)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>{ if (s &gt;='0' &amp;&amp; s &lt;='9') return
s - '0';<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US"> </span>else return -1; }</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>//-------------------------------------------------
3<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>void F3(char c[]){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for ( int i=0; c[i] !='\0'; i++)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span>if (c[i] &gt;='a' &amp;&amp; c[i] &lt;='z')<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span><span
style='mso-spacerun:yes'>   </span></span>c[i] += 'A' - 'a'; }</p>

<p class=a0><span
style='mso-spacerun:yes'> </span>//-------------------------------------------------
4</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>int F4(char c[])<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>{ int i,old,nw;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>   </span>for (i=0, old=0, nw=0; c[i] !='\0'; i++) {<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span>if (c[i]==' ') old = 0;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span><span
style='mso-spacerun:yes'>   </span>else { if (old==0) nw++; old=1; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span>if (c[i]== '\0') break;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span>}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>return nw; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>//-------------------------------------------------
5<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>void F5(char c[]){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for ( int i=0, j=0; c[i] !='\0'; i++)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span>if (c[i] !=' ') c[j++] = c[i];<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>c[j] = '\0'; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>//-------------------------------------------------
6<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>void F6(char c[], int nn)<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US"> </span>{ int k,mm;</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for (mm=nn, k=0; mm !=0; mm /=10 ,k++);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for (c[k--]='\0'; k&gt;=0; k--)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span>{ c[k]= nn % 10 + '0'; nn /=10; }<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US"> </span>}</p>

<p class=a0><span
style='mso-spacerun:yes'> </span>//-------------------------------------------------
7</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>int F7(char c[])<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>{ int i,s;<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US"> </span>for (i=0; c[i] !='\0'; i++)</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>  </span>if
(c[i] &gt;='0' &amp;&amp; c[i]&lt;='7') break;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for (s=0; c[i] &gt;='0' &amp;&amp; c[i]
&lt;='7'; i++)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span></span>s = s * 8 + c[i] - '0';</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>return s; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>//-------------------------------------------------
8<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>int F8(char c[])<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>{ int n,k,ns;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>  </span>for (n=0,ns=0; c[n] !='\0'; n++) {<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span>for (k=0; n-k !=0 &amp;&amp; c[n+k] !='\0'; k++)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span><span
style='mso-spacerun:yes'>   </span>if (c[n-k] != c[n+k]) break;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span></span>if (k &gt;=3) ns++;</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span
style='mso-spacerun:yes'>  </span>}</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>return ns; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>//-------------------------------------------------
9<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>int F9(char c1[],char c2[])<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>{ int i,j;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>   </span>for (i=0; c1[i] !='\0'; i++) {<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span>for (j=0; c2[j] !='\0'; j++)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span><span
style='mso-spacerun:yes'>   </span>if (c1[i+j] != c2[j]) break;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span>if (c2[j] =='\0') return i;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span></span>}</p>

<p class=a0><span style='mso-spacerun:yes'> </span>return -1;}</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>//------------------------------------------------
10<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>char F10(char c[])<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>{ char m,z; int n,s,i;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>   </span>for (s=0,m='A'; m &lt;='Z'; m++) {<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span>for (n=0, i=0; c[i] !='\0'; i++)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span><span
style='mso-spacerun:yes'>   </span>if (c[i]==m) n++;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span><span
style='mso-spacerun:yes'>   </span>if (n &gt; s) { z=m; s=n; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span>}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>return z; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>//------------------------------------------------
11<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>void F11(char c[], double x)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>{ int i;<span style='mso-spacerun:yes'> 
</span>x-=(int)x;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>  </span>for (c[0]='.', x -= (int)x, i=1; i&lt;6; i++)
{<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span>x *= 10.; c[i]=(int)x + '0'; x -= (int)x; }<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US"> </span>c[i]='\0'; }</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>//------------------------------------------------
12<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>int F12(char c[]){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for (int i=0; c[i]!=0; i++){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>if (c[i]==' ') continue;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>for (int j=i+1; c[j]==c[i]; j++);<o:p></o:p></span></p>

<p class=a0 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>for (; c[j]!=0; j++){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>for (int k=0; i+k&lt;j
&amp;&amp; c[i+k]==c[j+k]; k++);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>if (k&gt;=4) return i;<o:p></o:p></span></p>

<p class=a0 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>}} return -1; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>//-----------------------------------------------
13<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>void F13(char c[])<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>{ int i,j,cm;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>  </span>for (i=j=cm=0; c[i] !='\0'; i++) {<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span>if (c[i]=='*' &amp;&amp; c[ i+1]=='/') { cm--, i++; continue; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span>if (c[i]=='/' &amp;&amp; c[ i+1]=='*') { cm++, i++; continue; }<o:p></o:p></span></p>

<p class=a0 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-spacerun:yes'>  </span>if (cm==0) c[j++ ] = c[i];<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span>}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>c[j]=0; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

</div>

</body>

</html>
