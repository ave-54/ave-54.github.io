<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 11">
<meta name=Originator content="Microsoft Word 11">
<link rel="File-List" href="074.files/filelist.xml">

<link rel=Edit-Time-Data href="074.files/editdata.mso">
<title>Романов Е.Л. Беседы о программировании</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="metricconverter"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Романов</o:Author>
  <o:Template>Книга.dot</o:Template>
  <o:LastAuthor>www.PHILka.RU</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>480</o:TotalTime>
  <o:LastPrinted>2004-11-18T13:02:00Z</o:LastPrinted>
  <o:Created>2008-02-13T19:58:00Z</o:Created>
  <o:LastSaved>2008-02-13T19:58:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>3352</o:Words>
  <o:Characters>19108</o:Characters>
  <o:Company>NSTU_VT</o:Company>
  <o:Bytes>11776</o:Bytes>
  <o:Lines>159</o:Lines>
  <o:Paragraphs>44</o:Paragraphs>
  <o:CharactersWithSpaces>22416</o:CharactersWithSpaces>
  <o:Version>11.6360</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DoNotHyphenateCaps/>
  <w:DrawingGridHorizontalSpacing>2,85 пт</w:DrawingGridHorizontalSpacing>
  <w:DrawingGridVerticalSpacing>2,85 пт</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DrawingGridVerticalOrigin>99,25 пт</w:DrawingGridVerticalOrigin>
  <w:Compatibility>
   <w:WW6BorderRules/>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
   <w:UseWord97LineBreakingRules/>
   <w:SelectEntireFieldWithStartOrEnd/>
   <w:UseWord2002TableStyleRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:"MS Mincho";
	panose-1:2 2 6 9 4 2 5 8 3 4;
	mso-font-alt:"\FF2D\FF33 \660E\671D";
	mso-font-charset:128;
	mso-generic-font-family:roman;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:1 134676480 16 0 131072 0;}
@font-face
	{font-family:"Times New Roman CYR";
	panose-1:2 2 6 3 5 4 5 2 3 4;
	mso-font-charset:204;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:536902279 -2147483648 8 0 511 0;}
@font-face
	{font-family:"Arial CYR";
	panose-1:2 11 6 4 2 2 2 2 2 4;
	mso-font-charset:204;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:536902279 -2147483648 8 0 511 0;}
@font-face
	{font-family:"\@MS Mincho";
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-charset:128;
	mso-generic-font-family:roman;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:1 134676480 16 0 131072 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
h1
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial CYR";
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:14.0pt;
	mso-bidi-font-weight:normal;}
h2
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial CYR";
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-font-weight:normal;
	font-style:italic;
	mso-bidi-font-style:normal;}
h3
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial CYR";
	mso-bidi-font-family:"Times New Roman";
	font-weight:normal;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:center 8.0cm right 16.0cm;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:EN-US;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:center 8.0cm right 16.0cm;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:EN-US;}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
p.a, li.a, div.a
	{mso-style-name:текст;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:36.0pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a0, li.a0, div.a0
	{mso-style-name:программа;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:Arial;
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a1, li.a1, div.a1
	{mso-style-name:список;
	mso-style-parent:текст;
	margin-top:6.0pt;
	margin-right:18.45pt;
	margin-bottom:0cm;
	margin-left:35.45pt;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	tab-stops:42.55pt;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a2, li.a2, div.a2
	{mso-style-name:определение;
	mso-style-parent:текст;
	margin-top:12.0pt;
	margin-right:32.9pt;
	margin-bottom:12.0pt;
	margin-left:35.45pt;
	text-align:justify;
	text-indent:.55pt;
	mso-pagination:widow-orphan;
	border:none;
	mso-border-alt:solid windowtext 1.5pt;
	padding:0cm;
	mso-padding-alt:1.0pt 1.0pt 1.0pt 1.0pt;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a3, li.a3, div.a3
	{mso-style-name:эпиграф;
	margin-top:12.0pt;
	margin-right:32.9pt;
	margin-bottom:12.0pt;
	margin-left:5.0cm;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Arial CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-style:italic;
	mso-bidi-font-style:normal;}
p.a4, li.a4, div.a4
	{mso-style-name:"от края";
	mso-style-parent:текст;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a5, li.a5, div.a5
	{mso-style-name:Формула;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	mso-ansi-language:EN-US;
	layout-grid-mode:line;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.a6, li.a6, div.a6
	{mso-style-name:"без формата";
	mso-style-parent:программа;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:Arial;
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
 /* Page Definitions */
 @page
	{mso-footnote-separator:url("074.files/header.htm") fs;
	mso-footnote-continuation-separator:url("074.files/header.htm") fcs;
	mso-endnote-separator:url("074.files/header.htm") es;
	mso-endnote-continuation-separator:url("074.files/header.htm") ecs;}
@page Section1
	{size:21.0cm 842.0pt;
	margin:33.45pt 42.55pt 72.0pt 89.85pt;
	mso-header-margin:14.2pt;
	mso-footer-margin:31.75pt;
	mso-header:url("074.files/header.htm") h1;
	mso-even-footer:url("074.files/header.htm") ef1;
	mso-footer:url("074.files/header.htm") f1;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:-2;
	mso-list-type:simple;
	mso-list-template-ids:-1;}
@list l0:level1
	{mso-level-start-at:0;
	mso-level-text:*;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	margin-left:0cm;
	text-indent:0cm;}
@list l1
	{mso-list-id:14116062;
	mso-list-type:simple;
	mso-list-template-ids:68747265;}
@list l1:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:18.0pt;
	mso-level-number-position:left;
	margin-left:18.0pt;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l2
	{mso-list-id:19210001;
	mso-list-type:simple;
	mso-list-template-ids:2131287754;}
@list l2:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l3
	{mso-list-id:24336118;
	mso-list-type:simple;
	mso-list-template-ids:2131287754;}
@list l3:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l4
	{mso-list-id:45446861;
	mso-list-type:simple;
	mso-list-template-ids:-1035561468;}
@list l4:level1
	{mso-level-start-at:3;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;
	font-family:"Times New Roman";}
@list l5
	{mso-list-id:155734713;
	mso-list-type:simple;
	mso-list-template-ids:68747265;}
@list l5:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:18.0pt;
	mso-level-number-position:left;
	margin-left:18.0pt;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l6
	{mso-list-id:219753174;
	mso-list-type:simple;
	mso-list-template-ids:2131287754;}
@list l6:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l7
	{mso-list-id:291373071;
	mso-list-type:simple;
	mso-list-template-ids:2131287754;}
@list l7:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l8
	{mso-list-id:308751901;
	mso-list-type:simple;
	mso-list-template-ids:2131287754;}
@list l8:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l9
	{mso-list-id:327908262;
	mso-list-type:simple;
	mso-list-template-ids:68747279;}
@list l9:level1
	{mso-level-tab-stop:18.0pt;
	mso-level-number-position:left;
	margin-left:18.0pt;
	text-indent:-18.0pt;}
@list l10
	{mso-list-id:361201175;
	mso-list-type:simple;
	mso-list-template-ids:68747265;}
@list l10:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:18.0pt;
	mso-level-number-position:left;
	margin-left:18.0pt;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l11
	{mso-list-id:439226077;
	mso-list-type:simple;
	mso-list-template-ids:2131287754;}
@list l11:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l12
	{mso-list-id:504125836;
	mso-list-type:simple;
	mso-list-template-ids:2131287754;}
@list l12:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l13
	{mso-list-id:550314046;
	mso-list-type:simple;
	mso-list-template-ids:2131287754;}
@list l13:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l14
	{mso-list-id:585117856;
	mso-list-type:simple;
	mso-list-template-ids:2131287754;}
@list l14:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l15
	{mso-list-id:641078275;
	mso-list-type:simple;
	mso-list-template-ids:-1390630326;}
@list l15:level1
	{mso-level-tab-stop:18.0pt;
	mso-level-number-position:left;
	margin-left:18.0pt;
	text-indent:-18.0pt;}
@list l16
	{mso-list-id:753820140;
	mso-list-type:simple;
	mso-list-template-ids:-1;}
@list l16:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F02D;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	mso-level-legacy:yes;
	mso-level-legacy-indent:54.0pt;
	mso-level-legacy-space:0cm;
	margin-left:90.0pt;
	text-indent:-54.0pt;
	font-family:Symbol;}
@list l17
	{mso-list-id:829055557;
	mso-list-type:simple;
	mso-list-template-ids:68747279;}
@list l17:level1
	{mso-level-tab-stop:18.0pt;
	mso-level-number-position:left;
	margin-left:18.0pt;
	text-indent:-18.0pt;}
@list l18
	{mso-list-id:997422636;
	mso-list-type:simple;
	mso-list-template-ids:2131287754;}
@list l18:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l19
	{mso-list-id:1086998756;
	mso-list-type:simple;
	mso-list-template-ids:2131287754;}
@list l19:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l20
	{mso-list-id:1126922596;
	mso-list-type:simple;
	mso-list-template-ids:2131287754;}
@list l20:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l21
	{mso-list-id:1150681741;
	mso-list-type:simple;
	mso-list-template-ids:2131287754;}
@list l21:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l22
	{mso-list-id:1153449163;
	mso-list-type:simple;
	mso-list-template-ids:2131287754;}
@list l22:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l23
	{mso-list-id:1194078894;
	mso-list-type:simple;
	mso-list-template-ids:2131287754;}
@list l23:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l24
	{mso-list-id:1219903422;
	mso-list-type:simple;
	mso-list-template-ids:1242228614;}
@list l24:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;
	font-family:"Times New Roman";}
@list l25
	{mso-list-id:1223759624;
	mso-list-type:simple;
	mso-list-template-ids:2131287754;}
@list l25:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l26
	{mso-list-id:1235971197;
	mso-list-type:simple;
	mso-list-template-ids:2131287754;}
@list l26:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l27
	{mso-list-id:1395006293;
	mso-list-type:simple;
	mso-list-template-ids:-1646633052;}
@list l27:level1
	{mso-level-text:%1\F02E;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	mso-level-legacy:yes;
	mso-level-legacy-indent:18.0pt;
	mso-level-legacy-space:0cm;
	margin-left:18.0pt;
	text-indent:-18.0pt;}
@list l28
	{mso-list-id:1443762401;
	mso-list-type:simple;
	mso-list-template-ids:2131287754;}
@list l28:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l29
	{mso-list-id:1460100819;
	mso-list-type:simple;
	mso-list-template-ids:2131287754;}
@list l29:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l30
	{mso-list-id:1490289828;
	mso-list-type:simple;
	mso-list-template-ids:2131287754;}
@list l30:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l31
	{mso-list-id:1498185254;
	mso-list-type:simple;
	mso-list-template-ids:2131287754;}
@list l31:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l32
	{mso-list-id:1548567801;
	mso-list-type:simple;
	mso-list-template-ids:68747279;}
@list l32:level1
	{mso-level-tab-stop:18.0pt;
	mso-level-number-position:left;
	margin-left:18.0pt;
	text-indent:-18.0pt;}
@list l33
	{mso-list-id:1590429434;
	mso-list-type:simple;
	mso-list-template-ids:68747265;}
@list l33:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:18.0pt;
	mso-level-number-position:left;
	margin-left:18.0pt;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l34
	{mso-list-id:1757944385;
	mso-list-type:simple;
	mso-list-template-ids:68747279;}
@list l34:level1
	{mso-level-tab-stop:18.0pt;
	mso-level-number-position:left;
	margin-left:18.0pt;
	text-indent:-18.0pt;}
@list l35
	{mso-list-id:1902709211;
	mso-list-type:simple;
	mso-list-template-ids:2131287754;}
@list l35:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l36
	{mso-list-id:1949972418;
	mso-list-type:simple;
	mso-list-template-ids:68747279;}
@list l36:level1
	{mso-level-tab-stop:18.0pt;
	mso-level-number-position:left;
	margin-left:18.0pt;
	text-indent:-18.0pt;}
@list l37
	{mso-list-id:1965571684;
	mso-list-type:simple;
	mso-list-template-ids:2131287754;}
@list l37:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l38
	{mso-list-id:2008702181;
	mso-list-type:simple;
	mso-list-template-ids:-1688273568;}
@list l38:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l39
	{mso-list-id:2018118172;
	mso-list-type:simple;
	mso-list-template-ids:2131287754;}
@list l39:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;}
@list l40
	{mso-list-id:2018650096;
	mso-list-type:simple;
	mso-list-template-ids:-1745164180;}
@list l40:level1
	{mso-level-start-at:3;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:55.7pt;
	mso-level-number-position:left;
	margin-left:55.7pt;
	text-indent:-20.25pt;
	font-family:"Times New Roman";
	mso-ansi-font-weight:normal;}
@list l41
	{mso-list-id:2042049283;
	mso-list-type:hybrid;
	mso-list-template-ids:-1896864646 68747279 68747289 68747291 68747279 68747289 68747291 68747279 68747289 68747291;}
@list l41:level1
	{mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l41:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l41:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l41:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l41:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l41:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l41:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l41:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l41:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l42
	{mso-list-id:2118794086;
	mso-list-type:hybrid;
	mso-list-template-ids:-1117116694 -276935448 68747267 68747269 68747265 68747267 68747269 68747265 68747267 68747269;}
@list l42:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
@list l0:level1 lfo2
	{mso-level-start-at:1;
	mso-level-number-format:bullet;
	mso-level-numbering:continue;
	mso-level-text:\F02D;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	mso-level-legacy:yes;
	mso-level-legacy-indent:54.0pt;
	mso-level-legacy-space:0cm;
	margin-left:90.0pt;
	text-indent:-54.0pt;
	font-family:Symbol;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Обычная таблица";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-bidi-font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
<!--[if !mso]>
<style>
v\:*         { behavior: url(#default#VML) }
o\:*         { behavior: url(#default#VML) }
w\:*         { behavior: url(#default#VML) }
st1\:*       { behavior: url(#default#VML) }
.shape       { behavior: url(#default#VML) }
</style>
<![endif]--><!--[if gte mso 9]>
<xml><o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]-->
</head>

<body lang=RU style='tab-interval:36.0pt' background="back.gif">

<div class=Section1>

<h2><font face="Arial"><span lang=EN-US style='mso-ansi-language:EN-US'>7</span>.4. Рекурсия и
поисковые задачи</font></h2>

<p class=a4><b style='mso-bidi-font-weight:normal'><a name="m1">Рекурсия и комбинаторный
перебор. </b><span style='mso-bidi-font-weight:bold'>Самым очевидным и
неинтеллектуальным способом решения поисковых задач является полный перебор
всех возможных вариантов. Когда речь идет о переборе множества последовательных
значений, множества возможных пар и т.п., то программа содержит один или
несколько вложенных циклов (см. 2.3.). Когда же речь идет о переборе возможных
сочетаний, подмножеств, то есть о комбинаторике, то рекурсия возникает
естественным<span style='mso-spacerun:yes'>  </span>образом. Очередной шаг
алгоритма рассматривает возможные варианты увеличения последовательности
(подмножества) на один элемент и таким образом получает из одной задачи
размерности </span><span lang=EN-US style='mso-ansi-language:EN-US;mso-bidi-font-weight:
bold'>n</span><span style='mso-bidi-font-weight:bold'> несколько задач
размерности </span><span lang=EN-US style='mso-ansi-language:EN-US;mso-bidi-font-weight:
bold'>n</span><span style='mso-bidi-font-weight:bold'>+1, для которых он
естественным образом рекурсивно повторяется.<o:p></o:p></span></p>

<p class=a4><b
style='mso-bidi-font-weight:normal'>
<img border="0" src="Images/science.jpg" width="43" height="33">Комбинаторный генератор вариантов. </b><span
style='mso-bidi-font-weight:bold'>Сначала попробуем смоделировать в программе
процесс построения требуемой последовательности (подмножества) значений из
исходного множества. Парадокс рекурсивного подхода состоит в том, что перед
началом разработки следует предположить, что задача уже частично решена (на
самом деле – предыдущими шагами рекурсии), то есть из </span><span lang=EN-US
style='mso-ansi-language:EN-US;mso-bidi-font-weight:bold'>n</span><span
style='mso-bidi-font-weight:bold'> элементов исходного множества </span><span
lang=EN-US style='mso-ansi-language:EN-US;mso-bidi-font-weight:bold'>R</span><span
style='mso-bidi-font-weight:bold'> построена требуемая последовательность </span><span
lang=EN-US style='mso-ansi-language:EN-US;mso-bidi-font-weight:bold'>W</span><span
style='mso-bidi-font-weight:bold'> размерности </span><span lang=EN-US
style='mso-ansi-language:EN-US;mso-bidi-font-weight:bold'>k</span><span
style='mso-bidi-font-weight:bold'>. Рекурсивная функция должна рассмотреть все
возможные варианты «добавления» к </span><span lang=EN-US style='mso-ansi-language:
EN-US;mso-bidi-font-weight:bold'>W</span><span style='mso-bidi-font-weight:
bold'> еще одного элемента из </span><span lang=EN-US style='mso-ansi-language:
EN-US;mso-bidi-font-weight:bold'>R</span><span style='mso-bidi-font-weight:
bold'>, для каждого из этих вариантов получается аналогичная задача размерности
</span><span lang=EN-US style='mso-ansi-language:EN-US;mso-bidi-font-weight:
bold'>n</span><span style='mso-bidi-font-weight:bold'>+1, которая решается
рекурсивным вызовом той же функции. Завершение рекурсии состоит в получении
очередного «окончательного» варианта, когда текущая размерность задачи </span><span
lang=EN-US style='mso-ansi-language:EN-US;mso-bidi-font-weight:bold'>n</span><span
style='mso-bidi-font-weight:bold'> достигает размерности исходного множества </span><span
lang=EN-US style='mso-ansi-language:EN-US;mso-bidi-font-weight:bold'>R</span><span
style='mso-bidi-font-weight:bold'>.<o:p></o:p></span></p>

<p class=a4><span style='mso-bidi-font-weight:bold'><o:p>&nbsp;</o:p></span></p>

<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0 width=612
 style='width:459.05pt;border-collapse:collapse;border:none;mso-border-alt:
 solid windowtext .5pt;mso-padding-alt:0cm 5.4pt 0cm 5.4pt;mso-border-insideh:
 .5pt solid windowtext;mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes'>
  <td width=130 valign=top style='width:97.55pt;border:solid windowtext 1.0pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=left style='text-align:left'><b style='mso-bidi-font-weight:
  normal'><a name="m2">Вид последо-вательности<o:p></o:p></b></p>
  </td>
  <td width=312 valign=top style='width:233.9pt;border:solid windowtext 1.0pt;
  border-left:none;mso-border-left-alt:solid windowtext .5pt;mso-border-alt:
  solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=left style='text-align:left'><b style='mso-bidi-font-weight:
  normal'><a name="m3">Алгоритм </b><b style='mso-bidi-font-weight:normal'><a name="m4"><span lang=EN-US
  style='mso-ansi-language:EN-US'>n</span>-го шага<o:p></o:p></b></p>
  </td>
  <td width=66 valign=top style='width:49.65pt;border:solid windowtext 1.0pt;
  border-left:none;mso-border-left-alt:solid windowtext .5pt;mso-border-alt:
  solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=left style='text-align:left'><b style='mso-bidi-font-weight:
  normal'><a name="m5">Ветвле-ние<o:p></o:p></b></p>
  </td>
  <td width=104 valign=top style='width:77.95pt;border:solid windowtext 1.0pt;
  border-left:none;mso-border-left-alt:solid windowtext .5pt;mso-border-alt:
  solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=center style='text-align:center'><b style='mso-bidi-font-weight:
  normal'><a name="m6"><span lang=EN-US style='mso-ansi-language:EN-US'>T</span><o:p></o:p></b></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:1'>
  <td width=130 valign=top style='width:97.55pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4><span style='mso-bidi-font-weight:bold'>Все элементы<o:p></o:p></span></p>
  </td>
  <td width=312 valign=top style='width:233.9pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4><span style='mso-bidi-font-weight:bold'>Цикл</span><span
  style='mso-ansi-language:EN-US;mso-bidi-font-weight:bold'> </span><b
  style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:Arial;
  mso-ansi-language:EN-US'>for(i=0;i&lt;n;i++)</span></b><span lang=EN-US
  style='mso-ansi-language:EN-US;mso-bidi-font-weight:bold'><o:p></o:p></span></p>
  </td>
  <td width=66 valign=top style='width:49.65pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=center style='text-align:center'><span lang=EN-US
  style='font-size:14.0pt;mso-bidi-font-size:10.0pt;mso-ansi-language:EN-US;
  mso-bidi-font-weight:bold'>---<o:p></o:p></span></p>
  </td>
  <td width=104 valign=top style='width:77.95pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=center style='text-align:center'><span lang=EN-US
  style='font-size:14.0pt;mso-bidi-font-size:10.0pt;mso-ansi-language:EN-US;
  mso-bidi-font-weight:bold'>n</span><span style='font-size:14.0pt;mso-bidi-font-size:
  10.0pt;mso-bidi-font-weight:bold'><o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:2'>
  <td width=130 valign=top style='width:97.55pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4><span style='mso-bidi-font-weight:bold'>Все пары<o:p></o:p></span></p>
  </td>
  <td width=312 valign=top style='width:233.9pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4><span style='mso-bidi-font-weight:bold'>Цикл</span><span
  style='mso-spacerun:yes; mso-ansi-language:EN-US; mso-bidi-font-weight:bold' lang="EN-US">  </span><span style='mso-bidi-font-weight:
  bold'>в</span><span style='mso-ansi-language:EN-US;mso-bidi-font-weight:bold'>
  </span><span style='mso-bidi-font-weight:bold'>цикле</span><span lang=EN-US
  style='mso-ansi-language:EN-US;mso-bidi-font-weight:bold'> <o:p></o:p></span></p>
  <p class=a4><b style='mso-bidi-font-weight:normal'><a name="m7"><span lang=EN-US
  style='font-family:Arial;mso-ansi-language:EN-US'>for(i=0;i&lt;n-1;i++)
  for(j=i-1;j&lt;n;j++)</span></b><span lang=EN-US style='mso-ansi-language:
  EN-US;mso-bidi-font-weight:bold'><o:p></o:p></span></p>
  </td>
  <td width=66 valign=top style='width:49.65pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=center style='text-align:center'><span style='font-size:
  14.0pt;mso-bidi-font-size:10.0pt;mso-bidi-font-weight:bold'>---<o:p></o:p></span></p>
  </td>
  <td width=104 valign=top style='width:77.95pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=center style='text-align:center'><span lang=EN-US
  style='font-size:14.0pt;mso-bidi-font-size:10.0pt;mso-ansi-language:EN-US;
  mso-bidi-font-weight:bold'>n</span><span style='font-size:14.0pt;mso-bidi-font-size:
  10.0pt;mso-bidi-font-weight:bold'>(</span><span lang=EN-US style='font-size:
  14.0pt;mso-bidi-font-size:10.0pt;mso-ansi-language:EN-US;mso-bidi-font-weight:
  bold'>n</span><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt;
  mso-bidi-font-weight:bold'>-1)/2<sup><o:p></o:p></sup></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:3'>
  <td width=130 valign=top style='width:97.55pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4><span style='mso-bidi-font-weight:bold'>Все подмножества<o:p></o:p></span></p>
  </td>
  <td width=312 valign=top style='width:233.9pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4><span style='mso-bidi-font-weight:bold'>Очередной (</span><span
  lang=EN-US style='mso-ansi-language:EN-US;mso-bidi-font-weight:bold'>n</span><span
  style='mso-bidi-font-weight:bold'>-ый) элемент из </span><span lang=EN-US
  style='mso-ansi-language:EN-US;mso-bidi-font-weight:bold'>R</span><span
  style='mso-bidi-font-weight:bold'> может быть «добавлен» и «не добавлен» в </span><span
  lang=EN-US style='mso-ansi-language:EN-US;mso-bidi-font-weight:bold'>W</span><span
  style='mso-bidi-font-weight:bold'><o:p></o:p></span></p>
  </td>
  <td width=66 valign=top style='width:49.65pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=center style='text-align:center'><span style='font-size:
  14.0pt;mso-bidi-font-size:10.0pt;mso-bidi-font-weight:bold'>2<o:p></o:p></span></p>
  </td>
  <td width=104 valign=top style='width:77.95pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=center style='text-align:center'><span style='font-size:
  14.0pt;mso-bidi-font-size:10.0pt;mso-bidi-font-weight:bold'>2</span><sup><span
  lang=EN-US style='font-size:14.0pt;mso-bidi-font-size:10.0pt;mso-ansi-language:
  EN-US;mso-bidi-font-weight:bold'>n</span><span style='font-size:
  14.0pt;mso-bidi-font-size:10.0pt;mso-bidi-font-weight:bold'><o:p></o:p></span></sup></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:4'>
  <td width=130 valign=top style='width:97.55pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=left style='text-align:left'><span style='mso-bidi-font-weight:
  bold'>Подмножества из </span><span lang=EN-US style='mso-ansi-language:EN-US;
  mso-bidi-font-weight:bold'>n</span><span style='mso-bidi-font-weight:bold'>
  по </span><span lang=EN-US style='mso-ansi-language:EN-US;mso-bidi-font-weight:
  bold'>m</span><span style='mso-bidi-font-weight:bold'><o:p></o:p></span></p>
  </td>
  <td width=312 valign=top style='width:233.9pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=left style='text-align:left'><span style='mso-bidi-font-weight:
  bold'>Очередной (</span><span lang=EN-US style='mso-ansi-language:EN-US;
  mso-bidi-font-weight:bold'>n</span><span style='mso-bidi-font-weight:bold'>-ый)
  элемент из </span><span lang=EN-US style='mso-ansi-language:EN-US;mso-bidi-font-weight:
  bold'>R</span><span style='mso-bidi-font-weight:bold'> может быть «добавлен»
  и «не добавлен» в </span><span lang=EN-US style='mso-ansi-language:EN-US;
  mso-bidi-font-weight:bold'>W</span><span style='mso-bidi-font-weight:bold'>
  при ограничении их количества в </span><span lang=EN-US style='mso-ansi-language:
  EN-US;mso-bidi-font-weight:bold'>W</span><span style='mso-bidi-font-weight:
  bold'><o:p></o:p></span></p>
  </td>
  <td width=66 valign=top style='width:49.65pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=center style='text-align:center'><span lang=EN-US
  style='font-size:14.0pt;mso-bidi-font-size:10.0pt;mso-ansi-language:EN-US;
  mso-bidi-font-weight:bold'>2</span><span style='font-size:14.0pt;mso-bidi-font-size:
  10.0pt;mso-bidi-font-weight:bold'>(1,0)<o:p></o:p></span></p>
  </td>
  <td width=104 valign=top style='width:77.95pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=center style='text-align:center'><span lang=EN-US
  style='font-size:14.0pt;mso-bidi-font-size:10.0pt;mso-ansi-language:EN-US;
  mso-bidi-font-weight:bold'>N!<o:p></o:p></span></p>
  <p class=a4 align=center style='text-align:center'><span
  lang=EN-US style='font-size:14.0pt;mso-bidi-font-size:10.0pt;mso-ansi-language:
  EN-US;mso-bidi-font-weight:bold'>m!(n-m!)<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:5'>
  <td width=130 valign=top style='width:97.55pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=left style='text-align:left'><span style='mso-bidi-font-weight:
  bold'>Последователь-ность без повторений<o:p></o:p></span></p>
  </td>
  <td width=312 valign=top style='width:233.9pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=left style='text-align:left'><span style='mso-bidi-font-weight:
  bold'>В </span><span lang=EN-US style='mso-ansi-language:EN-US;mso-bidi-font-weight:
  bold'>W</span><span style='mso-bidi-font-weight:bold'> может быть добавлен
  любой из </span><span lang=EN-US style='mso-ansi-language:EN-US;mso-bidi-font-weight:
  bold'>R</span><span style='mso-bidi-font-weight:bold'>, который в нем остался<o:p></o:p></span></p>
  </td>
  <td width=66 valign=top style='width:49.65pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=center style='text-align:center'><span lang=EN-US
  style='font-size:14.0pt;mso-bidi-font-size:10.0pt;mso-ansi-language:EN-US;
  mso-bidi-font-weight:bold'>n</span><span style='font-size:14.0pt;mso-bidi-font-size:
  10.0pt;mso-bidi-font-weight:bold'>...1 <o:p></o:p></span></p>
  </td>
  <td width=104 valign=top style='width:77.95pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=center style='text-align:center'><span lang=EN-US
  style='font-size:14.0pt;mso-bidi-font-size:10.0pt;mso-ansi-language:EN-US;
  mso-bidi-font-weight:bold'>N</span><span style='font-size:14.0pt;mso-bidi-font-size:
  10.0pt;mso-bidi-font-weight:bold'>!<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:6;mso-yfti-lastrow:yes'>
  <td width=130 valign=top style='width:97.55pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=left style='text-align:left'><span style='mso-bidi-font-weight:
  bold'>Последователь-ность с повторениями<o:p></o:p></span></p>
  </td>
  <td width=312 valign=top style='width:233.9pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=left style='text-align:left'><span style='mso-bidi-font-weight:
  bold'>В </span><span lang=EN-US style='mso-ansi-language:EN-US;mso-bidi-font-weight:
  bold'>W</span><span style='mso-bidi-font-weight:bold'> может быть добавлен
  любой из </span><span lang=EN-US style='mso-ansi-language:EN-US;mso-bidi-font-weight:
  bold'>R</span><span style='mso-bidi-font-weight:bold'><o:p></o:p></span></p>
  </td>
  <td width=66 valign=top style='width:49.65pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=center style='text-align:center'><span lang=EN-US
  style='font-size:14.0pt;mso-bidi-font-size:10.0pt;mso-ansi-language:EN-US;
  mso-bidi-font-weight:bold'>n<o:p></o:p></span></p>
  <p class=a4 align=center style='text-align:center'><span style='font-size:
  14.0pt;mso-bidi-font-size:10.0pt;mso-bidi-font-weight:bold'><o:p>&nbsp;</o:p></span></p>
  </td>
  <td width=104 valign=top style='width:77.95pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=center style='text-align:center'><span lang=EN-US
  style='font-size:14.0pt;mso-bidi-font-size:10.0pt;mso-ansi-language:EN-US;
  mso-bidi-font-weight:bold'>n<sup>n</sup></span><sup><span style='font-size:
  14.0pt;mso-bidi-font-size:10.0pt;mso-bidi-font-weight:bold'><o:p></o:p></span></sup></p>
  </td>
 </tr>
</table>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><o:p>&nbsp;</o:p></span></p>

<p class=a4><span style='mso-bidi-font-weight:bold'>Первые два варианта
моделируют процесс, в котором на каждом шаге рассматривается две альтернативы
для очередного элемента исходного множества: включать и не включать в выходное,
соответственно имеют место два рекурсивных вызова для следующей (</span><span
lang=EN-US style='mso-ansi-language:EN-US;mso-bidi-font-weight:bold'>n</span><span
style='mso-bidi-font-weight:bold'>+1) размерности. Окончание рекурсии в первом
случае происходит по завершении перебора исходного множества, во втором – при
накоплении заданного количества элементов. <o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>//----------------------------------------------------------74-01<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>// Множество всех
подмножеств<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>// R - исходное множество<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>// W - результирующее
множество (последовательность)<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>// n - номер шага в глубину
- индекс выбираемого элементов из R<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>// k - количество выбранных
элементов<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>// N - размерность задачи<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>// cnt - счетчик вариантов<o:p></o:p></span></p>

<p class=MsoPlainText><span lang=EN-US style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman";mso-ansi-language:EN-US'>void
F1(int W[],int R[],int n,int k,int N, int &amp;cnt){<o:p></o:p></span></p>

<p class=MsoPlainText><span lang=EN-US style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman";mso-ansi-language:EN-US'>int
i;<o:p></o:p></span></p>

<p class=MsoPlainText><span lang=EN-US style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman";mso-ansi-language:EN-US'>if
(n==N){<o:p></o:p></span></p>

<p class=MsoPlainText>
<span
style='mso-tab-count:1; font-family:Arial; mso-fareast-font-family:MS Mincho; mso-bidi-font-family:Times New Roman; mso-ansi-language:EN-US' lang="EN-US">            </span><span style='font-family:
Arial;mso-fareast-font-family:"MS Mincho";mso-bidi-font-family:"Times New Roman"'>cnt++;
printf(&quot;\n&quot;);<span style='mso-tab-count:3'>                                  </span>//
достигнута требуемая размерность<o:p></o:p></span></p>

<p class=MsoPlainText>
<span
style='mso-spacerun:yes; font-family:Arial; mso-fareast-font-family:MS Mincho; mso-bidi-font-family:Times New Roman'>    </span><span lang=EN-US style='font-family:
Arial;mso-fareast-font-family:"MS Mincho";mso-bidi-font-family:"Times New Roman";
mso-ansi-language:EN-US'><span style='mso-tab-count:1'>        </span>for
(i=0;i&lt;k;i++) printf(&quot;%d &quot;,W[i]);<o:p></o:p></span></p>

<p class=MsoPlainText>
<span
style='mso-tab-count:1; font-family:Arial; mso-fareast-font-family:MS Mincho; mso-bidi-font-family:Times New Roman; mso-ansi-language:EN-US' lang="EN-US">            </span><span style='font-family:
Arial;mso-fareast-font-family:"MS Mincho";mso-bidi-font-family:"Times New Roman"'>return;
}<span style='mso-tab-count:5'>                                                 </span>//
подсчет и вывод полученного варианта<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>F1(W,R,n+1,k,N,cnt);<span
style='mso-tab-count:4'>                                         </span>//
очередной не включается<o:p></o:p></span></p>

<p class=MsoPlainText><span lang=EN-US style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman";mso-ansi-language:EN-US'>W[k]=R[n];<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>F1(W,R,n+1,k+1,N,cnt);<span
style='mso-tab-count:4'>                                     </span>//
очередной включается<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>}<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>//----------------------------------------------------------<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>// Сочетаний из n по m<o:p></o:p></span></p>

<p class=MsoPlainText><span lang=EN-US style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman";mso-ansi-language:EN-US'>//
m - </span><span style='font-family:Arial;mso-fareast-font-family:"MS Mincho";
mso-bidi-font-family:"Times New Roman"'>размерность</span><span
style='font-family:Arial;mso-fareast-font-family:"MS Mincho";mso-bidi-font-family:
"Times New Roman";mso-ansi-language:EN-US'> </span><span style='font-family:
Arial;mso-fareast-font-family:"MS Mincho";mso-bidi-font-family:"Times New Roman"'>подмножества</span><span
lang=EN-US style='font-family:Arial;mso-fareast-font-family:"MS Mincho";
mso-bidi-font-family:"Times New Roman";mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoPlainText><span lang=EN-US style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman";mso-ansi-language:EN-US'>void
F2(int W[],int R[],int n,int k,int N, int m, int &amp;cnt){<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>int i;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>if (n&gt;N) return;<span
style='mso-tab-count:5'>                                                   </span>//
превышена размерность множества<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>if (k==m){<span
style='mso-tab-count:5'>                                                          </span>//
выбрано m из n<o:p></o:p></span></p>

<p class=MsoPlainText>
<span style='mso-tab-count:
1; font-family:Arial; mso-fareast-font-family:MS Mincho; mso-bidi-font-family:Times New Roman'>            </span><span lang=EN-US style='font-family:Arial;
mso-fareast-font-family:"MS Mincho";mso-bidi-font-family:"Times New Roman";
mso-ansi-language:EN-US'>cnt++; printf(&quot;\n&quot;);<span style='mso-tab-count:
2'>                      </span><o:p></o:p></span></p>

<p class=MsoPlainText><span lang=EN-US style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman";mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>    </span><span
style='mso-tab-count:1'>        </span>for (i=0;i&lt;k;i++) printf(&quot;%d
&quot;,W[i]);<o:p></o:p></span></p>

<p class=MsoPlainText>
<span
style='mso-tab-count:1; font-family:Arial; mso-fareast-font-family:MS Mincho; mso-bidi-font-family:Times New Roman; mso-ansi-language:EN-US' lang="EN-US">            </span><span style='font-family:
Arial;mso-fareast-font-family:"MS Mincho";mso-bidi-font-family:"Times New Roman"'>return;
}<span style='mso-tab-count:5'>                                                 </span>//
подсчет и вывод полученного варианта<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>F2(W,R,n+1,k,N,m,cnt);<span
style='mso-tab-count:4'>                                     </span>//
очередной не включается<o:p></o:p></span></p>

<p class=MsoPlainText><span lang=EN-US style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman";mso-ansi-language:EN-US'>W[k]=R[n];<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>F2(W,R,n+1,k+1,N,m,cnt);<span
style='mso-tab-count:3'>                                 </span>// очередной
включается<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>}<o:p></o:p></span></p>

<p class=a4><span style='mso-bidi-font-weight:bold'>Для поисковых задач, в
которых просматриваются все возможные последовательности (цепочки, слова и
т.п., возможно с дополнительными ограничениями) имеется другой способ перебора.
В нем на каждом шаге в последовательность переносится один из оставшихся
элементов, причем перед следующим шагом он удаляется из исходного множества, а
по возвращении – восстанавливается.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>//----------------------------------------------------------<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>// Последовательность без
повторений<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>void F3(int W[],int R[],int
n, int N, int &amp;cnt){<o:p></o:p></span></p>

<p class=MsoPlainText><span lang=EN-US style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman";mso-ansi-language:EN-US'>int
i;<o:p></o:p></span></p>

<p class=MsoPlainText><span lang=EN-US style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman";mso-ansi-language:EN-US'>if
(n==N){<span style='mso-tab-count:5'>                                                           </span><o:p></o:p></span></p>

<p class=MsoPlainText><span lang=EN-US style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman";mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>cnt++; printf(&quot;\n&quot;);<o:p></o:p></span></p>

<p class=MsoPlainText>
<span
style='mso-spacerun:yes; font-family:Arial; mso-fareast-font-family:MS Mincho; mso-bidi-font-family:Times New Roman; mso-ansi-language:EN-US' lang="EN-US">    </span>
<span
style='mso-tab-count:1; font-family:Arial; mso-fareast-font-family:MS Mincho; mso-bidi-font-family:Times New Roman'>        </span><span lang=EN-US
style='font-family:Arial;mso-fareast-font-family:"MS Mincho";mso-bidi-font-family:
"Times New Roman";mso-ansi-language:EN-US'>for (i=0;i&lt;n;i++) printf(&quot;%d
&quot;,W[i]);<o:p></o:p></span></p>

<p class=MsoPlainText>
<span
style='mso-tab-count:1; font-family:Arial; mso-fareast-font-family:MS Mincho; mso-bidi-font-family:Times New Roman; mso-ansi-language:EN-US' lang="EN-US">            </span><span style='font-family:
Arial;mso-fareast-font-family:"MS Mincho";mso-bidi-font-family:"Times New Roman"'>return;
}<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>for (i=0;i&lt;N;i++){<span
style='mso-tab-count:4'>                                                </span>//
цикл по всем оставшимся<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'><span style='mso-tab-count:
1'>            </span>if (R[i]==0) continue;<span style='mso-tab-count:3'>                               </span>//
пропуск уже выбранного<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'><span style='mso-tab-count:
1'>            </span>W[n]=R[i];<span style='mso-tab-count:4'>                                             </span>//
выбор оставшегося<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'><span
style='mso-spacerun:yes'>   </span><span style='mso-tab-count:1'>         </span>R[i]=0;<span
style='mso-tab-count:5'>                                                  </span>//
исключение из исходного<o:p></o:p></span></p>

<p class=MsoPlainText>
<span style='mso-tab-count:
1; font-family:Arial; mso-fareast-font-family:MS Mincho; mso-bidi-font-family:Times New Roman'>            </span><span lang=EN-US style='font-family:Arial;
mso-fareast-font-family:"MS Mincho";mso-bidi-font-family:"Times New Roman";
mso-ansi-language:EN-US'>F3(W,R,n+1,N,cnt);<span style='mso-tab-count:3'>                                </span><o:p></o:p></span></p>

<p class=MsoPlainText>
<span
style='mso-tab-count:1; font-family:Arial; mso-fareast-font-family:MS Mincho; mso-bidi-font-family:Times New Roman; mso-ansi-language:EN-US' lang="EN-US">            </span><span style='font-family:
Arial;mso-fareast-font-family:"MS Mincho";mso-bidi-font-family:"Times New Roman"'>R[i]=W[n];<span
style='mso-tab-count:4'>                                             </span>//
возвращение выбранного<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Arial;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'><span
style='mso-spacerun:yes'>   </span>}}<o:p></o:p></span></p>

<p class=a4><span style='mso-bidi-font-weight:bold'>Более элегантный вариант
просто меняет местами очередной элемент со всеми оставшимися.<o:p></o:p></span></p>

<p class=a0>//----------------------------------------------------------</p>

<p class=a0>// Последовательность с повторениями - обмен с оставшимися</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void F4(int
R[],int n,int N, int &amp;cnt){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>int i,c;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>if (n==N){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>cnt++; printf(&quot;\n&quot;);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>    </span>for (i=0;i&lt;n;i++) printf(&quot;%d
&quot;,R[i]);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>return</span>; }</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>F</span>4(<span
lang=EN-US style='mso-ansi-language:EN-US'>R</span>,<span lang=EN-US
style='mso-ansi-language:EN-US'>n</span>+1,<span lang=EN-US style='mso-ansi-language:
EN-US'>N</span>,<span lang=EN-US style='mso-ansi-language:EN-US'>cnt</span>);<span
style='mso-tab-count:3'>                                    </span>// очередной
на своем месте</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>for
(i=n+1;i&lt;N;i++){<span style='mso-tab-count:1'>         </span><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>c</span>=<span lang=EN-US
style='mso-ansi-language:EN-US'>R</span>[<span lang=EN-US style='mso-ansi-language:
EN-US'>n</span>]; <span lang=EN-US style='mso-ansi-language:EN-US'>R</span>[<span
lang=EN-US style='mso-ansi-language:EN-US'>n</span>]=<span lang=EN-US
style='mso-ansi-language:EN-US'>R</span>[<span lang=EN-US style='mso-ansi-language:
EN-US'>i</span>]; <span lang=EN-US style='mso-ansi-language:EN-US'>R</span>[<span
lang=EN-US style='mso-ansi-language:EN-US'>i</span>]=<span lang=EN-US
style='mso-ansi-language:EN-US'>c</span>;<span style='mso-tab-count:1'>            </span>//
обмен очередного с оставшимися</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>F4(R,n+1,N,cnt);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>c</span>=<span lang=EN-US
style='mso-ansi-language:EN-US'>R</span>[<span lang=EN-US style='mso-ansi-language:
EN-US'>n</span>]; <span lang=EN-US style='mso-ansi-language:EN-US'>R</span>[<span
lang=EN-US style='mso-ansi-language:EN-US'>n</span>]=<span lang=EN-US
style='mso-ansi-language:EN-US'>R</span>[<span lang=EN-US style='mso-ansi-language:
EN-US'>i</span>]; <span lang=EN-US style='mso-ansi-language:EN-US'>R</span>[<span
lang=EN-US style='mso-ansi-language:EN-US'>i</span>]=<span lang=EN-US
style='mso-ansi-language:EN-US'>c</span>;<span style='mso-tab-count:1'>            </span>//
возвращение очередного</p>

<p class=a0><span style='mso-spacerun:yes'>   </span>}}</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a><br><img border="0" src="Images/labs.jpg" width="41" height="40"> <b
style='mso-bidi-font-weight:normal'>Линейный кроссворд. </b>Для заданного
набора слов требуется построить линейный кроссворд. Если окончание одного слова
совпадает с началом следующего более чем в одной букве (например,
МАТРАС-РАСИСТ), то такие слова можно объединить в цепочку. Первоначально
ставится задача - получить любую такую цепочку, окончательно - цепочку
минимальной длины. <span style='font-family:"Times New Roman"'><o:p></o:p></span></p>

<p class=a>Решение задача базируется на комбинаторном переборе всех
последовательностей без повторений, рекурсивная функция для генерации которых
была рассмотрена выше. В сущности, новая программа представляет собой
переложение упомянутой на другую структуру данных, тем не менее проведем
содержательное проектирование такой программы «с нуля» для иллюстрации
технологии. Начало проектирования любой рекурсивной программы заключается в
определении шага рекурсивного процесса. Пусть имеется уже составленная цепочка
из выбранных слов. Очередной шаг процесса состоит в попытке присоединения к
имеющейся цепочке еще одного слова из оставшихся. Если это возможно, то для
новой цепочки необходимо выполнить попытку присоединить следующее слово и так
далее, то есть выполнить следующий шаг рекурсивного процесса. Таким образом<span
style='font-family:"Times New Roman"'>:<o:p></o:p></span></p>

<p class=a1>- рекурсивная функция выполняет попытку присоединения очередного
слова к уже выстроенной цепочке<span style='font-family:"Times New Roman"'>;<o:p></o:p></span></p>

<p class=a1>- результатом функции является логическое значение (данную цепочку
можно достроить), функция ищет первый подходящий вариант<span style='font-family:
"Times New Roman"'>;<o:p></o:p></span></p>

<p class=a1>- условием завершения рекурсии является отсутствие еще не присоединенных
к цепочке слов (успешное завершение), либо невозможность завершения цепочки ни
через одно из оставшихся слов (неудача)<span style='font-family:"Times New Roman"'>.</span></p>

<p class=a>Множество исходных слов является глобальной структурой данных -
массивом указателей, из которого на каждом шаге извлекается очередной элемент,
но по завершении просмотра варианта (после рекурсивного вызова) возвращается
обратно. Будем использовать<span style='mso-spacerun:yes'>  </span>массив
указателей на строки. Извлечение строки из множества будет заключаться в
установке указателя на строку нулевой длины. </p>

<p class=a>И еще несколько мелочей, которые дополняют общую картину<span
style='font-family:"Times New Roman"'>:<o:p></o:p></span></p>

<p class=a1>- проверка условия завершения рекурсии – достаточно подсчитывать
число шагов рекурсии – при успешном завершении оно равно размерности структуры
данных;<span style='font-family:"Times New Roman"'><o:p></o:p></span></p>

<p class=a1>- сама цепочка выбранных слов может формироваться как в виде
прямого, так и в виде обратного накопления результата. В данном примере слова
просто выводятся на экран<span style='mso-spacerun:yes'>  </span>в обратном
порядке в цепочке возвратов при достижении положительного решения<span
style='mso-spacerun:yes'>  </span>«положительных» возвратов. Для большей
образности функция подсчитывает количество символов, накопленных в цепочке, для
вывода соответствующего количества пробелов перед словом.<span
style='font-family:"Times New Roman"'><o:p></o:p></span></p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------<span
lang=EN-US style='mso-ansi-language:EN-US'>7</span>4-02.<span lang=EN-US
style='mso-ansi-language:EN-US'>cpp</span></p>

<p class=a0>//----- Линейный кроссворд</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>char
*w[]={&quot;sinus&quot;,&quot;prefix&quot;,&quot;setup&quot;,&quot;plintus&quot;,&quot;drop&quot;,NULL};<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>int N=sizeof(w)/sizeof(char*)-1;<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US"> </span>// lw - текущее слово цепочки, s<span
style='mso-spacerun:yes'>  </span>- число символов в цепочке</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>int step(char *lw, int s, int k){<span
style='mso-tab-count:1'>     </span><o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US"> </span>if (k==N) return 1;<span
style='mso-tab-count:4'>                                              </span>//<span
style='mso-spacerun:yes'>  </span>Все слова выбраны - успех</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>for (int n=0; w[n]!=NULL;n++)<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:1; mso-ansi-language:EN-US' lang="EN-US">            </span>{ int l=strlen(lw);<span
style='mso-tab-count:4'>                                     </span>// проверка
на присоединение</p>

<p class=a0><span style='mso-tab-count:1'>            </span>if (w[n][0]==0)
continue;<span style='mso-tab-count:3'>                          </span>//
слово уже выбрано - пропустить</p>

<p class=a0><span style='mso-spacerun:yes'>    </span>if (k==0 ||
lw[l-1]==w[n][0]){<span style='mso-tab-count:3'>                             </span>//
совпадение символов или первое слово</p>

<p class=a0><span style='mso-tab-count:2'>                        </span>char
*pw=w[n];<span style='mso-tab-count:3'>                           </span>//
запомнить и исключить<span style='mso-spacerun:yes'>             </span></p>

<p class=a0><span style='mso-tab-count:2'>                        </span>w[n]=&quot;&quot;;<span
style='mso-tab-count:4'>                                     </span>//
проверяемое слово из<span style='mso-spacerun:yes'>  </span>множества</p>

<p class=a0><span style='mso-tab-count:2'>                        </span>if
(step(pw,s+l-1,k+1)){<span style='mso-tab-count:2'>                </span>//
попытка вывести цепочку из нового слова</p>

<p class=a0><span style='mso-tab-count:3'>                                    </span>for
(int i=0;i&lt;s+l-1;i++)<span style='mso-tab-count:1'>    </span>// удача -
вывести слово и выйти</p>

<p class=a0><span style='mso-tab-count:4'>                                                </span>putchar('
');<span style='mso-tab-count:1'>        </span>// из текущего шага рекурсии</p>

<p class=a0><span style='mso-tab-count:3'>                                    </span><span
lang=EN-US style='mso-ansi-language:EN-US'>puts(pw);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>            </span>return 1;<span
style='mso-spacerun:yes'>             </span><o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:3; mso-ansi-language:EN-US' lang="EN-US">                                    </span>}</p>

<p class=a0><span style='mso-tab-count:2'>                        </span>w[n]=pw;<span
style='mso-tab-count:3'>                                   </span>// возвратить
исключенное слово</p>

<p class=a0><span style='mso-tab-count:2'>                        </span>}</p>

<p class=a0><span style='mso-tab-count:1'>            </span>}</p>

<p class=a0>return 0; }</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void main() {
step(&quot;&quot;,1,0); }<o:p></o:p></span></p>

<p class=a4><span style='mso-bidi-font-weight:bold'>Второй вариант генерации
возможных последовательностей (см. выше)<span style='mso-spacerun:yes'> 
</span>просто меняет местами очередной элемент со всеми оставшимися при
соответствующем совпадении символов:<o:p></o:p></span></p>

<p class=a1>- для очередного (<b style='mso-bidi-font-weight:normal'><a name="m8"><span
lang=EN-US style='mso-ansi-language:EN-US'>i</span></b>) слова просматриваются
все последующие;</p>

<p class=a1>- если начало одного из них (<b style='mso-bidi-font-weight:normal'><a name="m9"><span
lang=EN-US style='mso-ansi-language:EN-US'>j</span></b>) совпадает с окончанием
текущего, то оно переставляется со следующим (<b style='mso-bidi-font-weight:
normal'><a name="m10"><span lang=EN-US style='mso-ansi-language:EN-US'>i</span>+1</b>), то
есть замещает в возможной цепочке <b style='mso-bidi-font-weight:normal'><a name="m11"><span
lang=EN-US style='mso-ansi-language:EN-US'>i</span>+1 </b>слово;</p>

<p class=a1>- если рекурсивный вызов не смог достроить цепочку, то
переставленные слова возвращаются на свои места;</p>

<p class=a1 style='margin-left:53.45pt;text-indent:-18.0pt;mso-list:l42 level1 lfo42;
tab-stops:42.55pt list 53.45pt'><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Times New Roman'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><![endif]>при успешном завершении слова будет расположены
в нужном порядке.</p>

<p class=a4>Кроме того, этот пример использует способ выхода из цепочки
рекурсивных вызовов через исключение (см. 12.4).</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>//------------------------------------------------------</span>7<span
lang=EN-US style='mso-ansi-language:EN-US'>4-03.cpp<o:p></o:p></span></p>

<p class=a0>//----- Линейный кроссворд (перебор с обменом строк)</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>char
*w[]={&quot;sinus&quot;,&quot;prefix&quot;,&quot;setup&quot;,&quot;plintus&quot;,&quot;drop&quot;,NULL};<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>// k - номер шага<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>void step(int k){<span style='mso-tab-count:
1'> </span><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>if</span> (<span lang=EN-US style='mso-ansi-language:
EN-US'>w</span>[<span lang=EN-US style='mso-ansi-language:EN-US'>k</span>+1]==<span
lang=EN-US style='mso-ansi-language:EN-US'>NULL</span>) <span lang=EN-US
style='mso-ansi-language:EN-US'>throw</span> 1;<span style='mso-tab-count:3'>                                </span>//
Все слова выбраны - успех</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>l</span>=0; <span lang=EN-US
style='mso-ansi-language:EN-US'>if</span> (<span lang=EN-US style='mso-ansi-language:
EN-US'>k</span>!=-1) <span lang=EN-US style='mso-ansi-language:EN-US'>l</span>=<span
lang=EN-US style='mso-ansi-language:EN-US'>strlen</span>(<span lang=EN-US
style='mso-ansi-language:EN-US'>w</span>[<span lang=EN-US style='mso-ansi-language:
EN-US'>k</span>])-1;<span style='mso-tab-count:3'>                         </span>//
Выход из цепочки рекурсивных вызовов</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>for</span> (<span lang=EN-US style='mso-ansi-language:
EN-US'>int</span><span lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:
EN-US'>n</span>=<span lang=EN-US style='mso-ansi-language:EN-US'>k</span>+1; <span
lang=EN-US style='mso-ansi-language:EN-US'>w</span>[<span lang=EN-US
style='mso-ansi-language:EN-US'>n</span>]!=<span lang=EN-US style='mso-ansi-language:
EN-US'>NULL</span>;<span lang=EN-US style='mso-ansi-language:EN-US'>n</span>++)<span
style='mso-tab-count:3'>                         </span>// через исключение</p>

<p class=a0 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>if</span> (<span lang=EN-US style='mso-ansi-language:EN-US'>k</span>==-1
|| <span lang=EN-US style='mso-ansi-language:EN-US'>w</span>[<span lang=EN-US
style='mso-ansi-language:EN-US'>k</span>][<span lang=EN-US style='mso-ansi-language:
EN-US'>l</span>]==<span lang=EN-US style='mso-ansi-language:EN-US'>w</span>[<span
lang=EN-US style='mso-ansi-language:EN-US'>n</span>][0]){<span
style='mso-tab-count:2'>                    </span>// совпадение символов или
первое слово</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>char</span> *<span lang=EN-US
style='mso-ansi-language:EN-US'>q</span>=<span lang=EN-US style='mso-ansi-language:
EN-US'>w</span>[<span lang=EN-US style='mso-ansi-language:EN-US'>k</span>+1]; <span
lang=EN-US style='mso-ansi-language:EN-US'>w</span>[<span lang=EN-US
style='mso-ansi-language:EN-US'>k</span>+1]=<span lang=EN-US style='mso-ansi-language:
EN-US'>w</span>[<span lang=EN-US style='mso-ansi-language:EN-US'>n</span>]; <span
lang=EN-US style='mso-ansi-language:EN-US'>w</span>[<span lang=EN-US
style='mso-ansi-language:EN-US'>n</span>]=<span lang=EN-US style='mso-ansi-language:
EN-US'>q</span>;// Обмен найденного со следующим за...</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>step</span>(<span lang=EN-US
style='mso-ansi-language:EN-US'>k</span>+1);<span style='mso-tab-count:3'>                                 </span>//
попытка вывести цепочку из нового слова</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>q</span>=<span lang=EN-US
style='mso-ansi-language:EN-US'>w</span>[<span lang=EN-US style='mso-ansi-language:
EN-US'>k</span>+1]; <span lang=EN-US style='mso-ansi-language:EN-US'>w</span>[<span
lang=EN-US style='mso-ansi-language:EN-US'>k</span>+1]=<span lang=EN-US
style='mso-ansi-language:EN-US'>w</span>[<span lang=EN-US style='mso-ansi-language:
EN-US'>n</span>]; <span lang=EN-US style='mso-ansi-language:EN-US'>w</span>[<span
lang=EN-US style='mso-ansi-language:EN-US'>n</span>]=<span lang=EN-US
style='mso-ansi-language:EN-US'>q</span>;<span style='mso-tab-count:1'>  </span>//
Обратный обмен для продолжения поиска</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>}}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>void main(){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>try { step(-1); }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>catch</span>(<span lang=EN-US
style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>v</span>){ <span style='mso-tab-count:
5'>                                                     </span>// Обработчик
исключения - </p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>for (int s=0,i=0; w[i]!=NULL; i++){<span
style='mso-tab-count:1'> </span>// </span>вывод<span style='mso-ansi-language:
EN-US'> </span>слов<span lang=EN-US style='mso-ansi-language:EN-US'> «</span>лесенкой<span
lang=EN-US style='mso-ansi-language:EN-US'>» </span>с<span style='mso-ansi-language:
EN-US'> </span>подсчетом<span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>for</span>(<span lang=EN-US
style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>j</span>=0;<span lang=EN-US
style='mso-ansi-language:EN-US'>j</span>&lt;<span lang=EN-US style='mso-ansi-language:
EN-US'>s</span>;<span lang=EN-US style='mso-ansi-language:EN-US'>j</span>++) <span
lang=EN-US style='mso-ansi-language:EN-US'>putchar</span>(' ');<span
style='mso-tab-count:2'>                  </span>// числа символов в предыдущих
словах</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>s+=strlen(w[i])-1;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>puts (w[i]); <o:p></o:p></span></p>

<p class=a0><span style='mso-spacerun:yes'> </span>}}}</p>
<p class=a0>&nbsp;</p>

<p class=a><br>
<img border="0" src="Images/labs.jpg" width="41" height="40"><b><a name="m12">Полный
обход графа.</b> Задача коммивояжера. </b>Требуется найти минимальный путь обхода
всего множества «городов», не посещая один и тот же город дважды (задача
коммивояжера). Эта задача решается аналогично на основе схемы полного перебора
возможных последовательностей, однако способ реализации такого перебора
несколько отличается от предыдущего. Технология проектирования рекурсивных
алгоритмов дает здесь следующий набор решений:</p>

<p class=a4 style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l36 level1 lfo38;
tab-stops:list 18.0pt'><![if !supportLists]>
<span
style='mso-list:Ignore; mso-fareast-font-family:Times New Roman CYR; mso-bidi-font-family:Times New Roman CYR'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Представление графа – матрица расстояний между
соседними городами (<b><a name="m13"><span lang=EN-US style='mso-ansi-language:EN-US'>R</span></b>)
(матрица смежности), нулевое значение <b><a name="m14"><span lang=EN-US style='mso-ansi-language:
EN-US'>Rij</span> – </b>отсутствие прямого пути.</p>

<p class=a4 style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l36 level1 lfo38;
tab-stops:list 18.0pt'><![if !supportLists]>
<span
style='mso-list:Ignore; mso-fareast-font-family:Times New Roman CYR; mso-bidi-font-family:Times New Roman CYR'>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Шаг рекурсивного алгоритма – при «посещении»
очередного <b><a name="m15"><span lang=EN-US style='mso-ansi-language:EN-US'>k</span></b>-го
города делается попытка движения ко всем возможным соседям, для которых
решается аналогичная задача.</p>

<p class=a4 style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l36 level1 lfo38;
tab-stops:list 18.0pt'><![if !supportLists]>
<span
style='mso-list:Ignore; mso-fareast-font-family:Times New Roman CYR; mso-bidi-font-family:Times New Roman CYR'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Используется прямое накопление результата –
длины пройденного пути - <b><a name="m16"><span lang=EN-US style='mso-ansi-language:EN-US'>lnt</span></b>
и последовательности обхода<span style='mso-spacerun:yes'>  </span>- <b><a name="m17"><span
lang=EN-US style='mso-ansi-language:EN-US'>D</span></b>, текущее значение
минимального пути и оптимальной последовательности обхода (<b><a name="m18"><span lang=EN-US
style='mso-ansi-language:EN-US'>lntmin</span> , <span lang=EN-US
style='mso-ansi-language:EN-US'>Dmin</span></b>) представляют собой глобальные
данные и корректируются при обнаружении очередного решения («успешного»
завершения рекурсии).</p>

<p class=a4 style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l36 level1 lfo38;
tab-stops:list 18.0pt'><![if !supportLists]>
<span
style='mso-list:Ignore; mso-fareast-font-family:Times New Roman CYR; mso-bidi-font-family:Times New Roman CYR'>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Начальное состояние шага рекурсивного алгоритма
– формальные параметры рекурсивной функции: номер текущего «города» (<b><a name="m19"><span
lang=EN-US style='mso-ansi-language:EN-US'>k</span></b>), количество пройденных
городов (шагов рекурсии- <b><a name="m20"><span lang=EN-US style='mso-ansi-language:EN-US'>n</span></b>),<span
style='mso-spacerun:yes'>  </span>длина пройденного пути (<b><a name="m21"><span lang=EN-US
style='mso-ansi-language:EN-US'>lnt</span></b>).</p>

<p class=a4 style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l36 level1 lfo38;
tab-stops:list 18.0pt'><![if !supportLists]>
<span
style='mso-list:Ignore; mso-fareast-font-family:Times New Roman CYR; mso-bidi-font-family:Times New Roman CYR'>5.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Ограничения рекурсии – обнаружение «успеха»:
пройдены все города (<b><a name="m22"><span lang=EN-US style='mso-ansi-language:EN-US'>n</span></b>
равно размерности задачи), отсечение «неудач»: повторное посещение одного и
того же города;</p>

<p class=a4 style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l36 level1 lfo38;
tab-stops:list 18.0pt'><![if !supportLists]>
<span
style='mso-list:Ignore; mso-fareast-font-family:Times New Roman CYR; mso-bidi-font-family:Times New Roman CYR'>6.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Последовательность обхода городов – глобальные
данные рекурсивного алгоритма, каждый шаг рекурсии добавляет в нее очередной
элемент – <b><a name="m23"><span lang=EN-US style='mso-ansi-language:EN-US'>D</span>[<span
lang=EN-US style='mso-ansi-language:EN-US'>n</span>]=<span lang=EN-US
style='mso-ansi-language:EN-US'>k</span>. </b>Но для более эффективной проверки
факта повторного «посещения» используется массив «отметок» пройденных городов,
индексируемый уже не по номеру шага алгоритма, а по номеру «города».
Рекурсивный алгоритм в начале очередного шага проверяет (<b><a name="m24"><span lang=EN-US
style='mso-ansi-language:EN-US'>M</span>[<span lang=EN-US
style='mso-ansi-language:EN-US'>k</span>]==0</b>) и устанавливает (<b><a name="m25"><span
lang=EN-US style='mso-ansi-language:EN-US'>M</span>[<span lang=EN-US
style='mso-ansi-language:EN-US'>k</span>]=1</b>) значение этого признака, а по
окончании - сбрасывает его.</p>

<p class=a4 style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l36 level1 lfo38;
tab-stops:list 18.0pt'><![if !supportLists]>
<span
style='mso-list:Ignore; mso-fareast-font-family:Times New Roman CYR; mso-bidi-font-family:Times New Roman CYR'>7.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Правила перебора возможных вариантов: цикл по
строке матрицы смежности – перебор возможных соседей <span lang=EN-US
style='mso-ansi-language:EN-US'>c</span> пропуском тех, до которых нет прямого
пути (<b><a name="m26"><span lang=EN-US style='mso-ansi-language:EN-US'>R</span>[<span
lang=EN-US style='mso-ansi-language:EN-US'>k</span>][<span lang=EN-US
style='mso-ansi-language:EN-US'>i</span>]=0</b>);</p>

<p class=a4 style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l36 level1 lfo38;
tab-stops:list 18.0pt'><![if !supportLists]>
<span
style='mso-list:Ignore; mso-fareast-font-family:Times New Roman CYR; mso-bidi-font-family:Times New Roman CYR'>8.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Начальное состояние следующего шага –
фактические параметры рекурсивного вызова: «номер соседнего города» - индекс
цикла перебора (<b><a name="m27"><span lang=EN-US style='mso-ansi-language:EN-US'>i</span></b>),
количество шагов рекурсии – <b><a name="m28"><span lang=EN-US style='mso-ansi-language:EN-US'>n</span>+1</b>,
длина пройденного пути – <b><a name="m29"><span lang=EN-US style='mso-ansi-language:EN-US'>lnt</span>+<span
lang=EN-US style='mso-ansi-language:EN-US'>R</span>[<span lang=EN-US
style='mso-ansi-language:EN-US'>k</span>][<span lang=EN-US
style='mso-ansi-language:EN-US'>i</span>]</b>;</p>

<p class=a4 style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l36 level1 lfo38;
tab-stops:list 18.0pt'><![if !supportLists]>
<span
style='mso-list:Ignore; mso-fareast-font-family:Times New Roman CYR; mso-bidi-font-family:Times New Roman CYR'>9.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Условия первоначального вызова рекурсивной
функции в <span lang=EN-US style='mso-ansi-language:EN-US'>main</span> – <b><a name="m30"><span
lang=EN-US style='mso-ansi-language:EN-US'>step</span>(0,0,0)</b>.</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------74-04.<span
lang=EN-US style='mso-ansi-language:EN-US'>cpp</span></p>

<p class=a0>//----- Задача коммивояжера - полный обход графа</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>#define N 5<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>int
R[N][N]={{0,4,2,0,0},{4,0,2,1,3},{2,2,0,0,6},{0,1,0,0,1},{0,3,6,1,0}};<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>int</span><span
lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:EN-US'>M</span>[<span
lang=EN-US style='mso-ansi-language:EN-US'>N</span>]={0,0,0,0,0};<span
style='mso-spacerun:yes'>               </span><span style='mso-tab-count:1'>    </span>//
Отметка пройденных &quot;городов&quot;</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>int</span><span
lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:EN-US'>W</span>[N];<span
style='mso-tab-count:3'>                                   </span>// Текущая
последовательность обхода</p>

<p class=a0>int Wmin[N];<span style='mso-tab-count:3'>                              </span>//
Оптимальная последовательность обхода</p>

<p class=a0>int minlnt=-1;<span style='mso-tab-count:3'>                             </span>//
Длина минимального пути</p>

<p class=a0>void step(int n, int k, int lnt){<span style='mso-tab-count:1'>        </span>//
n - номер шага, k - номер &quot;города&quot;</p>

<p class=a0>if (n==N){<span style='mso-tab-count:3'>                                   </span>//
lnt - длина пройденого пути</p>

<p class=a0><span style='mso-tab-count:1'>            </span>if (minlnt==-1 ||
lnt&lt;minlnt)<span style='mso-tab-count:1'>          </span>// Обход закончен
- фиксировать минимум</p>

<p class=a0><span style='mso-tab-count:2'>                        </span>{</p>

<p class=a0><span style='mso-tab-count:2'>                        </span>minlnt=lnt;<span
style='mso-tab-count:2'>                     </span>// Запомнить длину и
последовательность</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>for (int i=0;i&lt;N;i++)<span
style='mso-tab-count:1'>         </span>// </span>обхода<span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:3'>                                    </span>Wmin[i]=W[i];<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:2; mso-ansi-language:EN-US' lang="EN-US">                        </span>}</p>

<p class=a0><span style='mso-tab-count:1'>            </span>return;</p>

<p class=a0><span style='mso-tab-count:1'>            </span>}</p>

<p class=a0>if (M[k]==1) return;<span style='mso-tab-count:3'>                                 </span>//
Повторное прохождение</p>

<p class=a0>W[n]=k;<span style='mso-tab-count:5'>                                                            </span>//
Дополнить последовательность обхода</p>

<p class=a0>M[k]=1;<span style='mso-tab-count:5'>                                                 </span>//
Отметить прохождение</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>for (int i=0;
i&lt;N; i++){<span style='mso-spacerun:yes'>            </span><span
style='mso-tab-count:2'>                  </span>// </span>Просмотр<span
style='mso-ansi-language:EN-US'> </span>соседей<span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:1; mso-ansi-language:EN-US' lang="EN-US">            </span>if (R[k][i]==0) continue;<span
style='mso-tab-count:2'>               </span>// Соседи не связаны - пропустить</p>

<p class=a0><span style='mso-tab-count:1'>            </span>step(n+1,i,lnt+R[k][i]);<span
style='mso-tab-count:2'>                </span>// Рекурсивный вызов для
соседнего</p>

<p class=a0><span style='mso-tab-count:1'>            </span>}<span
style='mso-tab-count:4'>                                               </span>//
&quot;города&quot; с учетом расстояния до него</p>

<p class=a0>M[k]=0; }<span style='mso-tab-count:4'>                                               </span>//
Сбросить отметку</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void main(){
step(0,0,0); printf(&quot;\nmin=%d\ntowns:&quot;,minlnt);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for (int i=0; i&lt;N; i++)
printf(&quot;%d-&quot;,Wmin[i]); }</span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=a4><b><a name="m31">Головоломка с переливанием. </b>Требуется при помощи двух
емкостей 3 и <st1:metricconverter ProductID="5 литров" w:st="on">5 литров</st1:metricconverter>
получить во второй емкость 4 литра. Рекурсивный характер решения задачи методом
полного перебора возможных вариантов состоит в том, что для каждого варианта
«разлива» (заполнения емкостей) имеется 6 смежных вариантов (аналогичных
подзадач), получаемых из исходного:</p>

<p class=a1>- выливанием жидкости из одной из емкостей;</p>

<p class=a1>- доливанием жидкости в одну из емкостей (до края);</p>

<p class=a1>- переливанием жидкости из одной емкости в другую c учетом того,
сколько жидкости осталось в исходной емкости и сколько места есть в другой (из
этих двух значений нужно выбрать минимум).</p>

<p class=a>Единственная особенность решения задачи состоит в том, что
промежуточные варианты разлива нужно запоминать, чтобы избежания зацикливания
рекурсии. Программа использует полный комбинаторный перебор возможных вариантов
с «прямым» накоплением результата и запоминанием оптимального. Заведомо
неэффективные варианты отсекаются при обнаружении того факта, что текущая
последовательность операций становится длиннее уже имеющейся оптимальной.</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>//----------------------------------------------------74-05.cpp</p>

<p class=a0>// Головоломка: с помощью банок 3 и <st1:metricconverter
ProductID="5 литров" w:st="on">5 литров</st1:metricconverter> получить 4 литра</p>

<p class=a0>#define P1 3<span style='mso-tab-count:5'>                                                      </span>//
Емкости банок</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>#define P2 5<o:p></o:p></span></p>

<p class=a0>#<span lang=EN-US style='mso-ansi-language:EN-US'>define</span><span
lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:EN-US'>EX</span> 4<span
style='mso-tab-count:5'>                                                      </span>//
Искомый результат</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>#define N 1000<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=a0>struct var{</p>

<p class=a0><span style='mso-tab-count:1'>            </span>int nmax;<span
style='mso-tab-count:4'>                                               </span>//
Количество операций</p>

<p class=a0><span style='mso-tab-count:1'>            </span>int V[N][2];<span
style='mso-tab-count:4'>                                            </span>//
Вариант &quot;разлива&quot;</p>

<p class=a0><span style='mso-tab-count:1'>            </span>int D[N];<span
style='mso-tab-count:4'>                                                </span>//
Следующее действие</p>

<p class=a0><span style='mso-tab-count:1'>            </span>} VAR,OPT={-1};</p>

<p class=a0>int cnt=0;<span style='mso-tab-count:5'>                                                          </span>//
Счетчик рекурсивных вызовов</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>void F(int v1,int v2, int n){<span style='mso-tab-count:3'>                                    </span>//
v1,v2 - текущее заполнение &quot;банок&quot;</p>

<p class=a0>VAR.V[n][0]=v1;<span style='mso-tab-count:5'>                                                 </span>//
Сохранение нового варианта &quot;разлива&quot;</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>VAR.V[n][1]=v2;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>VAR.D[n]=0;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>if (v2==EX) {<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>if (OPT.nmax==-1 || n &lt; OPT.nmax)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>OPT=VAR, OPT.nmax=n;<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:1; mso-ansi-language:EN-US' lang="EN-US">            </span>return;<span
style='mso-tab-count:1'>   </span>}<span style='mso-tab-count:4'>                                               </span>//
Найдено требуемое заполнение</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>if (OPT.nmax!=-1
&amp;&amp; n&gt;=OPT.nmax) <o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:1; mso-ansi-language:EN-US' lang="EN-US">            </span>return;<span
style='mso-tab-count:5'>                                                   </span>//
Есть уже более оптимальное решение</p>

<p class=a0>cnt++;</p>

<p class=a0>for (int i=0;i&lt;n;i++)<span style='mso-tab-count:4'>                                             </span>//
Проверка на повторение &quot;разлива&quot;</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>if (VAR.V[i][0]==v1 &amp;&amp; VAR.V[i][1]==v2)
return;<o:p></o:p></span></p>

<p class=a0>// Возможные подзадачи - заполнение и опустошение каждой
&quot;банки&quot;</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>VAR.D[n]++;
F(P1,v2,n+1);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>VAR.D[n]++;
F(v1,P2,n+1);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>VAR.D[n]++; F(
0,v2,n+1);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>VAR.D[n]++; F(v1,
0,n+1);<o:p></o:p></span></p>

<p class=a0>// Возможные подзадачи - переливание из одной &quot;банки&quot; в
другую</p>

<p class=a0>// Объем переливаемой жидкости - </p>

<p class=a0>// Минимум из остатка в первой и свободного места во второй</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>int dv=(v1 &lt;
P2-v2 ? v1 : P2-v2);<span style='mso-tab-count:1'>   </span><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>VAR.D[n]++; if
(dv!=0) F(v1-dv, v2+dv,n+1);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>dv=(P1-v1 &lt; v2
? P1-v1 : v2);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>VAR.D[n]++; if
(dv!=0) F(v1+dv, v2-dv,n+1); }<o:p></o:p></span></p>

</div>
<a name="lr11"><h3>Лабораторный практикум</h3>
<p class="a" style="text-indent: -18.0pt; margin-left: 36.0pt">1.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Тройки и семерки. Какое наименьшее число обладает тем свойством, что оно 
записывается только с помощью цифр 3 и 7 и что как оно, так и сумма его цифр 
делятся на 3 и 7? Например, 7 733 733 делится без остатка на 3 и на 7, но сумма 
его цифр (33) на 3 делится, а на 7 нет, поэтому оно не может служить решением 
задачи.</p>
<p class="a" style="text-indent: -18.0pt; margin-left: 36.0pt">2.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Задача о десяти цифрах. Расставьте все десять цифр 1, 2, 3, 4, 5, 6, 7, 
8, 9, 0 в таком порядке, чтобы получившееся число делилось на все числа от 2 до 
18. Если, например, разместить цифры в последовательности 1 274 953 680, то 
получившееся число будет делиться на 2, 3, 4, 5 и т. д. до 16, но не разделится 
на 17.</p>
<p class="a" style="text-indent: -18.0pt; margin-left: 36.0pt">3.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Между цифрами от 1 до 9 расставить знаки операций +,-,*,/ так, чтобы 
получилось заданное число.</p>
<p class="a" style="text-indent: -18.0pt; margin-left: 36.0pt">4.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Между цифрами от 1 до 9 расставить знаки операций +,- так, чтобы 
получилось заданное число, из подряд идущих цифр можно составлять многозначные, 
например 123-45+7+8-9.</p>
<p class="a" style="text-indent: -18.0pt; margin-left: 36.0pt">5.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Реализовать рекурсивный алгоритм построения цепочки из имеющегося набора 
костей домино.</p>
<p class="a" style="text-indent: -18.0pt; margin-left: 36.0pt">6.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>На шахматной доске имеется <span lang="EN-US">N </span>фигур противника. 
Разместить на ней минимальное количество коней так, чтобы все фигуры противника 
находились «под боем».</p>
<p class="a" style="text-indent: -18.0pt; margin-left: 36.0pt">7.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>На шахматной доске имеется <span lang="EN-US">N </span>фигур противника. 
Разместить на ней минимальное количество слонов так, чтобы все фигуры противника 
находились «под боем».</p>
<p class="a" style="text-indent: -18.0pt; margin-left: 36.0pt">8.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Имеется 2 строки символов <span lang="EN-US">A </span>и
<span lang="EN-US">B</span>, например, <span lang="EN-US">AAABAB </span>и
<span lang="EN-US">ABAABBB</span>. Алгоритм просматривает пару строк и имеет 
право выполнить одну из команд (удалить очередной символ первой (второй) строки, 
вставить символ <span lang="EN-US">A</span>(<span lang="EN-US">B</span>) в 
текущую позицию первой (второй) строки. Определить минимальную 
последовательность команд для преобразования строк.</p>
<p class="a" style="text-indent: -18.0pt; margin-left: 36.0pt">9.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Задан словарь и слов одинаковой длины, например «барак, баран, банан, 
дурак, бутон, бутан, питон, барин». Для заданной пары слов определить цепочку 
так, чтобы каждое следующее слово отличалось не более чем на 2 буквы.</p>
<p class="a" style="text-indent: -18.0pt; margin-left: 36.0pt">10.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;
</span>Программа генерирует текст из строки, содержащей определения циклических 
фрагментов вида ...(Иван,Петр,Федор=Жил-был * (синего,белого,желтого= у самого * 
моря)).... Символ «*» определяет место подстановки имени из списка в очередное 
повторение фрагмента. Допускается вложенность фрагментов. Полученный текст 
помещается в выходную строку. </p>
<p class="a" style="text-indent: -18.0pt; margin-left: 36.0pt">11.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;
</span>Задан набор слов (массив указателей на строки). Построить из них любую 
цепочку таким образом, чтобы символ в начале следующего совпадал с одним из 
символов в середине предыдущего (не первым и не&nbsp; последним). При выводе 
разместить слова с отступом от начала строки так, чтобы они соответствовали 
совпадению букв.</p>
<p class="a" style="text-indent: -18.0pt; margin-left: 36.0pt">12.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;
</span>Задача раскраски карты. Страны на карте заданы матрицей смежности. Если 
страны i,j имеют на карте общую границу, то элемент матрицы A[i,j] равен 1, 
иначе 0. Смежные страны не должны иметь одинакового цвета. «Раскрасить» карту 
минимальным количеством цветов (генерация матрицы смежности в <span lang="EN-US">
progrramms</span>/<span lang="EN-US">randomatrix</span>.<span lang="EN-US">cpp</span>).</p>
<p class="a" style="text-indent: -18.0pt; margin-left: 36.0pt">13.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;
</span>Задача о разноцветных проводах. Имеется система узлов и соединений. Если 
узлы i,j соединены между собой, то элемент матрицы A[i,j] равен 1, иначе 0. 
Определить минимальное количество проводов разного цвета для выполнения 
соединений так, чтобы в каждом узле не было двух одинаковых цветов (генерация 
матрицы смежности в <span lang="EN-US">progrramms</span>/<span lang="EN-US">randomatrix</span>.<span lang="EN-US">cpp</span>).</p>
<p class="a" style="text-indent: -18.0pt; margin-left: 36.0pt">14.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;
</span>Задача проведения границы на карте («создание военных блоков»). Страны на 
карте заданы матрицей смежности. Если страны i,j имеют на карте общую границу, 
то элемент матрицы A[i,j] равен 1, иначе 0. Необходимо разбить страны на две 
группы так, чтобы количество пар смежных стран из противоположных групп было 
минимальным (генерация матрицы смежности в <span lang="EN-US">progrramms</span>/<span lang="EN-US">randomatrix</span>.<span lang="EN-US">cpp</span>).</p>
<p class="a" style="text-indent: -18.0pt; margin-left: 36.0pt">&nbsp;15. 
16&nbsp;корзин расположили по кругу. Можно ли в них разложить 55&nbsp;арбузов так, чтобы 
количество арбузов в любых двух соседних корзинах отличалось на&nbsp;1?.</p>
<p class="a" style="text-indent: -18.0pt; margin-left: 36.0pt">
<span style="font-family: Times New Roman"><font size="3">16.&nbsp; </font>
</span>
<span style="font-style:normal; font-variant:normal; font-weight:normal; font-family:Times New Roman">
<font size="3">&nbsp;</font></span><font face="Times New Roman">В клетках 
шахматной доски размера </font><i><font face="Times New Roman">
<span lang="EN-US" style="position: relative; top: 3.0pt"><!--[if gte vml 1]><v:shapetype id="_x0000_t75"
 coordsize="21600,21600" o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe"
 filled="f" stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="_x0000_s1026" type="#_x0000_t75" style='width:42.75pt;
 height:15pt'>
 <v:imagedata src="074.files/image001.wmz" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=57 height=20
src="074.files/image002.gif" v:shapes="_x0000_s1026"><![endif]></span></font><!--[if gte mso 9]><![endif]--><font face="Times New Roman">&nbsp;</font></i><font face="Times New Roman">записаны 
по горизонталям в порядке возрастания целые числа от 1 до <i><span lang="EN-US">
N</span></i><sup>2</sup>. На доске расставлены <i><span lang="EN-US">N</span></i> 
ферзей, «не бьющих» друг </font>друга. Иными словами, каждые две клетки, занятые 
ферзями, находятся на разных горизонталях, вертикалях и диагоналях. Найдите 
максимальную сумму чисел во всех подобных наборах для <i><span lang="EN-US">N</span>&nbsp;</i>=&nbsp;10,
<i><span lang="EN-US">N&nbsp;</span></i>=<span lang="EN-US">&nbsp;</span>20 и <i>
<span lang="EN-US">N&nbsp;</span></i>=<span lang="EN-US">&nbsp;</span>30.</p>
<p class="a" style="text-indent: -18.0pt; margin-left: 36.0pt">17. Среди всех 
наборов различных натуральных чисел, сумма которых равна заданному числу <i>
<span lang="EN-US">N</span></i>, выбран тот, который имеет максимальное 
произведение входящих в него чисел. Найдите минимальное натуральное число, 
большее 1, которое не входит в указанный набор. Получите ответ для <i>
<span lang="EN-US">N&nbsp;</span></i>=<span lang="EN-US">&nbsp;</span>500, <i>
<span lang="EN-US">N&nbsp;</span></i>=<span lang="EN-US">&nbsp;</span>700 и <i>
<span lang="EN-US">N&nbsp;</span></i>=<span lang="EN-US">&nbsp;</span>902. Ответ введите 
через запятую без пробела</p>
<h3>Вопросы без ответов</h3>
<p class="a">Содержательно сформулируйте результат выполнения рекурсивной 
функции, укажите в тесте технологические приемы рекурсивного программирования. 
Оцените трудоемкость рекурсивного алгоритма (аналитически). Добавьте в функцию 
счетчик рекурсивных вызовов (или базовых операций – сравнения, перемещения, 
обмена). Сравните теоретическое и экспериментальное значения трудоемкости для 
различных размерностей задачи.</p>
<p class="a1"><b><a name="m32">Пример выполнения тестового задания.</b></p>
<p class="a0">&nbsp;</p>
<p class="a0">
//----------------------------------------------------------------------</p>
<p class="a0"><span lang="EN-US">void FF</span>(<span lang="EN-US">int A</span>[],
<span lang="EN-US">int n</span>){</p>
<p class="a0"><span lang="EN-US">if (n==1) return;</span></p>
<p class="a0"><span lang="EN-US">for (int j=1,k=0;j&lt;n;j++)</span></p>
<p class="a0"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (A[j]&gt;A[k]) k=j;</span></p>
<p class="a0"><span lang="EN-US">int v=A[k];A[k]=A[n-1];A[n-1]=v;</span></p>
<p class="a0"><span lang="EN-US">FF</span>(<span lang="EN-US">A</span>,<span lang="EN-US">n</span>-1);}</p>
<p class="a">Основу теста составляет линейная рекурсия: размерность задачи на 
каждом шаге уменьшается на 1. Функция находит максимальный элемент массива и 
меняет его с последним, после чего рекурсивно вызывает себя для части массива, 
не включающей последний элемент. В результате имеет место сортировка выбором. 
Рекуррентная формула трудоемкости для шага рекурсии -<b><a name="m33"> <span lang="EN-US">T<sub>N</sub></span>=<span lang="EN-US">T<sub>N</sub></span><sub>-1
</sub>+<span lang="EN-US">N</span>, </b>для которой общая трудоемкость -<b><a name="m34">
<span lang="EN-US">T</span>=<span lang="EN-US">N</span><sup>2</sup>/2, </b>
учитывая, что количество сравнений - <b><a name="m35">&nbsp;<span lang="EN-US">N</span>-1, </b>и <b><a name="m36">
<span lang="EN-US">T<sub>N</sub></span>=<span lang="EN-US">T<sub>N</sub></span><sub>-1
</sub>+<span lang="EN-US">N</span>-1, </b>получим <b><a name="m37"><span lang="EN-US">T</span>=<span lang="EN-US">N</span>(<span lang="EN-US">N</span>-1)/2.</b></p>
<p class="a0">&nbsp;</p>
<p class="a0"><span lang="EN-US">int FF</span>(<span lang="EN-US">int A</span>[],
<span lang="EN-US">int n</span>){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Трудоемкость
<span lang="EN-US">m</span> – количество сравнений</p>
<p class="a0"><span lang="EN-US">if</span> (<span lang="EN-US">n</span>==1)
<span lang="EN-US">return</span> 0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 
Ограничение рекурсии </p>
<p class="a0"><span lang="EN-US">for</span> (<span lang="EN-US">int m</span>=0,<span lang="EN-US">j</span>=1,<span lang="EN-US">k</span>=0;<span lang="EN-US">j</span>&lt;<span lang="EN-US">n</span>;<span lang="EN-US">j</span>++,<span lang="EN-US">m</span>++)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
// Найти максимальный в массиве</p>
<p class="a0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span lang="EN-US">if (A[j]&gt;A[k]) k=j;</span></p>
<p class="a0"><span lang="EN-US">int v=A[k];A[k]=A[n-1];A[n-1]=v;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
</span>Обменять с последним</p>
<p class="a0"><span lang="EN-US">return FF</span>(<span lang="EN-US">A</span>,<span lang="EN-US">n</span>-1)+
<span lang="EN-US">m</span>; }&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Рекурсивный вызов 
для размерности, меньшей на 1</p>
<p class="a0">&nbsp;</p>
<p class="a0"><span lang="EN-US">void main() { int 
v=0,B[10]={4,8,3,4,8,2,3,8,3,6};</span></p>
<p class="a0"><span lang="EN-US">printf(&quot;T=%d\n&quot;,FF(B,10));</span></p>
<p class="a0"><span lang="EN-US">for (int i=0;i&lt;10;i++) printf(&quot;%d &quot;,B[i]);</span></p>
<p class="a0"><span lang="EN-US">} </span></p>
<p class="a0"><span lang="EN-US">&nbsp;</span></p>
<p class="a0"><span lang="EN-US">
//------------------------------------------------------74-06.cpp</span></p>
<p class="a0"><span lang="EN-US">
//------------------------------------------------------ 1</span></p>
<p class="a0"><span lang="EN-US">int F1(int n)</span></p>
<p class="a0"><span lang="EN-US">{ if (n==1) return 1;</span></p>
<p class="a0"><span lang="EN-US">return (n * F1(n-1)); }</span></p>
<p class="a0"><span lang="EN-US">
//------------------------------------------------------ 2</span></p>
<p class="a0"><span lang="EN-US">int F2(int A[],int a, int b)</span></p>
<p class="a0"><span lang="EN-US">{ if (a&gt;b) return 0; if (a==b) return A[a];</span></p>
<p class="a0"><span lang="EN-US">int m=(a+b)/2;</span></p>
<p class="a0"><span lang="EN-US">int v1=F2(A,a,m),v2=F2(A,m+1,b);</span></p>
<p class="a0"><span lang="EN-US">return v1&gt;v2 ? v1: v2; }</span></p>
<p class="a0"><span lang="EN-US">
//------------------------------------------------------ 3</span></p>
<p class="a0"><span lang="EN-US">int F3(int A[],int a, int b)</span></p>
<p class="a0"><span lang="EN-US">{&nbsp; if (a&gt;b) return 0; if (a==b) return A[a];</span></p>
<p class="a0"><span lang="EN-US">int m=(a+b)/2;</span></p>
<p class="a0"><span lang="EN-US">return F3(A,a,m)+F3(A,m+1,b); }</span></p>
<p class="a0"><span lang="EN-US">
//------------------------------------------------------ 4</span></p>
<p class="a0"><span lang="EN-US">void F4(int A[], int a, int b)</span></p>
<p class="a0"><span lang="EN-US">{ int i,j,mode;</span></p>
<p class="a0"><span lang="EN-US">if (a&gt;=b) return;</span></p>
<p class="a0"><span lang="EN-US">for (i=a, j=b, mode=1; i != j; mode &gt;0 ? i++ : 
j--)</span></p>
<p class="a0"><span lang="EN-US">if (A[i] &gt; A[j])</span></p>
<p class="a0"><span lang="EN-US">&nbsp;&nbsp;&nbsp; { int c;</span></p>
<p class="a0"><span lang="EN-US">&nbsp;&nbsp;&nbsp; c=A[i]; A[i]=A[j]; A[j]=c; mode = -mode;</span></p>
<p class="a0"><span lang="EN-US">&nbsp;&nbsp;&nbsp; }</span></p>
<p class="a0"><span lang="EN-US">F4(A,a,i-1); F4(A,i+1,b); }</span></p>
<p class="a0"><span lang="EN-US">
//------------------------------------------------------ 5</span></p>
<p class="a0"><span lang="EN-US">int F5(int A[], int a, int b, int val)</span></p>
<p class="a0"><span lang="EN-US">{ int i,j,mode;</span></p>
<p class="a0"><span lang="EN-US">if (a&gt;=b) return -1;</span></p>
<p class="a0"><span lang="EN-US">int m=(a+b)/2;</span></p>
<p class="a0"><span lang="EN-US">if (val==A[m]) return m;</span></p>
<p class="a0"><span lang="EN-US">if (val&lt;A[m])&nbsp; return F5(A,a,m-1,val);</span></p>
<p class="a0"><span lang="EN-US">return F5(A,m+1,b,val); }</span></p>
<p class="a0"><span lang="EN-US">
//------------------------------------------------------ 6</span></p>
<p class="a0"><span lang="EN-US">long F6(int n){</span></p>
<p class="a0"><span lang="EN-US">if (n==0 || n==1) return 1;</span></p>
<p class="a0"><span lang="EN-US">return F6(n-1)+F6(n-2);}</span></p>
<p class="a0"><span lang="EN-US">
//------------------------------------------------------ 7</span></p>
<p class="a0"><span lang="EN-US">char *F7(char *p, char *s) {</span></p>
<p class="a0"><span lang="EN-US">if ( *s =='\0') return p;</span></p>
<p class="a0"><span lang="EN-US">*p++ = *s;</span></p>
<p class="a0"><span lang="EN-US">p=F7(p, s+1);</span></p>
<p class="a0"><span lang="EN-US">*p++ = *s;</span></p>
<p class="a0"><span lang="EN-US">return p;}</span></p>
<p class="a0"><span lang="EN-US">void z7() { char *q, S[80]; *F7(S, &quot;abcd&quot;)=0; }</span></p>
<p class="a0"><span lang="EN-US">
//------------------------------------------------------ 8</span></p>
<p class="a0"><span lang="EN-US">void F8(char *&amp;p, char *s){</span></p>
<p class="a0"><span lang="EN-US">if ( *s =='\0') return;</span></p>
<p class="a0"><span lang="EN-US">*p++ = *s;</span></p>
<p class="a0"><span lang="EN-US">F8(p, s+1);</span></p>
<p class="a0"><span lang="EN-US">*p++ = *s; }</span></p>
<p class="a0"><span lang="EN-US">void z8() {char *q, S[80]; q = S; F8(q,&quot;abcd&quot;); 
*q=0; }</span></p>
<p class="a0"><span lang="EN-US">
//------------------------------------------------------ 9</span></p>
<p class="a0"><span lang="EN-US">double F9(double *pk, double x, int n)</span></p>
<p class="a0"><span lang="EN-US">{ if (n==0) return(*pk);</span></p>
<p class="a0"><span lang="EN-US">return *pk + x *F9(pk+1,x,n-1); }</span></p>
<p class="a0"><span lang="EN-US">void z9() {double B[]={5.,0.7,4.,3.} 
,X=3.,Y=F9(B,X,4); }</span></p>
<p class="a0"><span lang="EN-US">
//------------------------------------------------------ 10</span></p>
<p class="a0"><span lang="EN-US">void F10(int *p, int nn)</span></p>
<p class="a0"><span lang="EN-US">{ if (nn==1) { *p=0; return; }</span></p>
<p class="a0"><span lang="EN-US">for (int i=2; nn % i !=0; i++);</span></p>
<p class="a0"><span lang="EN-US">*p=i; F10(p+1,nn/i); }</span></p>

</body>

</html>
