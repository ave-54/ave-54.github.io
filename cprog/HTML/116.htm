<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 11">
<meta name=Originator content="Microsoft Word 11">
<link rel=Edit-Time-Data href="126%20Финал%20-%20апофеоз.files/editdata.mso">
<title>12.6. Финал-апофеоз</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="place"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="State"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>www.PHILka.RU</o:Author>
  <o:LastAuthor>www.PHILka.RU</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>389</o:TotalTime>
  <o:Created>2008-05-29T16:43:00Z</o:Created>
  <o:LastSaved>2008-05-29T16:43:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>4336</o:Words>
  <o:Characters>24720</o:Characters>
  <o:Company>NSTU_VT</o:Company>
  <o:Bytes>11776</o:Bytes>
  <o:Lines>206</o:Lines>
  <o:Paragraphs>57</o:Paragraphs>
  <o:CharactersWithSpaces>28999</o:CharactersWithSpaces>
  <o:Version>11.6360</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DoNotHyphenateCaps/>
  <w:DrawingGridHorizontalSpacing>0,55 пт</w:DrawingGridHorizontalSpacing>
  <w:DrawingGridVerticalSpacing>0,55 пт</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DrawingGridVerticalOrigin>99,25 пт</w:DrawingGridVerticalOrigin>
  <w:Compatibility>
   <w:WW6BorderRules/>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
   <w:UseWord97LineBreakingRules/>
   <w:SelectEntireFieldWithStartOrEnd/>
   <w:UseWord2002TableStyleRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:"Times New Roman CYR";
	panose-1:2 2 6 3 5 4 5 2 3 4;
	mso-font-charset:204;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:536902279 -2147483648 8 0 511 0;}
@font-face
	{font-family:"Arial CYR";
	panose-1:2 11 6 4 2 2 2 2 2 4;
	mso-font-charset:204;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:536902279 -2147483648 8 0 511 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
h1
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial CYR";
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:14.0pt;
	mso-bidi-font-weight:normal;}
h2
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial CYR";
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-font-weight:normal;
	font-style:italic;
	mso-bidi-font-style:normal;}
h3
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial CYR";
	mso-bidi-font-family:"Times New Roman";
	font-weight:normal;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:center 8.0cm right 16.0cm;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:EN-US;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:center 8.0cm right 16.0cm;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:EN-US;}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
p.a, li.a, div.a
	{mso-style-name:текст;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:36.0pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a0, li.a0, div.a0
	{mso-style-name:программа;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:Arial;
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a1, li.a1, div.a1
	{mso-style-name:список;
	mso-style-parent:текст;
	margin-top:6.0pt;
	margin-right:18.45pt;
	margin-bottom:0cm;
	margin-left:64.35pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:-18.0pt;
	mso-pagination:widow-orphan;
	mso-list:l0 level1 lfo1;
	tab-stops:42.55pt list 64.35pt;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a2, li.a2, div.a2
	{mso-style-name:определение;
	mso-style-parent:текст;
	margin-top:12.0pt;
	margin-right:32.9pt;
	margin-bottom:12.0pt;
	margin-left:35.45pt;
	text-align:justify;
	text-indent:.55pt;
	mso-pagination:widow-orphan;
	border:none;
	mso-border-alt:solid windowtext 1.5pt;
	padding:0cm;
	mso-padding-alt:1.0pt 1.0pt 1.0pt 1.0pt;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a3, li.a3, div.a3
	{mso-style-name:эпиграф;
	margin-top:0cm;
	margin-right:32.9pt;
	margin-bottom:0cm;
	margin-left:5.0cm;
	margin-bottom:.0001pt;
	text-align:right;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Arial CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-style:italic;
	mso-bidi-font-style:normal;}
p.a4, li.a4, div.a4
	{mso-style-name:"от края";
	mso-style-parent:текст;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a5, li.a5, div.a5
	{mso-style-name:Формула;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	mso-ansi-language:EN-US;
	layout-grid-mode:line;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.a6, li.a6, div.a6
	{mso-style-name:"без формата";
	mso-style-parent:программа;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:Arial;
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a7, li.a7, div.a7
	{mso-style-name:стихи;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:36.0pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.1, li.1, div.1
	{mso-style-name:эпиграф1;
	mso-style-parent:эпиграф;
	margin-top:0cm;
	margin-right:9.35pt;
	margin-bottom:0cm;
	margin-left:9.0cm;
	margin-bottom:.0001pt;
	text-align:right;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Arial CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-style:italic;
	mso-bidi-font-style:normal;}
 /* Page Definitions */
 @page
	{mso-footnote-separator:url("126%20Финал%20-%20апофеоз.files/header.htm") fs;
	mso-footnote-continuation-separator:url("126%20Финал%20-%20апофеоз.files/header.htm") fcs;
	mso-endnote-separator:url("126%20Финал%20-%20апофеоз.files/header.htm") es;
	mso-endnote-continuation-separator:url("126%20Финал%20-%20апофеоз.files/header.htm") ecs;}
@page Section1
	{size:21.0cm 842.0pt;
	margin:33.45pt 42.55pt 72.0pt 89.85pt;
	mso-header-margin:14.2pt;
	mso-footer-margin:31.75pt;
	mso-even-header:url("126%20Финал%20-%20апофеоз.files/header.htm") eh1;
	mso-header:url("126%20Финал%20-%20апофеоз.files/header.htm") h1;
	mso-even-footer:url("126%20Финал%20-%20апофеоз.files/header.htm") ef1;
	mso-footer:url("126%20Финал%20-%20апофеоз.files/header.htm") f1;
	mso-first-header:url("126%20Финал%20-%20апофеоз.files/header.htm") fh1;
	mso-first-footer:url("126%20Финал%20-%20апофеоз.files/header.htm") ff1;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:1628194852;
	mso-list-type:hybrid;
	mso-list-template-ids:-964799380 -1450833310 68747267 68747269 68747265 68747267 68747269 68747265 68747267 68747269;}
@list l0:level1
	{mso-level-number-format:bullet;
	mso-level-style-link:список;
	mso-level-text:\F0B7;
	mso-level-tab-stop:64.35pt;
	mso-level-number-position:left;
	margin-left:64.35pt;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l0:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:100.35pt;
	mso-level-number-position:left;
	margin-left:100.35pt;
	text-indent:-18.0pt;
	font-family:"Courier New";}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Обычная таблица";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-bidi-font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
table.MsoTableGrid
	{mso-style-name:"Сетка таблицы";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	border:solid windowtext 1.0pt;
	mso-border-alt:solid windowtext .5pt;
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-border-insideh:.5pt solid windowtext;
	mso-border-insidev:.5pt solid windowtext;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-bidi-font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
  <o:rules v:ext="edit">
   <o:r id="V:Rule2" type="callout" idref="#_x0000_s1171"/>
   <o:r id="V:Rule3" type="callout" idref="#_x0000_s1173"/>
   <o:r id="V:Rule4" type="callout" idref="#_x0000_s1174"/>
   <o:r id="V:Rule5" type="callout" idref="#_x0000_s1177"/>
   <o:r id="V:Rule6" type="callout" idref="#_x0000_s1188"/>
   <o:r id="V:Rule7" type="callout" idref="#_x0000_s1199"/>
   <o:r id="V:Rule8" type="callout" idref="#_x0000_s1203"/>
   <o:r id="V:Rule9" type="callout" idref="#_x0000_s1204"/>
   <o:r id="V:Rule10" type="callout" idref="#_x0000_s1206"/>
   <o:r id="V:Rule15" type="callout" idref="#_x0000_s1212"/>
  </o:rules>
  <o:regrouptable v:ext="edit">
   <o:entry new="1" old="0"/>
   <o:entry new="2" old="1"/>
   <o:entry new="3" old="0"/>
   <o:entry new="4" old="0"/>
  </o:regrouptable>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=RU style='tab-interval:36.0pt' background="back.gif">

<div class=Section1>

<h2>11.6. Финал – апофеоз. Пример проектирования</h2>

<p class=a>Для демонстрации всех достоинств технологии ООП рассмотрим проект
«средней руки» - таблица произвольной размерности в памяти и в двоичном файле.
Здесь нам пригодятся следующие элементы традиционного и объектно-ориентированного
программирования:</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>абстрактный базовый класс для представления
произвольного типа данных – элемента таблицы (<b style='mso-bidi-font-weight:
normal'><a name="m1">11.4</b>);</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>преобразование типов указателей для работы с
различными типами данных в памяти объекта базового класса (<b style='mso-bidi-font-weight:
normal'><a name="m2">9.2);</b></p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>шаблон динамического массива указателей для
многократного использования линейной структуры данных с объектами разных типов
(<b style='mso-bidi-font-weight:normal'><a name="m3">10.5, 6.2</b>);</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>работа <span style='mso-spacerun:yes'> </span>с
двоичными файлами – как последовательного, так и произвольного доступа (<b
style='mso-bidi-font-weight:normal'>9.5, 9.6</b>);</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>решение проблем идентификации и порождения
объектов множества родственных классов (загрузка таблицы из файла, добавление
строк).</p>

<p class=a>Данный пример не является функционально полным. Отсутствующие в нем
методы не являются оригинальными по содержанию и легко могут быть
воспроизведены самостоятельно.</p>

<h3>Постановка задачи</h3>

<p class=a>Требуется разработать таблицу произвольной размерности, содержащую
столбцы из заданного набора типов. В каждом столбце находятся данные одного
типа. Количество столбцов и строк, имена столбцов и закрепление за ними типов
являются <b style='mso-bidi-font-weight:normal'><a name="m4">динамическими </b>параметрами,
т.е. не «зашиты» в тексте программы, а берутся при загрузке из двоичного файла,
содержащего описание заголовка, либо формируются интерактивно (при создании
таблицы). Необходимо реализовать стандартный набор операций: добавление столбца
(создание таблицы), добавление, вставка, удаление строки, сортировка по
выбранному столбцу, сжатие (для двоичного файла), загрузка и сохранение в
файле.</p>

<h3>Данные произвольного типа</h3>

<p class=a>Основанная задача – обеспечить динамическую привязку типов данных к
столбцам. Для этого необходимо создать сущность – абстрактный тип данных: базовый
класс, который позволить объединить все хранимые в таблице типы данных одним
представлением. Этот класс может вообще не иметь собственного содержания, например,
не иметь данных и включать в себя только пустые полиморфные методы (виртуальные
функции). В 12.4 мы уже ввели<span style='mso-spacerun:yes'>  </span>понятие интерфейса
(в Java интерфейс существует как элемент языка, здесь мы его вводим как
технологический прием). Методы класса обеспечивают необходимый набор действий,
выполняемых в таблице над любым типом данных:</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>идентификация класса, к которому принадлежит
текущий объект;</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>«клонирование» - полиморфное создание копии
объекта произвольного типа;</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>ввод-вывод объекта из внешнего (символьного)
представления;</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>загрузка и сохранение объекта в последовательный
двоичный поток (файл), определение размерности объекта в файле;</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>сравнение
и сложение </span>объектов<span lang=EN-US style='mso-ansi-language:EN-US'>;</span></p>

<p class=a1 style='margin-left:46.35pt;text-indent:0cm;mso-list:none;
tab-stops:42.55pt'><o:p>&nbsp;</o:p></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>//</span>-------------<span
lang=EN-US style='mso-ansi-language:EN-US'>-----------------------------------------------------------------------------------------------116<o:p></o:p></span></p>

<p class=a0>//----------- &quot;Пустой&quot; абстрактный базовый класс для
произвольного типа данных</p>

<p class=a0>class ADT{</p>

<p class=a0>public:<span style='mso-tab-count:1'>   </span>ADT(){}</p>

<p class=a0>// Вируальный деструктор для полиморфного удаления по указателю на
БК</p>

<p class=a0>virtual <span style='mso-tab-count:1'>   </span>~ADT(){}</p>

<p class=a0>// Интерфейсные методы</p>

<p class=a0>virtual int type()=0;<span style='mso-tab-count:3'>                                 </span>//
Возвращает ID класса</p>

<p class=a0>virtual char* name()=0;<span style='mso-tab-count:3'>                            </span>//
Возвращает имя класса</p>

<p class=a0>virtual int get(char[])=0;<span style='mso-tab-count:2'>               </span><span
style='mso-tab-count:1'>            </span>// Ввод из внешнего представления</p>

<p class=a0>virtual char *put()=0;<span style='mso-tab-count:3'>                               </span>//
Вывод во внешнее представление</p>

<p class=a0>virtual int save(fstream &amp;F)=0;<span style='mso-tab-count:1'>                 </span>// Сохранение в двоичный поток</p>

<p class=a0>virtual int load(fstream &amp;F)=0;<span style='mso-tab-count:1'>                  </span>// Загрузка из в двоичного потока</p>

<p class=a0>virtual ADT *clone()=0;<span style='mso-tab-count:2'>                </span><span
style='mso-tab-count:1'>            </span>// Создание копии (клона) объекта</p>

<p class=a0>virtual int cmp(ADT*)=0;<span style='mso-tab-count:1'>                          </span>//
Сравнение объектов</p>

<p class=a0>virtual int add(ADT*)=0;<span style='mso-tab-count:1'>   </span><span
style='mso-tab-count:2'>                        </span>// Сложение объектов
1=1+2</p>

<p class=a0>virtual int fsize()=0;<span style='mso-tab-count:3'>                                 </span>//
Возвращает размер объекта в файле</p>

<p class=a0>};</p>

<p class=a>Виртуальный деструктор необходим, поскольку уничтожение объектов
будет производиться через указатель на базовый класс ADT, поскольку хранение
объектов будет осуществляться во всех структурах данных именно таким образом.</p>

<p class=a>На самом деле в Си++ существует (хотя далеко не полная) система
идентификации объектов, позволяющая получить сведения о классе, к которому он
принадлежит. Здесь мы введем собственный механизм хотя бы для того, чтобы
обеспечить независимость представления таблицы в файле от версии компилятора.</p>

<p class=a>Но все-таки желательно внести в базовый класс некоторую
функциональность, общую для всех типов данных. Для этого можно выбрать форму
представления данных объекта на низком уровне как непрерывной области памяти
изменяющегося размера. Тогда для большинства типов данных (целые, вещественные,
дата/время, строка переменной размерности) достаточно будет имеющегося представления
в базовом классе. В противном случае необходимо будет дополнить производный
класс необходимыми данными, унаследовав и переопределив с их учетом непустые
методы базового класса. Для работы же с данными базового класса необходимо
будет использовать технику преобразования типов указателей (<b
style='mso-bidi-font-weight:normal'>9.2</b>).</p>

<p class=MsoPlainText><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------------------------------------------------------------116</p>

<p class=a0>//--- Абстрактный базовый класс объектов, основанный на непрерывной
области памяти</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>class ADT_mem{<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>public:<span
style='mso-tab-count:1'>   </span>int<span style='mso-tab-count:1'>         </span>n;<span
style='mso-tab-count:2'>                     </span>// </span>текущая<span
style='mso-ansi-language:EN-US'> </span>размерность<span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>void <span style='mso-tab-count:
1'>      </span>*pd;<span style='mso-tab-count:2'>                  </span>// </span>область<span
style='mso-ansi-language:EN-US'> </span>данных<span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>ADT_mem(void *q,
int n0){<span style='mso-tab-count:1'>          </span>// </span>Конструктор<span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>n=n0;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>pd=new char[n];<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>char *q1,*q2;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>for (q1=(char*)q,q2=(char*)pd;
n0!=0; n0--)<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:2; mso-ansi-language:EN-US' lang="EN-US">                        </span>*q2++ = *q1++;</p>

<p class=a0><span style='mso-tab-count:1'>            </span>}</p>

<p class=a0>// Вируальный деструктор для полиморфного <span
style='mso-spacerun:yes'> </span>удаления по указателю на БК</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>virtual
~ADT_mem(){ delete []pd; }<o:p></o:p></span></p>

<p class=a0>// Интерфейсные методы</p>

<p class=a0>virtual int type()=0;<span style='mso-tab-count:3'>                                 </span>//
Возвращает ID класса</p>

<p class=a0>virtual char* name()=0;<span style='mso-tab-count:3'>                            </span>//
Возвращает имя класса</p>

<p class=a0>virtual int get(char[])=0;<span style='mso-tab-count:2'>               </span><span
style='mso-tab-count:1'>            </span>// Ввод из внешнего представления</p>

<p class=a0>virtual char *put()=0;<span style='mso-tab-count:3'>                               </span>//
Вывод во внешнее представление</p>

<p class=a0>virtual int save(fstream &amp;F){<span style='mso-tab-count:1'>                     </span>// Сохранение в двоичный поток</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>F</span>.<span lang=EN-US style='mso-ansi-language:
EN-US'>write</span>((<span lang=EN-US style='mso-ansi-language:EN-US'>char</span>*)&amp;<span
lang=EN-US style='mso-ansi-language:EN-US'>n</span>,<span lang=EN-US
style='mso-ansi-language:EN-US'>sizeof</span>(<span lang=EN-US
style='mso-ansi-language:EN-US'>int</span>));<span style='mso-tab-count:1'>       </span>//
в формате записи переменной длины</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>F.write((char*)pd,n);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>return F.good();}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>virtual</span><span
lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:EN-US'>int</span><span
lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:EN-US'>load</span>(<span
lang=EN-US style='mso-ansi-language:EN-US'>fstream</span> &amp;<span
lang=EN-US style='mso-ansi-language:EN-US'>F</span>){<span style='mso-tab-count:
1'>         </span><span style='mso-tab-count:1'>            </span>// Загрузка
из в двоичного потока</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>delete</span> []<span lang=EN-US
style='mso-ansi-language:EN-US'>pd</span>;<span style='mso-tab-count:3'>                                </span>//
в формате записи переменной длины</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>pd</span>=<span lang=EN-US style='mso-ansi-language:
EN-US'>NULL</span>;<span style='mso-tab-count:3'>                                  </span>//
с разрушением старого содержимого</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>F.read((char*)&amp;n,sizeof(int));<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>if (!F.good()) return 0;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>pd=new char[n];<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>F.read((char*)pd,n);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>return F.good();}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>virtual ADT_mem
*clone()=NULL;<span style='mso-tab-count:1'> </span>// </span>Создание<span
style='mso-ansi-language:EN-US'> </span>копии<span lang=EN-US style='mso-ansi-language:
EN-US'> (</span>клона<span lang=EN-US style='mso-ansi-language:EN-US'>) </span>объекта<span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>virtual int
cmp(ADT_mem*)=NULL;<span style='mso-tab-count:1'>           </span>// </span>Сравнение<span
style='mso-ansi-language:EN-US'> </span>объектов<span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>virtual int
add(ADT_mem*)=NULL;<span style='mso-tab-count:1'>            </span>// </span>Сложение<span
style='mso-ansi-language:EN-US'> </span>объектов<span lang=EN-US
style='mso-ansi-language:EN-US'> 1=1+2<o:p></o:p></span></p>

<p class=a0>virtual int fsize()<span style='mso-tab-count:4'>                                      </span>//
Возвращает размер объекта в файле</p>

<p class=a0><span style='mso-tab-count:1'>            </span>{ return
n+sizeof(void*); }<span style='mso-tab-count:1'> </span>// Размер записи в
двоичном файле</p>

<p class=a0>};</p>

<p class=a>В этом классе определены методы сохранения и загрузки в двоичный
файл в виде записи переменной длины, а также конструктор и деструктор для
области памяти (динамического массива байтов) известного размера. Производные
классы конкретных типов данных используют область данных в базовом классе <b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>pd</span>, </b>преобразуя этот указатель от <b style='mso-bidi-font-weight:
normal'><a name="m5"><span lang=EN-US style='mso-ansi-language:EN-US'>void</span>* </b>к
тому типу, который хранится в данном классе. Для целого числа это будет <b
style='mso-bidi-font-weight:normal'>int*</b>, через преобразованный указатель
можно интерпретировать содержимое области данных в соответствии с целым типом -
<b style='mso-bidi-font-weight:normal'><a name="m6">*(</b><b style='mso-bidi-font-weight:
normal'><a name="m7"><span lang=EN-US style='mso-ansi-language:EN-US'>int</span>*)</b><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>pd</span>. </b>Размерность объекта передается константой, клонирование
объекта представляет собой создание динамического объекта производного класса,
в конструктор которого передаются параметры текущего объекта.</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------------------------------------------------------------116</p>

<p class=a0>// Класс целого числа, построенный на классе непрерывной памяти</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>class Int : public
ADT_mem{<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>public:<span
style='mso-tab-count:1'>   </span>Int(int a): ADT_mem(&amp;a,sizeof(int)){}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>~Int(){}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>// </span>Интерфейсные<span
style='mso-ansi-language:EN-US'> </span>методы<span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>int type(){return 1;}<span
style='mso-tab-count:3'>                                 </span>// </span>Возвращает<span
lang=EN-US style='mso-ansi-language:EN-US'> ID </span>класса<span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>char* name(){ return
&quot;Int&quot;;}<span style='mso-tab-count:2'>                      </span>// </span>Возвращает<span
style='mso-ansi-language:EN-US'> </span>имя<span style='mso-ansi-language:EN-US'>
</span>класса<span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:1; mso-ansi-language:EN-US' lang="EN-US">            </span>int get(char c[]){<span
style='mso-tab-count:4'>                                     </span>// Ввод из
внешнего представления</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>istrstream S(c);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>S &gt;&gt; *(int*)pd;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>return 1; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>char *put(){<span style='mso-tab-count:
4'>                                            </span>// </span>Вывод<span
style='mso-ansi-language:EN-US'> </span>во<span style='mso-ansi-language:EN-US'>
</span>внешнее<span style='mso-ansi-language:EN-US'> </span>представление<span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>char *c=new char[10];<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>ostrstream S(c,10);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>S &lt;&lt; *(int*)pd
&lt;&lt; '\0';<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>return c; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>ADT_mem *clone()</span></p>

<p class=a0 style='margin-left:36.0pt;text-indent:36.0pt'>{ <span lang=EN-US
style='mso-ansi-language:EN-US'>return</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>new</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>Int</span>(*(<span lang=EN-US
style='mso-ansi-language:EN-US'>int</span>*)<span lang=EN-US style='mso-ansi-language:
EN-US'>pd</span>); }<span style='mso-tab-count:1'>          </span>// Создание копии
(клона) объекта</p>

<p class=a0><span style='mso-tab-count:1'>            </span>int cmp(ADT_mem
*q){<span style='mso-tab-count:3'>                           </span>//
Сравнение объектов<span style='mso-tab-count:1'>  </span></p>

<p class=a0><span style='mso-tab-count:2'>                        </span>if
(type()!=q-&gt;type())<span style='mso-tab-count:2'>                    </span>//
Разные классы - сравнение ID</p>

<p class=a0><span style='mso-tab-count:3'>                                    </span><span
lang=EN-US style='mso-ansi-language:EN-US'>return type()-q-&gt;type();<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>return *(int*)pd -
*(int*)(q-&gt;pd);<span style='mso-spacerun:yes'>  </span>}<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:1; mso-ansi-language:EN-US' lang="EN-US">            </span>int add(ADT_mem *q){<span
style='mso-tab-count:3'>                            </span>// Сложение объектов</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>if (type()!=q-&gt;type())<span
style='mso-tab-count:2'>                    </span>// </span>Разные<span
style='mso-ansi-language:EN-US'> </span>классы<span lang=EN-US
style='mso-ansi-language:EN-US'> - 0<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:3'>                                    </span>return 0;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>*(int*)pd+=*(int*)(q-&gt;pd);
<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:2; mso-ansi-language:EN-US' lang="EN-US">                        </span>return 1; }</p>

<p class=a0 style='text-indent:36.0pt'>};</p>

<p class=a>Аналогичным образом можно реализовать класс строк переменной длины,
но в этом случае размерность области данных в базовом классе устанавливается в
равной размеру строки (<b style='mso-bidi-font-weight:normal'><a name="m8"><span lang=EN-US
style='mso-ansi-language:EN-US'>strlen</span>(</b><b style='mso-bidi-font-weight:
normal'><a name="m9"><span lang=EN-US style='mso-ansi-language:EN-US'>c</span>)+1</b>) и
используются функции копирования строк.</p>

<p class=a>При реализации объектов более сложной природы можно попытаться
максимально использовать средства базового класса. Например, матрицу переменной
размерности можно представить в виде последовательно уложенных в память строк –
линейный массив, разместив их в базовом классе. Тогда до любого элемента
матрицы можно добраться посредством выражения <span
style='mso-spacerun:yes'> </span><b style='mso-bidi-font-weight:normal'><a name="m10">((<span lang=EN-US style='mso-ansi-language:
EN-US'>double</span>*)<span
lang=EN-US style='mso-ansi-language:EN-US'>pd</span>)[</b><b style='mso-bidi-font-weight:
normal'><a name="m11"><span lang=EN-US style='mso-ansi-language:EN-US'>i</span>*</b><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>mm</span>+<span lang=EN-US
style='mso-ansi-language:EN-US'>j</span>]</b>, где <b style='mso-bidi-font-weight:
normal'><a name="m12"><span lang=EN-US style='mso-ansi-language:EN-US'>mm</span> – </b>число
столбцов матрицы. Указатель области данных <b style='mso-bidi-font-weight:normal'><a name="m13">pd
</b>приводится к указателю на массив вещественных чисел. Сами же размерности
матрицы <b style='mso-bidi-font-weight:normal'><a name="m14"><span lang=EN-US
style='mso-ansi-language:EN-US'>nn</span><span lang=EN-US> </span></b>и <b
style='mso-bidi-font-weight:normal'>mm </b>можно вынести в производный класс.
Тогда необходимо переопределить методы загрузки и сохранения в двоичный поток,
сохраняя в производном классе размерности и явно вызывая метод базового класса
для сохранения коэффициентов матрицы.</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------------------------------------------------------------116</p>

<p class=a0>// Класс линеаризованной матрицы, построенный на классе непрерывной
памяти</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>class Matrix :
public ADT_mem{<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:1; mso-ansi-language:EN-US' lang="EN-US">            </span>int nn,mm;<span
style='mso-tab-count:4'>                                             </span>//
Размерности в ПК, данные в БК</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>public:</span></p>

<p class=a0><span style='mso-tab-count:1'>            </span>// Конструктор
передает область данных в БК, вычисляя ее размерность в байтах</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>Matrix</span>(<span lang=EN-US
style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>n</span>0, <span lang=EN-US
style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>m</span>0, <span lang=EN-US
style='mso-ansi-language:EN-US'>double</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>d</span>[]): <span lang=EN-US
style='mso-ansi-language:EN-US'>ADT</span>_<span lang=EN-US style='mso-ansi-language:
EN-US'>mem</span>(<span lang=EN-US style='mso-ansi-language:EN-US'>d</span>,<span
lang=EN-US style='mso-ansi-language:EN-US'>n</span>0*<span lang=EN-US
style='mso-ansi-language:EN-US'>m</span>0*<span lang=EN-US style='mso-ansi-language:
EN-US'>sizeof</span>(<span lang=EN-US style='mso-ansi-language:EN-US'>double</span>)){</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>nn</span>=<span lang=EN-US
style='mso-ansi-language:EN-US'>n</span>0; <span lang=EN-US style='mso-ansi-language:
EN-US'>mm</span>=<span lang=EN-US style='mso-ansi-language:EN-US'>m</span>0; }</p>

<p class=a0><span style='mso-tab-count:1'>            </span>~<span lang=EN-US
style='mso-ansi-language:EN-US'>Matrix</span>(){}</p>

<p class=a0>// Интерфейсные методы</p>

<p class=a0><span style='mso-tab-count:1'>            </span>…</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>ADT_mem *clone(){ return new
Matrix(nn,mm,(double*)pd);}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>int load(fstream &amp;F){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>F</span>.<span
lang=EN-US style='mso-ansi-language:EN-US'>read</span>((<span lang=EN-US
style='mso-ansi-language:EN-US'>char</span>*)&amp;<span lang=EN-US
style='mso-ansi-language:EN-US'>nn</span>,<span lang=EN-US style='mso-ansi-language:
EN-US'>sizeof</span>(<span lang=EN-US style='mso-ansi-language:EN-US'>int</span>));<span
style='mso-tab-count:1'>      </span>// Читать размерности</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>F.read((char*)&amp;mm,sizeof(int));<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>return</span><span
lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:EN-US'>ADT</span>_<span
lang=EN-US style='mso-ansi-language:EN-US'>mem</span>::<span lang=EN-US
style='mso-ansi-language:EN-US'>load</span>(<span lang=EN-US style='mso-ansi-language:
EN-US'>F</span>);<span style='mso-tab-count:1'>           </span>// Читать
область данных средствами БК</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>int save(fstream &amp;F){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>F.write((char*)&amp;nn,sizeof(int));<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>F.write((char*)&amp;mm,sizeof(int));<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>return ADT_mem::save(F);<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:2; mso-ansi-language:EN-US' lang="EN-US">                        </span>}</p>

<p class=a0><span style='mso-tab-count:1'>            </span>};</p>

<h3><span style='mso-spacerun:yes'> </span>«Клонирование» объектов и
«виртуальный конструктор»</h3>

<p class=a>Базовые классы <b style='mso-bidi-font-weight:normal'><a name="m15"><span
lang=EN-US style='mso-ansi-language:EN-US'>ADT</span></b> и <b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>ADT</span>_<span lang=EN-US
style='mso-ansi-language:EN-US'>mem</span></b><span lang=EN-US> </span>дают
возможность программе работать с объектами, хранящими данные различных типов,
единообразно с точки зрения представленного в классе набора методов. Это
единообразие распространяется на процедуру уничтожения динамических объектов,
поскольку виртуальный деструктор позволяет корректно выполнить операцию <b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>delete</span><span lang=EN-US> </span></b>через указатель на базовый
класс. Однако создание объектов и их конструирование не укладывается в такую
схему: операцией <b style='mso-bidi-font-weight:normal'><a name="m16">new </b>нельзя создать
объект, класс которого меняется в процессе выполнения программы. Иначе говоря,
динамические конструирование объектов не предусмотрено в Си++. </p>

<p class=a>В нашей задаче элементы используются элементы динамического
конструирования: строки таблицы создаются по некоторому описанию, которое
устанавливает соответствие между столбцом таблицы и типом данных в нем. Решить
эту проблему можно путем «клонирования» объектов, т.е. введения полиморфного
метода, который при его вызове через указатель на базовый класс создает точную
динамическую копию объекта в производном классе. Таким образом можно создать
объект заранее неизвестного типа при наличии объекта-прародителя. Как мы уже
видели, для этой цели вводится метод <b style='mso-bidi-font-weight:normal'><a name="m17"><span
lang=EN-US style='mso-ansi-language:EN-US'>clone</span>.<o:p></o:p></b></p>

<p class=a>Идея «клонирования» может быть распространена и на строку таблицы.
Она представляет собой линейную структуру данных, хранящую указатели на базовый
класс <b style='mso-bidi-font-weight:normal'><a name="m18">ADT (</b><b style='mso-bidi-font-weight:
normal'><a name="m19"><span lang=EN-US style='mso-ansi-language:EN-US'>ADT</span>_</b><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>mem</span>), </b>за которыми «скрываются» объекты конкретных типов.
Очевидно, что можно «клонировать» и строку, если создать динамическую копию
структуры данных, в которую поместить клоны (копии) хранимых объектов. Тогда в
таблице достаточно иметь одну строку – прототип, с которой при добавлении или
загрузке строк просто снимаются копии.</p>

<p class=a>Еще одна проблема связана с сохранением таблицы в файле и ее
загрузкой. Как известно, в файле нельзя хранить образы объектов, а можно только
хранить их данные. Более того, при загрузке надо как-то идентифицировать их
классы. Поэтому при сохранении описания таблицы в файле для каждого столбца
записывается идентификатор типа данных. Он может быть получен от объекта
полиморфным методом <b style='mso-bidi-font-weight:normal'><a name="m20"><span lang=EN-US
style='mso-ansi-language:EN-US'>type</span>().<o:p></o:p></b></p>

<p class=a>Но тогда при загрузке описания необходима обратная процедура
восстановления для каждого столбца объекта-прародителя, идентификатор которого
получен из файла. По существу ее можно назвать <b style='mso-bidi-font-weight:
normal'><a name="m21">виртуальным конструктором. </b>Для этого необходимо иметь набор
статических объектов всех известных типов (например, массив указателей). При
его просмотре ищется объект идентификатор типа у которого (метод <b
style='mso-bidi-font-weight:normal'>type</b>) совпадает с предъявленным на
вход. С него создается динамическая копия (клон).</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------------------------------------------------------------116</p>

<p class=a0>// Набор объектов - прототипов - аналог виртуального конструктора</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>static Int I0(0);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>static String
S0(&quot;&quot;);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>static double
d[1];<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>static Float
F0(0);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>static Matrix M0(1,1,d);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>static ADT_mem
*proto[]={&amp;I0,&amp;F0,&amp;S0,&amp;M0,NULL};<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>ADT_mem
*Mtable::create_ADT(int k){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>for (int i=0;proto[i]!=NULL;i++)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>if
(proto[i]-&gt;type()==k)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:3'>                                    </span>return
proto[i]-&gt;clone();<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>return</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>NULL</span>; }</p>

<h3>Шаблон динамической структуры данных</h3>

<p class=a>Для унификации всех линейных структур данных создается шаблон
динамического массива указателей (ДМУ) с операциями управления размерностью,
добавления, извлечения (при необходимости вставки и удаления). Использование
указателей, а не значений обусловлено тем, что при хранении последних
необходимо четко определять действия, связанные с их копированием (конструктор
копирования, присваивание), а также неэффективностью работы с копиями, если
речь идет об объектах большой размерности.</p>

<p class=a>Принимается еще одно соглашение. Массив указателей должен содержать
указатели только на динамические объекты, являющиеся «собственностью» шаблона.
Это значит, что при разрушении структуры данных в деструкторе следует
уничтожать и указуемые объекты. С одной стороны, это исключает возможность
разделения объекта несколькими структурами данных, но с другой стороны не
позволит нам «терять» объекты при разрушении структур данных (при любом уровне
сложности).</p>

<p class=a><o:p>&nbsp;</o:p></p>

<h3>Таблица в памяти</h3>

<p class=a>Для работы с любыми таблицами (в памяти и в файле) нам потребуется
еще один класс – класс строки таблицы (<b style='mso-bidi-font-weight:normal'><a name="m22">record</b>).
Он не содержит в себе ничего оригинального, включает в себя шаблонный класс –
динамический массив указателей на хранимые объекты (указатели типа <b
style='mso-bidi-font-weight:normal'>ADT_mem*</b>), а также методы клонирования,
загрузки и сохранения в последовательный двоичный поток.</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------------------------------------------------------------116</p>

<p class=a0>// Класс строки таблицы</p>

<p class=a0>class record{</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>public:<span
style='mso-tab-count:1'>   </span>DMU&lt;ADT_mem&gt; R;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>ADT_mem *operator[](int m){ return
R[m]; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>record *clone(){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>record *q=new record;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>for (int
i=0;i&lt;R.size();i++) q-&gt;R.add(R[i]-&gt;clone());<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>return q;</span><span
lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:EN-US'>}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>int save(fstream &amp;F){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>for (int
i=0;i&lt;R.size();i++) <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:3'>                                    </span>if
(!R[i]-&gt;save(F)) return 0;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>return 1;}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>int load(fstream &amp;F){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>for (int
i=0;i&lt;R.size();i++) <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:3'>                                    </span>if
(!R[i]-&gt;load(F)) return 0;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>return 1;}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>void add(ADT_mem *q){ R.add(q); }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>int fsize(){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>for (int
s=0,i=0;i&lt;R.size();i++) <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:3'>                                    </span>s+=R[i]-&gt;fsize();<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>return s;}};<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=a>Разработанные классы позволяют достаточно просто описать данные
класса – таблицы. Это – ее размерности, строка-заголовок (с которой
производится клонирование при включении новых строк в таблицу), имена столбцов,
содержащиеся в динамическом массиву указателей на объекты класса <b
style='mso-bidi-font-weight:normal'>String. </b>Что же касается самих данных,
то для них достаточно создать шаблонный класс динамического массива указателей
на объекты <b style='mso-bidi-font-weight:normal'><a name="m23">record.<o:p></o:p></b></p>

<p class=a0><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:
"Times New Roman CYR";mso-bidi-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=a0>//------------------------------------------------------------------------------------------------------------116</p>

<p class=a0>// Класс таблицы в памяти</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>class</span><span
lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:EN-US'>Mtable</span>{</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>int nc,nr;<span style='mso-tab-count:2'>                       </span><span
style='mso-tab-count:1'>            </span>// </span>Размерности<span
style='mso-ansi-language:EN-US'> </span>таблицы<span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>record</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>HEAD</span>;<span style='mso-tab-count:
3'>                            </span>// Строка заголовка – record объектов-прототипов</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>DMU&lt;String&gt; NAMES;<span style='mso-tab-count:
2'>               </span>// Имена столбцов<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>DMU&lt;record&gt; TBL;<span
style='mso-tab-count:2'>                    </span>// Строки таблицы – ДМУ </span>на<span
lang=EN-US style='mso-ansi-language:EN-US'> record<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:1; mso-ansi-language:EN-US' lang="EN-US">            </span>… };</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=a>Операции манипулирования с данными в таблице записываются компактно,
поскольку основные действия реализованы в нижележащих классах и
последовательность действий отражает сущность операции на абстрактном уровне.</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>//------------------------------------------------------------------------------------------------------------116<o:p></o:p></span></p>

<p class=a0>//<span style='mso-spacerun:yes'>    </span>Добавление строки в
таблицу</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void</span><span
lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:EN-US'>Mtable</span>::<span
lang=EN-US style='mso-ansi-language:EN-US'>add</span>(){</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>record</span> *<span lang=EN-US
style='mso-ansi-language:EN-US'>q</span>=<span lang=EN-US style='mso-ansi-language:
EN-US'>HEAD</span>.<span lang=EN-US style='mso-ansi-language:EN-US'>clone</span>();<span
style='mso-tab-count:2'>                        </span>// Создать клон с
заголовка</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>for (int i=0;i&lt;nc;i++){<span
style='mso-tab-count:3'>                               </span>// </span>Для
всех столбцов</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>char c[80],*s;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>s</span>=<span
lang=EN-US style='mso-ansi-language:EN-US'>NAMES</span>[<span lang=EN-US
style='mso-ansi-language:EN-US'>i</span>]-&gt;<span lang=EN-US
style='mso-ansi-language:EN-US'>put</span>();<span style='mso-tab-count:2'>                   </span>//
Вывод подсказки – имя и тип столбца</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>printf(&quot;%s(%s):&quot;,s,HEAD[i]-&gt;name());<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>delete []s;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>gets</span>(<span
lang=EN-US style='mso-ansi-language:EN-US'>c</span>);<span style='mso-tab-count:
4'>                                     </span>// Ввод данных по внешней форме</p>

<p class=a0><span style='mso-tab-count:2'>                        </span>(*<span
lang=EN-US style='mso-ansi-language:EN-US'>q</span>)[<span lang=EN-US
style='mso-ansi-language:EN-US'>i</span>]-&gt;<span lang=EN-US
style='mso-ansi-language:EN-US'>get</span>(<span lang=EN-US style='mso-ansi-language:
EN-US'>c</span>);<span style='mso-tab-count:3'>                            </span>//
Полиморфный метод загрузки содержимого</p>

<p class=a0><span style='mso-tab-count:2'>                        </span>}<span
style='mso-tab-count:4'>                                               </span>//
объекта из внешнего представления</p>

<p class=a0><span style='mso-tab-count:1'>            </span>TBL.add(q);<span
style='mso-tab-count:4'>                                           </span>//
Добавить объект-строку в таблицу</p>

<p class=a0><span style='mso-tab-count:1'>            </span>nr++;<span
lang=EN-US style='mso-ansi-language:EN-US'>}</span><span style='mso-tab-count:
5'>                                                   </span><span lang=EN-US
style='mso-ansi-language:EN-US'>// Увеличить счетчик записей</span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=a>Сортировка таблицы производится по любому столбцу. Для этого
используется «быстрая» сортировка (<b style='mso-bidi-font-weight:normal'><a name="m24">7.2</b>),
синтаксически адаптированная под используемые структуры данных.</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>//------------------------------------------------------------------------------------------------------------116<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>//-- </span>Быстрая<span
style='mso-ansi-language:EN-US'> </span>сортировка<span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void
Mtable::sort(int k,int a,int b){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>if (a&gt;=b) return;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>for(int i=a,j=b,mode=1;i&lt;j;mode ?
j--: i++)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>if
((*TBL[i])[k]-&gt;cmp((*TBL[j])[k])&gt;0){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:3'>                                    </span>TBL.swap(i,j);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:3'>                                    </span>mode=!mode;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:3'>                                    </span>}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>sort(k,a,i-1);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>sort(k,i+1,b);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void
Mtable::sort(int k){ sort(k,0,nr-1); }</span></p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a>Метод сохранения таблицы в последовательном двоичном файле
отрабатывает «саморазворачивающийся» формат:</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>размерности
таблицы;</span></p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>описатели столбцов. Для каждого сохраняется
идентификатор типа данных столбца (метод <b style='mso-bidi-font-weight:normal'><a name="m25">type</b>),
получаемый из строки-заголовка <b style='mso-bidi-font-weight:normal'><a name="m26"><span
lang=EN-US style='mso-ansi-language:EN-US'>HEAD</span><span lang=EN-US> </span></b>и
строка имени в формате объекта <b style='mso-bidi-font-weight:normal'><a name="m27">String;</b></p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>данные таблицы сохраняются строка за строкой.
Сохранение строки (объекта <b style='mso-bidi-font-weight:normal'><a name="m28"><span
lang=EN-US style='mso-ansi-language:EN-US'>record</span></b>) в свою очередь
приводит к последовательному сохранению объектов, производимому полиморфным
методом <b style='mso-bidi-font-weight:normal'><a name="m29"><span lang=EN-US
style='mso-ansi-language:EN-US'>save</span><span lang=EN-US> </span></b>в
соответствующих производный классах хранимых данных<b style='mso-bidi-font-weight:
normal'><a name="m30">.</b></p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>//------------------------------------------------------------------------------------------------------------116<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>// Сохранение в
двоичном файле</span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>int
Mtable::save(char nm[]){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>fstream F;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>F.open(nm,ios::out | ios::binary |
ios::trunc);<span style='mso-tab-count:1'>         </span>// Двоичный файл на
запись<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>F</span>.<span lang=EN-US
style='mso-ansi-language:EN-US'>write</span>((<span lang=EN-US
style='mso-ansi-language:EN-US'>char</span>*)&amp;<span lang=EN-US
style='mso-ansi-language:EN-US'>nc</span>,<span lang=EN-US style='mso-ansi-language:
EN-US'>sizeof</span>(<span lang=EN-US style='mso-ansi-language:EN-US'>int</span>));<span
style='mso-tab-count:3'>                             </span>// Сохранить
размерности</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>F.write((char*)&amp;nr,sizeof(int));<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>for</span> (<span lang=EN-US
style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>i</span>=0;<span lang=EN-US
style='mso-ansi-language:EN-US'>i</span>&lt;<span lang=EN-US style='mso-ansi-language:
EN-US'>nc</span>;<span lang=EN-US style='mso-ansi-language:EN-US'>i</span>++){<span
style='mso-tab-count:4'>                                           </span>//
Для каждого столбца - </p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>t</span>=<span lang=EN-US
style='mso-ansi-language:EN-US'>HEAD</span>[<span lang=EN-US style='mso-ansi-language:
EN-US'>i</span>]-&gt;<span lang=EN-US style='mso-ansi-language:EN-US'>type</span>();<span
style='mso-tab-count:3'>                             </span>// внутрениий
идентификатор типа</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>F.write((char*)&amp;t,sizeof(int));<span
style='mso-tab-count:2'>                    </span>// и строка имени<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>NAMES[i]-&gt;save(F);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>for (i=0;i&lt;nr;i++)
TBL[i]-&gt;save(F);<span style='mso-tab-count:2'>             </span>// Далее –
строки </span>таблицы<span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>F</span>.<span lang=EN-US
style='mso-ansi-language:EN-US'>close</span>();</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>return</span> 1; }</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a>При загрузке таблицы из файла выполняется та же последовательность
действий, но при чтении создаются динамические объекты, которые загружаются
содержимым двоичного файла, затем указатели на них помещается в соответствующие
структуры данных. При чтении описателей столбцов для каждого идентификатора
типа объекта выполняется процедура «виртуального конструирования», после чего
полученный динамический объект нужного класса помещается в строку-заголовок <b
style='mso-bidi-font-weight:normal'>HEAD</b>. При загрузке данных производится
«клонирование» строки-заголовка, чтение в нее данных и сохранение указателя в
ДМУ таблицы.</p>

<p class=a0><span lang=EN-US style='font-size:12.0pt;mso-bidi-font-size:10.0pt;
font-family:"Times New Roman CYR";mso-bidi-font-family:"Times New Roman";
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=a0>//------------------------------------------------------------------------------------------------------------116</p>

<p class=a0>// Загрузка из двоичного файла</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>int
Mtable::load(char nm[]){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>fstream F;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>F.open(nm,ios::in | ios::binary);<span
style='mso-tab-count:2'>               </span>// Двоичный для чтения<span
style='mso-tab-count:2'>             </span><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>F</span>.<span lang=EN-US
style='mso-ansi-language:EN-US'>read</span>((<span lang=EN-US style='mso-ansi-language:
EN-US'>char</span>*)&amp;<span lang=EN-US style='mso-ansi-language:EN-US'>nc</span>,<span
lang=EN-US style='mso-ansi-language:EN-US'>sizeof</span>(<span lang=EN-US
style='mso-ansi-language:EN-US'>int</span>));<span style='mso-tab-count:2'>                  </span>//
Читать размерности</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>F.read((char*)&amp;nr,sizeof(int));<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>for (int i=0;i&lt;nc;i++){<span
style='mso-tab-count:3'>                               </span>// Чтение
заголовка<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>int t;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>F</span>.<span
lang=EN-US style='mso-ansi-language:EN-US'>read</span>((<span lang=EN-US
style='mso-ansi-language:EN-US'>char</span>*)&amp;<span lang=EN-US
style='mso-ansi-language:EN-US'>t</span>,<span lang=EN-US style='mso-ansi-language:
EN-US'>sizeof</span>(<span lang=EN-US style='mso-ansi-language:EN-US'>int</span>));<span
style='mso-tab-count:1'>        </span>// Идентификатор класса для данных
столбца</p>

<p class=a0><span style='mso-tab-count:1'>                        </span><span lang=EN-US style='mso-ansi-language:
EN-US'>HEAD</span>.<span lang=EN-US style='mso-ansi-language:EN-US'>add</span>(<span
lang=EN-US style='mso-ansi-language:EN-US'>create</span>_<span lang=EN-US
style='mso-ansi-language:EN-US'>ADT</span>(<span lang=EN-US style='mso-ansi-language:
EN-US'>t</span>));<span style='mso-tab-count:1'>          </span>// Создать
объект-прототип по идентификатору</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>String</span> *<span lang=EN-US
style='mso-ansi-language:EN-US'>s</span>=<span lang=EN-US style='mso-ansi-language:
EN-US'>new</span><span lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:
EN-US'>String</span>(&quot;&quot;);<span style='mso-tab-count:2'>             </span>//
и добавить в строку-заголовок</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>s</span>-&gt;<span lang=EN-US
style='mso-ansi-language:EN-US'>load</span>(<span lang=EN-US style='mso-ansi-language:
EN-US'>F</span>);<span style='mso-tab-count:3'>                                </span>//
Читать имя столбца в объект <span lang=EN-US style='mso-ansi-language:EN-US'>String</span></p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>NAMES</span>.<span lang=EN-US
style='mso-ansi-language:EN-US'>add</span>(<span lang=EN-US style='mso-ansi-language:
EN-US'>s</span>);<span style='mso-tab-count:3'>                         </span>//
и добавить в ДМУ имен столбцов</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>for</span> (<span lang=EN-US
style='mso-ansi-language:EN-US'>i</span>=0;<span lang=EN-US style='mso-ansi-language:
EN-US'>i</span>&lt;<span lang=EN-US style='mso-ansi-language:EN-US'>nr</span>;<span
lang=EN-US style='mso-ansi-language:EN-US'>i</span>++){<span style='mso-tab-count:
3'>                                    </span>// Чтение данных таблицы</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>record</span> *<span lang=EN-US
style='mso-ansi-language:EN-US'>q</span>=<span lang=EN-US style='mso-ansi-language:
EN-US'>HEAD</span>.<span lang=EN-US style='mso-ansi-language:EN-US'>clone</span>();<span
style='mso-tab-count:1'>            </span>// Создать клон с заголовочной
записи</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>q</span>-&gt;<span lang=EN-US
style='mso-ansi-language:EN-US'>load</span>(<span lang=EN-US style='mso-ansi-language:
EN-US'>F</span>);<span style='mso-tab-count:3'>                                </span>//
Загрузить последовательно ее объекты</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>TBL</span>.<span lang=EN-US
style='mso-ansi-language:EN-US'>add</span>(<span lang=EN-US style='mso-ansi-language:
EN-US'>q</span>);<span style='mso-tab-count:3'>                               </span>//
Добавить в таблицу – ДМУ на строки</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>F.close();<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>return</span> 1;}</p>

<h3>Таблица в двоичном файле</h3>

<p class=a>Переход от размещения таблицы в памяти к размещению ее в двоичном
файле не сопровождается принципиальными изменениями разработанных классов. Заголовок
таблицы и ее записи таблицы имеют в файле практически тот же формат, но
загружаются по требованию и адресуются через массив файловых указателей (<b
style='mso-bidi-font-weight:normal'>9.6</b>):</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>в начале файла размещается заголовок
фиксированного формата: число столбцов - <b style='mso-bidi-font-weight:normal'><a name="m31"><span
lang=EN-US style='mso-ansi-language:EN-US'>nc</span>, </b>число строк - <b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>nr</span>, </b>размерность массива файловых указателей - <b
style='mso-bidi-font-weight:normal'>sz, </b>адрес массива файловых указателей
на строки таблицы – <b style='mso-bidi-font-weight:normal'><a name="m32"><span lang=EN-US
style='mso-ansi-language:EN-US'>p</span>0. </b>Ввиду изменяющейся размерности
массив файловых указателей постоянно меняет свое размещение в файле, поэтому в
начале файла записывается его текущий адрес;</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>далее последовательно размещаются описатели
столбцов: каждый из них содержит идентификатор типа данных столбца (целое) и
строку имени. Формат строки имени соответствует формату записи объекта <b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>Srting</span> (</b>целый<b style='mso-bidi-font-weight:normal'><a name="m33"> </b>счетчик
длины строки (с учетом символа ограничителя) и сама строка<b style='mso-bidi-font-weight:
normal'><a name="m34">);</b></p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>объекты, содержащиеся в строке таблицы,
сохраняются последовательно друг за другом, каждый в своем формате (формат записи
объекта <b style='mso-bidi-font-weight:normal'><a name="m35">record</b>);</p>

<p class=a>Класс таблицы в двоичном файле <b style='mso-bidi-font-weight:normal'><a name="m36"><span
lang=EN-US style='mso-ansi-language:EN-US'>Ftable</span><span lang=EN-US> </span></b>является
производным от <b style='mso-bidi-font-weight:normal'><a name="m37">fstream, </b>что
позволяет по умолчанию использовать все методы файла базового класса. Управляющая
часть файла – переменные <b style='mso-bidi-font-weight:normal'><a name="m38">nc,nr,sz,p0 </b>являются
данными объекта <b style='mso-bidi-font-weight:normal'><a name="m39">Ftable, </b>аналогично,
массив файловых указателей загружается в объект в виде динамического массива<b
style='mso-bidi-font-weight:normal'> pp, </b>содержащего переменные типа <b
style='mso-bidi-font-weight:normal'>long.<o:p></o:p></b></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=a0>//------------------------------------------------------------------------------------------------------------116</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>class
Ftable:fstream{<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>int nc,nr,sz;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>long p0;<span style='mso-tab-count:
4'>                                     </span>// </span>Адрес<span
style='mso-ansi-language:EN-US'> </span>ДМУ<span style='mso-ansi-language:EN-US'>
</span>в<span style='mso-ansi-language:EN-US'> </span>ДФ<span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:1; mso-ansi-language:EN-US' lang="EN-US">            </span>long *pp;<span
style='mso-tab-count:3'>                                   </span>// Массив файловых
указателей на записи</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>record</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>HEAD</span>;<span style='mso-tab-count:
3'>                            </span>// Строка заголовка – record объектов-прототипов</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>DMU&lt;String&gt; NAMES;<span style='mso-tab-count:
2'>               </span>// </span>Имена<span style='mso-ansi-language:EN-US'> </span>столбцов<span
style='mso-ansi-language:EN-US'> </span></p>

<p class=a0><span style='mso-tab-count:1'>            </span>…</p>

<p class=a>Первая группа методов класса обеспечивает загрузку управляющих
структур двоичного файла в объект <b style='mso-bidi-font-weight:normal'><a name="m40">Ftable</b>,
обновление их из объекта в двоичном файле (заголовка и массива файловых
указателей), а также различные варианты задания в двоичном файле пустой таблицы
(интерактивное, копия структуры открытой таблицы). При создании пустой таблицы
соблюдается такая последовательность размещения: заголовок, описатели столбцов,
пустой массив файловых указателей.</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>
//------------------------------------------------------------------------------------------------------------116<o:p></o:p></span></p>

<p class=a0>// Сохранение структуры текущей таблицы в отдельном файле</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void
Ftable::create_head(char nm[]){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>fstream F(nm,ios::out | ios::binary
| ios::trunc);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>long</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>p</span>0_<span lang=EN-US
style='mso-ansi-language:EN-US'>new</span>=<span lang=EN-US style='mso-ansi-language:
EN-US'>p</span>0;<span style='mso-tab-count:1'>                                    </span>//
Адрес размещения массива указателей</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>nr</span>0=0;<span style='mso-tab-count:
3'>                                  </span><span style='mso-tab-count:1'>            </span>//
в новом файле</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>F</span>.<span lang=EN-US style='mso-ansi-language:
EN-US'>write</span>((<span lang=EN-US style='mso-ansi-language:EN-US'>char</span>*)&amp;<span
lang=EN-US style='mso-ansi-language:EN-US'>nc</span>,<span lang=EN-US
style='mso-ansi-language:EN-US'>sizeof</span>(<span lang=EN-US
style='mso-ansi-language:EN-US'>int</span>));<span style='mso-tab-count:1'>                 </span>// Записать заголовок и описатели
столбцов</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>F</span>.<span lang=EN-US style='mso-ansi-language:
EN-US'>write</span>((<span lang=EN-US style='mso-ansi-language:EN-US'>char</span>*)&amp;<span
lang=EN-US style='mso-ansi-language:EN-US'>nr</span>0,<span lang=EN-US
style='mso-ansi-language:EN-US'>sizeof</span>(<span lang=EN-US
style='mso-ansi-language:EN-US'>int</span>));<span style='mso-tab-count:1'>                </span>// из текущего объекта в новый файл</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>F.write((char*)&amp;sz,sizeof(int));<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>F.write((char*)&amp;p0_new,sizeof(long));<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>for (int i=0;i&lt;nc;i++){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>int
t=HEAD[i]-&gt;type();<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>F.write((char*)&amp;t,sizeof(int));<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>NAMES[i]-&gt;save(F); }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>p</span>0_<span lang=EN-US
style='mso-ansi-language:EN-US'>new</span>=<span lang=EN-US style='mso-ansi-language:
EN-US'>F</span>.<span lang=EN-US style='mso-ansi-language:EN-US'>tellg</span>();<span
style='mso-tab-count:1'>                                   </span>// Получить адрес массива файловых
указателей</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>long</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>vv</span>=0;<span style='mso-tab-count:
3'>                                  </span><span style='mso-tab-count:1'>            </span>//
в новом файле</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>for</span> (<span lang=EN-US style='mso-ansi-language:
EN-US'>i</span>=0;<span lang=EN-US style='mso-ansi-language:EN-US'>i</span>&lt;<span
lang=EN-US style='mso-ansi-language:EN-US'>sz</span>;<span lang=EN-US
style='mso-ansi-language:EN-US'>i</span>++)<span style='mso-tab-count:1'>                                    </span>//
Записать пустой массив указателей</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>F.write((char*)&amp;vv,sizeof(long));<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>F</span>.<span lang=EN-US
style='mso-ansi-language:EN-US'>seekg</span>(3*<span lang=EN-US
style='mso-ansi-language:EN-US'>sizeof</span>(<span lang=EN-US
style='mso-ansi-language:EN-US'>int</span>)); <span style='mso-tab-count:1'>                           </span>//
Вернуться на место размещения p0</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>F</span>.<span lang=EN-US style='mso-ansi-language:
EN-US'>write</span>((<span lang=EN-US style='mso-ansi-language:EN-US'>char</span>*)&amp;<span
lang=EN-US style='mso-ansi-language:EN-US'>p</span>0_<span lang=EN-US
style='mso-ansi-language:EN-US'>new</span>,<span lang=EN-US style='mso-ansi-language:
EN-US'>sizeof</span>(<span lang=EN-US style='mso-ansi-language:EN-US'>long</span>));
<span style='mso-tab-count:1'>      </span>// Обновить начальный адрес (<span
lang=EN-US style='mso-ansi-language:EN-US'>p</span>0)</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>F</span>.<span lang=EN-US style='mso-ansi-language:
EN-US'>close</span>(); }</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a>Особенностью метода открытия двоичного файла является формирование
строки – заголовка <b style='mso-bidi-font-weight:normal'><a name="m41"><span lang=EN-US
style='mso-ansi-language:EN-US'>HEAD</span><span lang=EN-US> </span></b>аналогично
тому, как это делалось при чтении таблицы, размещаемой в памяти. В остальном же
она сводится к последовательности позиционирований и чтений данных.</p>

<p class=a>Проблема переменной размерности массива файловых указателей решается
просто. При переполнении динамического массива в памяти производится
перераспределение памяти функцией <b style='mso-bidi-font-weight:normal'><a name="m42"><span
lang=EN-US style='mso-ansi-language:EN-US'>realloc</span>, </b>после чего
производится позиционирование в конец файла и чтение текущего адреса методом <b
style='mso-bidi-font-weight:normal'>ftell </b>в переменную <b style='mso-bidi-font-weight:
normal'><a name="m43">p0</b> как адреса его нового размещения. После чего вызов метода <b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>up</span>date_sys </b>обеспечивает запись массива на новое место. Область,
занятая «старым» массивом, становится мусором.</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void</span><span
lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:EN-US'>Ftable</span>::<span
lang=EN-US style='mso-ansi-language:EN-US'>extend</span>(){</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>if</span> (<span lang=EN-US style='mso-ansi-language:
EN-US'>nr</span>!=<span lang=EN-US style='mso-ansi-language:EN-US'>sz</span>) <span
lang=EN-US style='mso-ansi-language:EN-US'>return</span>;<span
style='mso-tab-count:1'>                                    </span>// Нет переполнения - выйти</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>sz</span>*=2;<span style='mso-tab-count:1'>                                                   </span>//
Удвоить размерность</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>pp</span>=(<span lang=EN-US style='mso-ansi-language:
EN-US'>long</span>*)<span lang=EN-US style='mso-ansi-language:EN-US'>realloc</span>(<span
lang=EN-US style='mso-ansi-language:EN-US'>pp</span>,<span lang=EN-US
style='mso-ansi-language:EN-US'>sz</span>*<span lang=EN-US style='mso-ansi-language:
EN-US'>sizeof</span>(<span lang=EN-US style='mso-ansi-language:EN-US'>long</span>));<span
style='mso-tab-count:1'>       </span>// Перераспределить память</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>for</span> (<span lang=EN-US style='mso-ansi-language:
EN-US'>int</span><span lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:
EN-US'>i</span>=<span lang=EN-US style='mso-ansi-language:EN-US'>sz</span>/2;<span
lang=EN-US style='mso-ansi-language:EN-US'>i</span>&lt;<span lang=EN-US
style='mso-ansi-language:EN-US'>sz</span>;<span lang=EN-US style='mso-ansi-language:
EN-US'>i</span>++) <span lang=EN-US style='mso-ansi-language:EN-US'>pp</span>[<span
lang=EN-US style='mso-ansi-language:EN-US'>i</span>]=0;<span style='mso-tab-count:
1'>   </span><span style='mso-tab-count:1'>            </span>// Обнулить новую
вторую <span style='mso-spacerun:yes'> </span>половину</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>seekg</span>(0,<span lang=EN-US
style='mso-ansi-language:EN-US'>ios</span>::<span lang=EN-US style='mso-ansi-language:
EN-US'>end</span>);<span style='mso-tab-count:1'>                                  </span>//
(для порядка)</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>p</span>0=<span lang=EN-US style='mso-ansi-language:
EN-US'>tellg</span>();<span style='mso-tab-count:1'>                                              </span>// Спозиционироваться на конец файла</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>update</span>_<span lang=EN-US
style='mso-ansi-language:EN-US'>sys</span>(); }<span style='mso-tab-count:1'>                                      </span>// и получить новый адрес, обновить</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a>Операции над строками таблицы осуществляются с использованием
объектов класса <b style='mso-bidi-font-weight:normal'><a name="m44"><span lang=EN-US
style='mso-ansi-language:EN-US'>record</span><span lang=EN-US> </span></b>при
наличии в объекте загруженного массива файловых указателей, поэтому они пишутся
компактно и по существу выполняемого алгоритма.</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------------------------------------------------------------116</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>// Добавление
записи</span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void
Ftable::add(record *p){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>seekg</span>(0,<span lang=EN-US
style='mso-ansi-language:EN-US'>ios</span>::<span lang=EN-US style='mso-ansi-language:
EN-US'>end</span>);<span style='mso-tab-count:2'>                      </span>//
Позиционироваться в конец файла</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>pp</span>[<span lang=EN-US style='mso-ansi-language:
EN-US'>nr</span>++]=<span lang=EN-US style='mso-ansi-language:EN-US'>tellg</span>();<span
style='mso-tab-count:3'>                         </span>// Получить адрес
записи и сохранить в массиве <span lang=EN-US style='mso-ansi-language:EN-US'>pp</span></p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>p</span>-&gt;<span lang=EN-US style='mso-ansi-language:
EN-US'>save</span>(*<span lang=EN-US style='mso-ansi-language:EN-US'>this</span>);<span
style='mso-tab-count:3'>                           </span>// Записать record в
файл как последовательность </p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>extend</span>();<span style='mso-tab-count:
3'>                                   </span>// объектов</p>

<p class=a0><span style='mso-tab-count:1'>            </span>}<span
style='mso-tab-count:4'>                                               </span>//
Проверить на переполнение массива указателей</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>// Получение
записи по логическому номеру</span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>record
*Ftable::get(int m){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>if</span> (<span lang=EN-US
style='mso-ansi-language:EN-US'>m</span>&lt;0 || <span lang=EN-US
style='mso-ansi-language:EN-US'>m</span>&gt;=<span lang=EN-US style='mso-ansi-language:
EN-US'>nr</span>) <span lang=EN-US style='mso-ansi-language:EN-US'>return</span><span
lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:EN-US'>NULL</span>;<span
style='mso-tab-count:1'>     </span>// Проверка правильности логического номера</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>record</span> *<span lang=EN-US
style='mso-ansi-language:EN-US'>p</span>=<span lang=EN-US style='mso-ansi-language:
EN-US'>HEAD</span>.<span lang=EN-US style='mso-ansi-language:EN-US'>clone</span>();<span
style='mso-tab-count:1'>            </span>// Клонировать строку заголовка
таблицы</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>seekg</span>(<span lang=EN-US style='mso-ansi-language:
EN-US'>pp</span>[<span lang=EN-US style='mso-ansi-language:EN-US'>m</span>]);<span
style='mso-tab-count:3'>                            </span>// Позиционироваться
по адресу записи</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>p</span>-&gt;<span lang=EN-US style='mso-ansi-language:
EN-US'>load</span>(*<span lang=EN-US style='mso-ansi-language:EN-US'>this</span>);<span
style='mso-tab-count:3'>                            </span>// Загрузить
последовательность объектов</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>return</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>p</span>;<span style='mso-tab-count:
3'>                                    </span>// *<span lang=EN-US
style='mso-ansi-language:EN-US'>this</span> – ссылка на базовый класс - <span
lang=EN-US style='mso-ansi-language:EN-US'>fstream</span></p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>// </span>Обновление
записи</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void
Ftable::update(record *q, int k){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>if (k&lt;0 || k&gt;=nr) return;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>record</span> *<span lang=EN-US
style='mso-ansi-language:EN-US'>old</span>=<span lang=EN-US style='mso-ansi-language:
EN-US'>get</span>(<span lang=EN-US style='mso-ansi-language:EN-US'>k</span>);<span
style='mso-tab-count:2'>                     </span>// Прочитать старую запись
из файла</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>if</span> (<span lang=EN-US style='mso-ansi-language:
EN-US'>q</span>-&gt;<span lang=EN-US style='mso-ansi-language:EN-US'>fsize</span>()&lt;=<span
lang=EN-US style='mso-ansi-language:EN-US'>old</span>-&gt;<span lang=EN-US
style='mso-ansi-language:EN-US'>fsize</span>())<span style='mso-tab-count:1'>          </span>//
Если запись не увеличилась - </p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>seekg</span>(<span lang=EN-US
style='mso-ansi-language:EN-US'>pp</span>[<span lang=EN-US style='mso-ansi-language:
EN-US'>k</span>]);<span style='mso-tab-count:2'>                 </span>// позиционироваться
по старому адресу</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>else</span><span style='mso-tab-count:1'>      </span>{</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>seekg</span>(0,<span lang=EN-US
style='mso-ansi-language:EN-US'>ios</span>::<span lang=EN-US style='mso-ansi-language:
EN-US'>end</span>);<span style='mso-tab-count:1'>          </span>// Иначе<span
style='mso-spacerun:yes'>  </span>- позиционироваться в конец файла</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>pp</span>[<span lang=EN-US
style='mso-ansi-language:EN-US'>k</span>]=<span lang=EN-US style='mso-ansi-language:
EN-US'>tellg</span>(); }<span style='mso-tab-count:2'>                </span>//
и запомнить новый адрес</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>q</span>-&gt;<span lang=EN-US style='mso-ansi-language:
EN-US'>save</span>(*<span lang=EN-US style='mso-ansi-language:EN-US'>this</span>);
}<span style='mso-tab-count:3'>                         </span>// Обновить
запись по установленному адресу</p>

<p class=a>Таким образом, интерфейс пользования основан на получении
динамических объектов класса <b style='mso-bidi-font-weight:normal'><a name="m45"><span
lang=EN-US style='mso-ansi-language:EN-US'>record</span>, </b>содержащих данные
строк таблицы.</p>

<p class=a>На последнем уровне находятся методы, работающие со всей таблицей. Прежде
всего это касается «сбора мусора». «Мусор» (неиспользуемые участи файла)
возникают в нашем варианте в трех случаях:</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>переполнение
массива файловых указателей;</span></p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>удаление
строк</span> таблицы<span lang=EN-US style='mso-ansi-language:EN-US'>;</span></p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>обновление строк таблицы, когда общий размер
записи в файле обновленной строки (метод <b style='mso-bidi-font-weight:normal'><a name="m46">fs<span lang=EN-US style='mso-ansi-language:
EN-US'>ize</span></b>) превышает размер содержащейся в нем (в этом случае она
пишется в конец файла).</p>

<p class=a>«Сбор мусора» или сжатие осуществляются путем создания нового файла
со структурой текущей таблицы и последовательного копирования туда всех строк (т.е.
доступных данных).</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>//------------------------------------------------------------------------------------------------------------116<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>// сжатие – </span>«сбор
мусора»</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void
Ftable::compress(char nm[]){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>Ftable</span>::<span lang=EN-US
style='mso-ansi-language:EN-US'>create</span>_<span lang=EN-US
style='mso-ansi-language:EN-US'>head</span>(<span lang=EN-US style='mso-ansi-language:
EN-US'>nm</span>);<span style='mso-tab-count:1'>            </span>// Создать
новый файл со структурой текущей таблицы</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>Ftable</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>T</span>;<span style='mso-tab-count:
1'>           </span><span style='mso-tab-count:1'>                        </span>// с текущей размерностью массива
указателей</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>T</span>.<span lang=EN-US style='mso-ansi-language:
EN-US'>load</span>(<span lang=EN-US style='mso-ansi-language:EN-US'>nm</span>);<span
style='mso-tab-count:1'>                                </span>// Открыть его в объекте <span
lang=EN-US style='mso-ansi-language:EN-US'>T</span></p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>for</span> (<span lang=EN-US style='mso-ansi-language:
EN-US'>int</span><span lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:
EN-US'>i</span>=0;<span lang=EN-US style='mso-ansi-language:EN-US'>i</span>&lt;<span
lang=EN-US style='mso-ansi-language:EN-US'>nr</span>;<span lang=EN-US
style='mso-ansi-language:EN-US'>i</span>++){<span style='mso-tab-count:1'>                   </span>// Прочитать все строки</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>record *p=get(i);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>T</span>.<span
lang=EN-US style='mso-ansi-language:EN-US'>add</span>(<span lang=EN-US
style='mso-ansi-language:EN-US'>p</span>);<span style='mso-tab-count:1'>                       </span>// Добавить их в новую таблицу</p>

<p class=a0><span style='mso-tab-count:2'>                        </span>delete
p; }<span style='mso-tab-count:1'>          </span><span style='mso-tab-count:
1'>            </span>// Удалить динамический объект record</p>

<p class=a0><span style='mso-tab-count:1'>            </span>T.close(); }<span
style='mso-tab-count:1'>                                 </span>// Закрыть новую таблицу</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a>При сортировке данных в файле следует подробнее рассмотреть
эффективность реализации различных вариантов с точки зрения числа операций перечитывания
строк таблицы. В самом примитивном случае можно каждый раз заново читать необходимые
объекты – строки на каждом шаге цикла, затем удаляя их. Тогда в самом лучшем
случае «быстрая» сортировка даст нам <b style='mso-bidi-font-weight:normal'><a name="m47">log<sub>2</sub>N
</b>повторных чтений каждой строки, а значит и всей таблицы. Можно полностью
загрузить все строки в память, что на самом деле неэффективно с точки зрения ее
использования. Промежуточный вариант состоит в загрузке объектов того столбца,
по которому происходит сортировка. Естественно, что сортировка состоит <span
style='mso-spacerun:yes'> </span>в перестановках (обменах) в массиве файловых
указателей и не касается самих строк.</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------------------------------------------------------------116</p>

<p class=a0>//-- Быстрая сортировка</p>

<p class=a0>// <span lang=EN-US style='mso-ansi-language:EN-US'>COL</span><span
lang=EN-US> </span>– массив указателей на загруженные объекты сортируемого
столбца</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void
Ftable::sort(DMU&lt;ADT_mem&gt; *<st1:place w:st="on"><st1:State w:st="on">COL</st1:State></st1:place>,int
a,int b){<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:1; mso-ansi-language:EN-US' lang="EN-US">            </span>if (a&gt;=b) return;</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>for(int i=a,j=b,mode=1;i&lt;j;mode ? j--: i++)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>if ((*<st1:State w:st="on">COL</st1:State>)[i]-&gt;cmp((*<st1:place
w:st="on"><st1:State w:st="on">COL</st1:State></st1:place>)[j])&gt;0){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:3'>                                    </span><st1:State
w:st="on"><st1:place w:st="on">COL</st1:place></st1:State></span>-&gt;<span
lang=EN-US style='mso-ansi-language:EN-US'>swap</span>(<span lang=EN-US
style='mso-ansi-language:EN-US'>i</span>,<span lang=EN-US style='mso-ansi-language:
EN-US'>j</span>);<span style='mso-tab-count:1'>  </span><span style='mso-tab-count:
1'>            </span><span style='mso-tab-count:1'>            </span>//
Одновременный обмен указателей</p>

<p class=a0><span style='mso-tab-count:3'>                                    </span><span
lang=EN-US style='mso-ansi-language:EN-US'>long</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>c</span>=<span lang=EN-US
style='mso-ansi-language:EN-US'>pp</span>[<span lang=EN-US style='mso-ansi-language:
EN-US'>i</span>]; <span lang=EN-US style='mso-ansi-language:EN-US'>pp</span>[<span
lang=EN-US style='mso-ansi-language:EN-US'>i</span>]=<span lang=EN-US
style='mso-ansi-language:EN-US'>pp</span>[<span lang=EN-US style='mso-ansi-language:
EN-US'>j</span>]; <span lang=EN-US style='mso-ansi-language:EN-US'>pp</span>[<span
lang=EN-US style='mso-ansi-language:EN-US'>j</span>]=<span lang=EN-US
style='mso-ansi-language:EN-US'>c</span>;<span style='mso-tab-count:1'>  </span>//
в массиве файловых указателей</p>

<p class=a0><span style='mso-tab-count:3'>                                    </span><span
lang=EN-US style='mso-ansi-language:EN-US'>mode</span>=!<span lang=EN-US
style='mso-ansi-language:EN-US'>mode</span>;<span style='mso-tab-count:1'>                            </span>//
и в массиве указателей столбца</p>

<p class=a0><span style='mso-tab-count:3'>                                    </span><span
lang=EN-US style='mso-ansi-language:EN-US'>}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>sort(<st1:State w:st="on">COL</st1:State>,a,i-1);
sort(<st1:State w:st="on"><st1:place w:st="on">COL</st1:place></st1:State>,i+1,b);
}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void
Ftable::sort(int k){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>if (k&lt;0 || k&gt;=nc) return;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>DMU&lt;ADT_mem&gt; *pcol=new
DMU&lt;ADT_mem&gt;;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>for</span> (<span lang=EN-US
style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>i</span>=0;<span lang=EN-US
style='mso-ansi-language:EN-US'>i</span>&lt;<span lang=EN-US style='mso-ansi-language:
EN-US'>nr</span>;<span lang=EN-US style='mso-ansi-language:EN-US'>i</span>++){<span
style='mso-tab-count:1'>                                           </span>//
Чтение данных столбца</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>record</span> *<span lang=EN-US
style='mso-ansi-language:EN-US'>q</span>=<span lang=EN-US style='mso-ansi-language:
EN-US'>get</span>(<span lang=EN-US style='mso-ansi-language:EN-US'>i</span>);<span
style='mso-tab-count:1'>                                     </span>//
Читать всю строку таблицы</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>pcol</span>-&gt;<span lang=EN-US
style='mso-ansi-language:EN-US'>add</span>((*<span lang=EN-US style='mso-ansi-language:
EN-US'>q</span>)[<span lang=EN-US style='mso-ansi-language:EN-US'>k</span>]-&gt;<span
lang=EN-US style='mso-ansi-language:EN-US'>clone</span>());<span
style='mso-tab-count:1'>                     </span>//
Клонировать объект <span lang=EN-US style='mso-ansi-language:EN-US'>k</span>-го
столбца</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>delete</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>q</span>; }<span style='mso-tab-count:
1'>          </span><span style='mso-tab-count:1'>                                    </span>//
и добавить указатель на него в </p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>sort</span>(<span lang=EN-US style='mso-ansi-language:
EN-US'>pcol</span>,0,<span lang=EN-US style='mso-ansi-language:EN-US'>nr</span>-1);<span
style='mso-tab-count:1'>                                                </span>//
ДМУ на объекты столбца</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>delete pcol;</span><span style='mso-tab-count:
1'>       </span><span style='mso-tab-count:1'>                                                </span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>update</span>_<span lang=EN-US
style='mso-ansi-language:EN-US'>sys</span>(); }<span style='mso-tab-count:1'>                                                  </span>//
Обновить в файле массив указателей</p>

<p class=a>В заключение приведем дамп полученного двоичного файла (на любителя).
Его чтение, в принципе, может потребоваться при отладке программы.</p>

<p class=a4 align=center style='text-align:center'>
<img border="0" src="Images/126-01.gif" width="617" height="652"><br
style='mso-ignore:vglayout' clear=ALL>
<b style='mso-bidi-font-weight:normal'><a name="m48">рис. 116-1. Двоичное представление
(дамп) файла таблицы<o:p></o:p></b></p>

<p class=a4 align=center style='text-align:center'><o:p>&nbsp;</o:p></p>

<p class=a style='text-indent:0cm'><o:p>&nbsp;</o:p></p>

<p class=a style='text-indent:0cm'><o:p>&nbsp;</o:p></p>

<p class=a style='text-indent:0cm'><o:p>&nbsp;</o:p></p>

<p class=a style='text-indent:0cm'><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>
