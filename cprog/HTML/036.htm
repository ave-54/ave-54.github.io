<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 11">
<meta name=Originator content="Microsoft Word 11">
<link rel=Edit-Time-Data href="036.files/editdata.mso">
<title>3.6. Примеры проектирования программ</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>www.PHILka.RU</o:Author>
  <o:Template>Книга(шаблон)</o:Template>
  <o:LastAuthor>romanow</o:LastAuthor>
  <o:Revision>3</o:Revision>
  <o:TotalTime>278</o:TotalTime>
  <o:Created>2008-07-21T09:25:00Z</o:Created>
  <o:LastSaved>2008-07-21T09:25:00Z</o:LastSaved>
  <o:Pages>4</o:Pages>
  <o:Words>2452</o:Words>
  <o:Characters>13982</o:Characters>
  <o:Company>NSTU_VT</o:Company>
  <o:Bytes>11776</o:Bytes>
  <o:Lines>116</o:Lines>
  <o:Paragraphs>32</o:Paragraphs>
  <o:CharactersWithSpaces>16402</o:CharactersWithSpaces>
  <o:Version>11.6360</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:AttachedTemplate HRef="D:\Отец-работа (311)\Book2008\Книга(шаблон).dot"></w:AttachedTemplate>
  <w:DoNotHyphenateCaps/>
  <w:DrawingGridHorizontalSpacing>0,55 пт</w:DrawingGridHorizontalSpacing>
  <w:DrawingGridVerticalSpacing>0,55 пт</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DrawingGridVerticalOrigin>99,25 пт</w:DrawingGridVerticalOrigin>
  <w:Compatibility>
   <w:WW6BorderRules/>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
   <w:UseWord97LineBreakingRules/>
   <w:SelectEntireFieldWithStartOrEnd/>
   <w:UseWord2002TableStyleRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:"Times New Roman CYR";
	panose-1:2 2 6 3 5 4 5 2 3 4;
	mso-font-charset:204;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:536902279 -2147483648 8 0 511 0;}
@font-face
	{font-family:"Arial CYR";
	panose-1:2 11 6 4 2 2 2 2 2 4;
	mso-font-charset:204;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:536902279 -2147483648 8 0 511 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
h1
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial CYR";
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:14.0pt;
	mso-bidi-font-weight:normal;}
h2
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial CYR";
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-font-weight:normal;
	font-style:italic;
	mso-bidi-font-style:normal;}
h3
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial CYR";
	mso-bidi-font-family:"Times New Roman";
	font-weight:normal;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:center 8.0cm right 16.0cm;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:EN-US;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:center 8.0cm right 16.0cm;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:EN-US;}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
p.a, li.a, div.a
	{mso-style-name:текст;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:36.0pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a0, li.a0, div.a0
	{mso-style-name:программа;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:Arial;
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a1, li.a1, div.a1
	{mso-style-name:список;
	mso-style-parent:текст;
	margin-top:6.0pt;
	margin-right:18.45pt;
	margin-bottom:0cm;
	margin-left:35.45pt;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	tab-stops:42.55pt;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a2, li.a2, div.a2
	{mso-style-name:определение;
	mso-style-parent:текст;
	margin-top:12.0pt;
	margin-right:32.9pt;
	margin-bottom:12.0pt;
	margin-left:35.45pt;
	text-align:justify;
	text-indent:.55pt;
	mso-pagination:widow-orphan;
	border:none;
	mso-border-alt:solid windowtext 1.5pt;
	padding:0cm;
	mso-padding-alt:1.0pt 1.0pt 1.0pt 1.0pt;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a3, li.a3, div.a3
	{mso-style-name:эпиграф;
	margin-top:12.0pt;
	margin-right:32.9pt;
	margin-bottom:12.0pt;
	margin-left:5.0cm;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Arial CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-style:italic;
	mso-bidi-font-style:normal;}
p.a4, li.a4, div.a4
	{mso-style-name:"от края";
	mso-style-parent:текст;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a5, li.a5, div.a5
	{mso-style-name:Формула;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	mso-ansi-language:EN-US;
	layout-grid-mode:line;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.a6, li.a6, div.a6
	{mso-style-name:"без формата";
	mso-style-parent:программа;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:Arial;
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a7, li.a7, div.a7
	{mso-style-name:стихи;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:36.0pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.1, li.1, div.1
	{mso-style-name:эпиграф1;
	mso-style-parent:эпиграф;
	margin-top:0cm;
	margin-right:9.35pt;
	margin-bottom:0cm;
	margin-left:9.0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Arial CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-style:italic;
	mso-bidi-font-style:normal;}
 /* Page Definitions */
 @page
	{mso-footnote-separator:url("036.files/header.htm") fs;
	mso-footnote-continuation-separator:url("036.files/header.htm") fcs;
	mso-endnote-separator:url("036.files/header.htm") es;
	mso-endnote-continuation-separator:url("036.files/header.htm") ecs;}
@page Section1
	{size:21.0cm 842.0pt;
	margin:33.45pt 42.55pt 72.0pt 89.85pt;
	mso-header-margin:14.2pt;
	mso-footer-margin:31.75pt;
	mso-even-header:url("036.files/header.htm") eh1;
	mso-header:url("036.files/header.htm") h1;
	mso-even-footer:url("036.files/header.htm") ef1;
	mso-footer:url("036.files/header.htm") f1;
	mso-first-header:url("036.files/header.htm") fh1;
	mso-first-footer:url("036.files/header.htm") ff1;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:599606880;
	mso-list-type:hybrid;
	mso-list-template-ids:1285475058 68747279 68747289 68747291 68747279 68747289 68747291 68747279 68747289 68747291;}
@list l0:level1
	{mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l1
	{mso-list-id:1205487677;
	mso-list-type:hybrid;
	mso-list-template-ids:1118973464 68747279 68747289 68747291 68747279 68747289 68747291 68747279 68747289 68747291;}
@list l1:level1
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	margin-left:72.0pt;
	text-indent:-18.0pt;}
@list l2
	{mso-list-id:1304852881;
	mso-list-type:hybrid;
	mso-list-template-ids:-396957794 68747265 68747267 68747269 68747265 68747267 68747269 68747265 68747267 68747269;}
@list l2:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:71.45pt;
	mso-level-number-position:left;
	margin-left:71.45pt;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l3
	{mso-list-id:1464887859;
	mso-list-type:hybrid;
	mso-list-template-ids:-1021834600 68747279 68747289 68747291 68747279 68747289 68747291 68747279 68747289 68747291;}
@list l3:level1
	{mso-level-tab-stop:71.45pt;
	mso-level-number-position:left;
	margin-left:71.45pt;
	text-indent:-18.0pt;}
@list l4
	{mso-list-id:1611817152;
	mso-list-type:hybrid;
	mso-list-template-ids:-315710568 68747265 68747267 68747269 68747265 68747267 68747269 68747265 68747267 68747269;}
@list l4:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:71.45pt;
	mso-level-number-position:left;
	margin-left:71.45pt;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l5
	{mso-list-id:1669668825;
	mso-list-type:hybrid;
	mso-list-template-ids:-23457888 68747265 68747267 68747269 68747265 68747267 68747269 68747265 68747267 68747269;}
@list l5:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:71.45pt;
	mso-level-number-position:left;
	margin-left:71.45pt;
	text-indent:-18.0pt;
	font-family:Symbol;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Обычная таблица";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-bidi-font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
table.MsoTableGrid
	{mso-style-name:"Сетка таблицы";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	border:solid windowtext 1.0pt;
	mso-border-alt:solid windowtext .5pt;
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-border-insideh:.5pt solid windowtext;
	mso-border-insidev:.5pt solid windowtext;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-bidi-font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
  <o:regrouptable v:ext="edit">
   <o:entry new="1" old="0"/>
   <o:entry new="2" old="1"/>
   <o:entry new="3" old="0"/>
  </o:regrouptable>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=RU style='tab-interval:36.0pt' background="back.gif">

<div class=Section1>

<h2><span lang=EN-US style='mso-ansi-language:EN-US'>3.6. </span>П<span
lang=EN-US style='mso-ansi-language:EN-US'>римеры</span> проектирования
программ<span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></h2>

<h3>Сортировка выбором<span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></h3>

<p class=a>Для начала рассмотрим пример, в котором само задание уже содержит в
себе описание образной модели. Сортировка заключается в выборе на очередном
шаге минимального элемента из входной последовательности, исключения его оттуда
и перенесения в конец выходной последовательности (или выбор максимального и
включение в начало). </p>

<p class=a><b style='mso-bidi-font-weight:normal'><a name="m1">Образная модель. Сбор фактов.
</b>При разработке образной модели сразу же надо обратить внимание на взаимное
расположение упорядоченной и неупорядоченной частей. Пусть они будут находиться
в одном массиве, при этом упорядоченная будет справа. Важный момент: образная
модель должная изображать программу «в процессе» выполнения, а не в начале
работы, т.е. в упорядоченной части должны уже быть данные (в начале работы
программы мы ничего «не увидим»). </p>

<p align="center">
<img border="0" src="Images/036-01.gif" width="396" height="98"><br style='mso-ignore:vglayout' clear=ALL>

</p>

<p class=a4 align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><a name="m2">рис. 36-1. Сортировка выбором<o:p></o:p></b></p>

<p class=a>По образной модели можно описать процесс сортировки так: из левой
части выбирается максимальный элемент и удаляется, элементы от него до конца
неупорядоченной части сдвигаются влево. Удаленный элемент помещается на
освободившееся место в конец левой части (или в начало упорядоченной).</p>

<p class=a>В образной модели сразу же бросаются в глаза действия, реализуемые
стандартными программными контекстами. Кроме того, что они являются заготовками
нашей будущей программы, они дают нам связанные с ними переменные и определяют
их «смысл». Другое дело, к ним нельзя относиться как к истинам в последней
инстанции, некоторые их характеристики нам пока будут неизвестны, они
окончательно прояснятся только в процессе выстраивания фрагментов.</p>

<p class=a4>1. Сортировка выбором базируется на выборе максимального <b
style='mso-bidi-font-weight:normal'>из оставшихся</b>. В нашей модели
неупорядоченные элементы находятся в левой части массива (размерность этой
части пока неизвестна). Кроме того, нам нужно знать местонахождение элемента,
то есть его индекс.</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>// <span lang=EN-US style='mso-ansi-language:EN-US'>k</span><span
lang=EN-US> </span>- индекс минимального элемента</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>for</span><span
lang=EN-US> <span style='mso-spacerun:yes'> </span></span>(<span lang=EN-US
style='mso-ansi-language:EN-US'>i</span>=<span lang=EN-US style='mso-ansi-language:
EN-US'>k</span>=0; <span lang=EN-US style='mso-ansi-language:EN-US'>i</span>&lt;
<u>граница неотсорт.части;</u> <span lang=EN-US style='mso-ansi-language:EN-US'>i</span>++)</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>if</span> (<span lang=EN-US style='mso-ansi-language:
EN-US'>A</span>[<span lang=EN-US style='mso-ansi-language:EN-US'>i</span>] &lt;
<span lang=EN-US style='mso-ansi-language:EN-US'>A</span>[<span lang=EN-US
style='mso-ansi-language:EN-US'>k</span>]) <span lang=EN-US style='mso-ansi-language:
EN-US'>k</span>=<span lang=EN-US style='mso-ansi-language:EN-US'>i</span>;</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a4>2. Выбранный элемент необходимо сохранить в промежуточной
переменной.</p>

<p class=a4>3. Для сдвига элементов на один влево также имеется стандартный
программный контекст:</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>for (int i=a;
i&lt;b; i++) A[i]=A[i+1];<o:p></o:p></span></p>

<p class=a4>4. Выбранный элемент помещается в конец неупорядоченной части.</p>

<p class=a4>5. Процесс сортировки является повторяющимся. Каждый его шаг
подразумевает выполнение перечисленных действий, причем справа в массиве
располагается отсортированная часть, а слева – оставшаяся исходная. На каждом
шаге граница частей смещается влево.</p>

<p class=a><b style='mso-bidi-font-weight:normal'><a name="m3">Начало проектирования.<span
style='mso-spacerun:yes'>  </span></b><span style='mso-spacerun:yes'> </span>В
соответствии с принципами модульного проектирования программа представляет
собой функцию, получающую все входные данные через формальные параметры. Массив
передается по ссылке, то есть сортировка производится в нем самом.</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>//---- Сортировка выбором. Шаг 0.</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void</span><span
lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:EN-US'>sort</span>(<span
lang=EN-US style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>A</span>[], <span lang=EN-US
style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>n</span>){</p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m4">Ш1</b>: сортировать <span
lang=EN-US style='mso-ansi-language:EN-US'>A</span>[] выбором</p>

<p class=a0>}</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a><b style='mso-bidi-font-weight:normal'><a name="m5">Пошаговое нисходящее
проектирование. </b>Данный пример является простым потому, что внешняя
конструкция прямо бросается в глаза. Сущность сортировки заключается в
повторении выполнения одного и того же действия - шага сортировки, о чем в
списке фактов говорит п.5.. </p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>//---- Сортировка выбором. Шаг 1.</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void</span><span
lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:EN-US'>sort</span>(<span
lang=EN-US style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>A</span>[], <span lang=EN-US
style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>n</span>){</p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m6">Ш1</b>: повторять шаг
сортировки (п.5 из списка фактов).</p>

<p class=a0>}</p>

<p class=a4>Однако для записи цикла нам необходимо определить его параметр и
его содержательную интерпретацию, «смысл» переменной. Пусто это будет длина
отсортированной части – <b style='mso-bidi-font-weight:normal'><a name="m7"><span
lang=EN-US style='mso-ansi-language:EN-US'>i</span>. </b>Тогда длина
неотсортированной части будет вычисляться как <b style='mso-bidi-font-weight:
normal'><a name="m8"><span lang=EN-US style='mso-ansi-language:EN-US'>n</span>-</b><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>i</span><span lang=EN-US> </span></b>(понадобится в дальнейшем).</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>//---- </span>Сортировка<span
style='mso-ansi-language:EN-US'> </span>выбором<span lang=EN-US
style='mso-ansi-language:EN-US'>. </span>Шаг<span lang=EN-US style='mso-ansi-language:
EN-US'> 1.<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void sort(int A[],
int n){<o:p></o:p></span></p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m9">Ш</b><b style='mso-bidi-font-weight:
normal'><a name="m10"><span lang=EN-US style='mso-ansi-language:EN-US'>1</span></b><span
lang=EN-US style='mso-ansi-language:EN-US'>: for(int i=0; i&lt;n; i++){<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:1; mso-ansi-language:EN-US' lang="EN-US">            </span><b style='mso-bidi-font-weight:
normal'><a name="m11">Ш2</b>: Шаг сортировки. <span lang=EN-US style='mso-ansi-language:EN-US'>i</span>
– длина отсортированной части</p>

<p class=a0 style='text-indent:36.0pt'>}</p>

<p class=a0>}</p>

<p class=a4>Шаг сортировки включает в себя последовательность действий,
перечисленных в пп.1-4 списка фактов. Поставленные «для надежности» фигурные
скобки в теле цикла оказались кстати: синтаксически последовательность действий
образует блок. Для связи шагов последовательности необходимо определить две
переменные: индекс минимального элемента – <b style='mso-bidi-font-weight:normal'><a name="m12"><span
lang=EN-US style='mso-ansi-language:EN-US'>k</span><span lang=EN-US> </span></b>и
извлеченное значение, хранимое в переменной <b style='mso-bidi-font-weight:
normal'><a name="m13"><span lang=EN-US style='mso-ansi-language:EN-US'>v</span>.<o:p></o:p></b></p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>//---- </span>Сортировка<span
style='mso-ansi-language:EN-US'> </span>выбором<span lang=EN-US
style='mso-ansi-language:EN-US'>. </span>Шаг<span lang=EN-US style='mso-ansi-language:
EN-US'> 2.<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void sort(int A[],
int n){<o:p></o:p></span></p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m14">Ш1</b>: <span lang=EN-US
style='mso-ansi-language:EN-US'>for</span>(<span lang=EN-US style='mso-ansi-language:
EN-US'>int</span><span lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:
EN-US'>i</span>=0; <span lang=EN-US style='mso-ansi-language:EN-US'>i</span>&lt;<span
lang=EN-US style='mso-ansi-language:EN-US'>n</span>; <span lang=EN-US
style='mso-ansi-language:EN-US'>i</span>++){</p>

<p class=a0><span style='mso-tab-count:1'>            </span><b
style='mso-bidi-font-weight:normal'>Ш2</b>: последовательность действий пп.1-4 </p>

<p class=a0 style='text-indent:36.0pt'>}</p>

<p class=a0>}</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>//---- Сортировка выбором. Шаг<span lang=EN-US style='mso-ansi-language:
EN-US'> 2.<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void sort(int A[],
int n){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>for</span>(<span
lang=EN-US style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>i</span>=0; <span lang=EN-US
style='mso-ansi-language:EN-US'>i</span>&lt;<span lang=EN-US style='mso-ansi-language:
EN-US'>n</span>; <span lang=EN-US style='mso-ansi-language:EN-US'>i</span>++){<span
style='mso-tab-count:2'>                   </span><span style='mso-tab-count:
3'>                                    </span>// <span lang=EN-US
style='mso-ansi-language:EN-US'>i</span> – длина отсортированной части</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>k</span>;<span style='mso-tab-count:
4'>                                         </span><span style='mso-tab-count:
2'>                        </span>// <span lang=EN-US style='mso-ansi-language:
EN-US'>k</span> – индекс минимального элемента</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>v</span>;<span style='mso-tab-count:
4'>                                         </span><span style='mso-tab-count:
2'>                        </span>// <span lang=EN-US style='mso-ansi-language:
EN-US'>v</span> – сохраненное выбранное значение</p>

<p class=a0 style='text-indent:36.0pt'><b style='mso-bidi-font-weight:normal'><a name="m15">Ш3</b>:
найти <span lang=EN-US style='mso-ansi-language:EN-US'>max</span><span
lang=EN-US> </span>в неотсортированной части<span style='mso-tab-count:1'>        </span>//
<span lang=EN-US style='mso-ansi-language:EN-US'>k</span><span
style='mso-char-type:symbol;mso-symbol-font-family:Wingdings; font-family:Wingdings; mso-ascii-font-family:Arial; mso-hansi-font-family:Arial; mso-no-proof:yes'>&szlig;</span><span
style='mso-no-proof:yes'><o:p></o:p></span></p>

<p class=a0 style='text-indent:36.0pt'><b style='mso-bidi-font-weight:normal'><a name="m16">Ш4</b>:
сохранить минимум в <span lang=EN-US style='mso-ansi-language:EN-US'>v</span><span
style='mso-tab-count:3'>                              </span>// <span
lang=EN-US style='mso-ansi-language:EN-US'>k</span><span
style='mso-char-type:symbol;mso-symbol-font-family:Wingdings; font-family:Wingdings; mso-ascii-font-family:Arial; mso-hansi-font-family:Arial; mso-no-proof:yes'>&agrave;</span><span
style='mso-spacerun:yes'>  </span><span lang=EN-US style='mso-ansi-language:
EN-US'>v</span><span style='mso-char-type:symbol;mso-symbol-font-family:
Wingdings; font-family:Wingdings; mso-ascii-font-family:Arial; mso-hansi-font-family:Arial; mso-no-proof:yes'>&szlig;</span></p>

<p class=a0 style='text-indent:36.0pt'><b style='mso-bidi-font-weight:normal'><a name="m17">Ш5</b>:
сдвинуть «хвост» влево<span style='mso-tab-count:3'>                             </span>//
<span lang=EN-US style='mso-ansi-language:EN-US'>k</span>,<span lang=EN-US
style='mso-ansi-language:EN-US'>n</span>,<span lang=EN-US style='mso-ansi-language:
EN-US'>i</span><span style='mso-char-type:symbol;mso-symbol-font-family:
Wingdings; font-family:Wingdings; mso-ascii-font-family:Arial; mso-hansi-font-family:Arial; mso-no-proof:yes'>&agrave;</span></p>

<p class=a0 style='text-indent:36.0pt'><b style='mso-bidi-font-weight:normal'><a name="m18">Ш6</b>:
записать сохраненный последним<span style='mso-tab-count:2'>              </span>//
<span lang=EN-US style='mso-ansi-language:EN-US'>v</span>,<span lang=EN-US
style='mso-ansi-language:EN-US'>n</span>,<span lang=EN-US style='mso-ansi-language:
EN-US'>i</span><span style='mso-char-type:symbol;mso-symbol-font-family:
Wingdings; font-family:Wingdings; mso-ascii-font-family:Arial; mso-hansi-font-family:Arial; mso-no-proof:yes'>&agrave;</span></p>

<p class=a0 style='text-indent:36.0pt'>}</p>

<p class=a0>}</p>

<p class=a4>Дальнейшая формализация фрагментов идет по линии наименьшего
сопротивления. Сначала просто переведем «слова» в операции и операнды,
используя «смысл» уже определенных переменных: сохранение и запись –
присваивание, сохраненный – <b style='mso-bidi-font-weight:normal'><a name="m19"><span
lang=EN-US style='mso-ansi-language:EN-US'>v</span>, </b>последний из
неупорядоченных – <b style='mso-bidi-font-weight:normal'><a name="m20"><span lang=EN-US
style='mso-ansi-language:EN-US'>A</span>[</b><b style='mso-bidi-font-weight:
normal'><a name="m21"><span lang=EN-US style='mso-ansi-language:EN-US'>n</span>-</b><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>i</span>-1], <span style='mso-spacerun:yes'> </span></b>минимальный – <b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>A</span>[<span lang=EN-US
style='mso-ansi-language:EN-US'>k</span>].<o:p></o:p></b></p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m22">Ш4</b>: <span lang=EN-US
style='mso-ansi-language:EN-US'>v</span>=<span lang=EN-US style='mso-ansi-language:
EN-US'>A</span>[<span lang=EN-US style='mso-ansi-language:EN-US'>k</span>]; </p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m23">Ш6</b>: <span lang=EN-US
style='mso-ansi-language:EN-US'>A</span>[<span lang=EN-US style='mso-ansi-language:
EN-US'>n</span>-<span lang=EN-US style='mso-ansi-language:EN-US'>i-</span>1]=<span
lang=EN-US style='mso-ansi-language:EN-US'>v</span>;</p>

<p class=a4>Для оставшихся фрагментов используются стандартные программные
контексты, в которых в заголовках циклов поставлены необходимые границы. В
каждом цикле используется своя рабочая переменная <b style='mso-bidi-font-weight:
normal'><a name="m24"><span lang=EN-US style='mso-ansi-language:EN-US'>j</span> – </b>индекс
текущего элемента.</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>jnt</span><span
lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:EN-US'>j</span>;</p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m25">Ш3</b>: <span lang=EN-US
style='mso-ansi-language:EN-US'>for</span>(<span lang=EN-US style='mso-ansi-language:
EN-US'>k</span>=<span lang=EN-US style='mso-ansi-language:EN-US'>j</span>=0; <b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>j</span>&lt;<span lang=EN-US
style='mso-ansi-language:EN-US'>n</span>-</b><b style='mso-bidi-font-weight:
normal'><a name="m26"><span lang=EN-US style='mso-ansi-language:EN-US'>i</span></b>; <span
lang=EN-US style='mso-ansi-language:EN-US'>j</span>++) <span style='mso-tab-count:
1'>           </span>// До границы неотсортированной части</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>if</span> (<span lang=EN-US style='mso-ansi-language:
EN-US'>A</span>[<span lang=EN-US style='mso-ansi-language:EN-US'>j</span>]&lt;<span
lang=EN-US style='mso-ansi-language:EN-US'>A</span>[<span lang=EN-US
style='mso-ansi-language:EN-US'>k</span>]) <span lang=EN-US style='mso-ansi-language:
EN-US'>k</span>=<span lang=EN-US style='mso-ansi-language:EN-US'>j</span>;</p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m27">Ш5</b>: <span lang=EN-US
style='mso-ansi-language:EN-US'>for</span>(<b style='mso-bidi-font-weight:normal'><a name="m28"><span
lang=EN-US style='mso-ansi-language:EN-US'>j</span>=</b><b style='mso-bidi-font-weight:
normal'><a name="m29"><span lang=EN-US style='mso-ansi-language:EN-US'>k</span></b>; <b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>j</span>&lt;<span lang=EN-US
style='mso-ansi-language:EN-US'>n</span>-</b><b style='mso-bidi-font-weight:
normal'><a name="m30"><span lang=EN-US style='mso-ansi-language:EN-US'>i</span>-1</b>; <span
lang=EN-US style='mso-ansi-language:EN-US'>j</span>++)<span style='mso-tab-count:
1'> </span><span style='mso-tab-count:1'>            </span>// От максимального
до конца неупорядоченной части</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>A</span>[<span lang=EN-US style='mso-ansi-language:
EN-US'>j</span>]=<span lang=EN-US style='mso-ansi-language:EN-US'>A</span>[<span
lang=EN-US style='mso-ansi-language:EN-US'>j</span>+1];</p>

<p class=a4><b style='mso-bidi-font-weight:normal'><a name="m31">Окончательный вариант.<o:p></o:p></b></p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------36-01.<span
lang=EN-US style='mso-ansi-language:EN-US'>cpp</span></p>

<p class=a0>//---- Сортировка выбором. Окончательный вариант.</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void sort(int A[],
int n){<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US"> </span>for(int i=0; i&lt;n; i++){<span
style='mso-tab-count:1'>      </span>// i длина отсортированной части </p>

<p class=a0><span style='mso-spacerun:yes'>      </span>int k;<span
style='mso-spacerun:yes'>                </span><span style='mso-tab-count:
1'>       </span>// k индекс минимального элемента </p>

<p class=a0><span style='mso-spacerun:yes'>      </span>int v;<span
style='mso-spacerun:yes'>               </span><span style='mso-tab-count:1'>        </span>//
v сохраненное выбранное значение</p>

<p class=a0><span style='mso-spacerun:yes'>      </span><span lang=EN-US
style='mso-ansi-language:EN-US'>int j;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>      </span>for(k=j=0; j&lt;n-i; j++)<span
style='mso-tab-count:1'> </span>// </span>Ш<span lang=EN-US style='mso-ansi-language:
EN-US'>3<o:p></o:p></span></p>

<p class=a0 style='text-indent:36.0pt'><span lang=EN-US style='mso-ansi-language:
EN-US'>if (A[j]&gt;A[k]) k=j;<span style='mso-tab-count:2'>                        </span><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>      </span>v=A[k];<span
style='mso-spacerun:yes'>                      </span>// </span>Ш<span
lang=EN-US style='mso-ansi-language:EN-US'>4 <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>      </span>for(j=k; j&lt;n-i-1; j++)<span
style='mso-spacerun:yes'>   </span>// </span>Ш<span lang=EN-US
style='mso-ansi-language:EN-US'>5 <o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:1; mso-ansi-language:EN-US' lang="EN-US">            </span>A[j]=A[j+1];</p>

<p class=a0><span style='mso-spacerun:yes'>      </span>A[n-i-1]=v;<span
style='mso-spacerun:yes'>                 </span>// Ш6</p>

<p class=a0><span style='mso-spacerun:yes'>      </span>}}<span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a4><i style='mso-bidi-font-style:normal'>Замечание: </i>вместо сдвига
можно использовать простой обмен максимального элемента в последним из
оставшихся, программа от этого только выиграет:</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>int c=A[k];
A[k]=A[n-i-1]; A[n-i-1]=c;<span style='mso-tab-count:1'>        </span>// </span>Вместо<span
style='mso-ansi-language:EN-US'> </span>Ш<span lang=EN-US style='mso-ansi-language:
EN-US'>4,</span>Ш<span lang=EN-US style='mso-ansi-language:EN-US'>5,</span>Ш<span
lang=EN-US style='mso-ansi-language:EN-US'>6<o:p></o:p></span></p>

<h3>Задача на вычеркивание</h3>

<p class=a>Из <b style='mso-bidi-font-weight:normal'><a name="m32"><span lang=EN-US
style='mso-ansi-language:EN-US'>n</span>-</b>значного числа нужно вычеркнуть <b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>m</span><span lang=EN-US> </span></b>цифр таким образом, чтобы
оставшееся число было максимальным из возможных.</p>

<p class=a><b style='mso-bidi-font-weight:normal'><a name="m33">Образная модель. </b>На
примере этой задачи можно видеть, что образной модели может предшествовать
обсуждение идей, положенных в основу решения. И не всегда, казалось бы, здравая
идея дает правильное (универсальное) решение.</p>

<p class=a>Например, естественно предположить, что для того, чтобы оставить
максимальное число, необходимо вычеркивать минимальные цифры. Однако, такой
простой пример, как <b style='mso-bidi-font-weight:normal'><a name="m34">12</b>0 (<span
lang=EN-US style='mso-ansi-language:EN-US'>n</span>=3,<span lang=EN-US
style='mso-ansi-language:EN-US'>m</span>=1), показывает, что эта идея работает не
всегда (правильный результат 1<b style='mso-bidi-font-weight:normal'><a name="m35">20</b>) .
Аналогично, для<span style='mso-spacerun:yes'>  </span>53784564 (n=8 m=4) получаем
53<b style='mso-bidi-font-weight:normal'><a name="m36">78</b>4<b style='mso-bidi-font-weight:
normal'><a name="m37">56</b>4 вместо 537<b style='mso-bidi-font-weight:normal'><a name="m38">8</b>4<b
style='mso-bidi-font-weight:normal'>564. </b>Видимо, необходимо учитывать не
только значение цифры, но и ее положение.</p>

<p class=a><b style='mso-bidi-font-weight:normal'><a name="m39"><span
style='mso-spacerun:yes'> </span></b>Попробуем рассуждать по-другому, с точки
зрения всех возможных вариантов решения для заданного числа. Для того, чтобы
оставшееся число было максимальным, в старшей позиции должна быть максимальная
из возможных цифр. Поскольку вычеркивать можно не больше, чем <b
style='mso-bidi-font-weight:normal'>m </b>цифр, то следует найти максимальную
из <b style='mso-bidi-font-weight:normal'><a name="m40">m+1 </b>цифр и вычеркнуть все
предыдущие (<u>5437<b style='mso-bidi-font-weight:normal'><a name="m41">8</b></u>564 при n=8
m=4). Эта идея и является основой процесса решения задачи.</p>

<p class=a>Вопрос, что делать дальше. Ответ простой: для оставшейся части числа
решается та же задача (4564 при n=4 m=1) – <u>4<b style='mso-bidi-font-weight:
normal'><a name="m42">5</b></u>64. Процесс повторяется, пока нечего будет вычеркивать (при 64
n=2 m=0).</p>

<p class=a>В образной модели обсуждается также и способ представления данных.
Нам удобно хранить и обрабатывать цифры числа по отдельности, а при
вычеркивании цифры просто заменять ее на некоторое недопустимое значение,
например на <b style='mso-bidi-font-weight:normal'><a name="m43">-1. </b>Тогда цифры при
вычеркивании цифр не потребуется их перемещения в массиве.</p>

<p class=a><b style='mso-bidi-font-weight:normal'><a name="m44">Сбор фактов</b> осуществляется
по принципу «исторического» программирования. Мы рассмотрим первый шаг
алгоритма, а потом попытаемся внести коррективы.</p>

<p class=a4 style='margin-left:7.1pt;text-indent:-7.1pt;mso-list:l0 level1 lfo5;
tab-stops:list 14.2pt'><![if !supportLists]>
<span
style='mso-list:Ignore; mso-fareast-font-family:Times New Roman CYR; mso-bidi-font-family:Times New Roman CYR'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Исходное число представлено в массиве,
содержащем его цифры <b style='mso-bidi-font-weight:normal'><a name="m45"><span lang=EN-US
style='mso-ansi-language:EN-US'>A</span>[], </b>а также входными параметрами –
исходное количество цифр – <b style='mso-bidi-font-weight:normal'><a name="m46"><span
lang=EN-US style='mso-ansi-language:EN-US'>n</span><span lang=EN-US> </span></b>и
вычеркиваемое – <b style='mso-bidi-font-weight:normal'><a name="m47"><span lang=EN-US
style='mso-ansi-language:EN-US'>m</span>.</b></p>

<p class=a4 style='margin-left:7.1pt;text-indent:-7.1pt;mso-list:l0 level1 lfo5;
tab-stops:list 14.2pt'><![if !supportLists]>
<span
style='mso-list:Ignore; mso-fareast-font-family:Times New Roman CYR; mso-bidi-font-family:Times New Roman CYR'>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Выбирается максимальная цифра (элемент массива)
от<span style='mso-spacerun:yes'>  </span>начала в диапазоне <b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>m</span>-1</b>;</p>

<p class=a4 style='margin-left:7.1pt;text-indent:-7.1pt;mso-list:l0 level1 lfo5;
tab-stops:list 14.2pt'><![if !supportLists]>
<span
style='mso-list:Ignore; mso-fareast-font-family:Times New Roman CYR; mso-bidi-font-family:Times New Roman CYR'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Затем «удаляются» (заменяются на -1) значения
цифр от начала до найденной максимальной. При этом корректируется значение <b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>m</span> – </b>количество оставшихся цифр.</p>

<p class=a4 style='margin-left:7.1pt;text-indent:-7.1pt;mso-list:l0 level1 lfo5;
tab-stops:list 14.2pt'><![if !supportLists]>
<span
style='mso-list:Ignore; mso-fareast-font-family:Times New Roman CYR; mso-bidi-font-family:Times New Roman CYR'>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Для оставшейся части процесс необходимо
повторить. В технологии «исторического» программирования этому соответствует
«переход к п.2», структурное программирование требует введения цикла повторения:
повторять пп.2,3, пока <b style='mso-bidi-font-weight:normal'><a name="m48"><span lang=EN-US
style='mso-ansi-language:EN-US'>m</span><span lang=EN-US> </span></b>не станет
равным 0 (нечего вычеркивать).</p>

<p class=a>Этим набор действий, выполняемых в программе, исчерпывается. Можно
сразу же набросать структурированную схему программы, выполнив 3 шага
проектирования.</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m49">Ш</b><b style='mso-bidi-font-weight:
normal'><a name="m50"><span lang=EN-US style='mso-ansi-language:EN-US'>1: </span></b><span
lang=EN-US style='mso-ansi-language:EN-US'>void F(int A[], int n, int m){<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:1; mso-ansi-language:EN-US' lang="EN-US">            </span><b style='mso-bidi-font-weight:
normal'><a name="m51">Ш2: п4 </b><span lang=EN-US style='mso-ansi-language:EN-US'>while</span>(<span
lang=EN-US style='mso-ansi-language:EN-US'>m</span>!=<span lang=EN-US
style='mso-ansi-language:EN-US'>0</span>)<span lang=EN-US style='mso-ansi-language:
EN-US'>{</span><span style='mso-tab-count:2'>                   </span></p>

<p class=a0>
<span
style='mso-tab-count:2; mso-ansi-language:EN-US' lang="EN-US">                        </span><b
style='mso-bidi-font-weight:normal'>Ш3</b>: последовательность <b
style='mso-bidi-font-weight:normal'>п2,п3</b></p>

<p class=a0 style='margin-left:36.0pt;text-indent:36.0pt'>}<b style='mso-bidi-font-weight:
normal'><a name="m52"><o:p></o:p></b></p>

<p class=a>Все-таки мы здесь немного забежали вперед, поскольку не определили
характеристик цикла из <b style='mso-bidi-font-weight:normal'><a name="m53">Ш2. </b>На первом
шаге он выполняется от начала массива, но на всех других, от цифры, следующей
за найденной – максимальной. Это типичный пример итерационного цикла (см. <b
style='mso-bidi-font-weight:normal'>4.3</b>). После того, как мы введем две
переменные, все встанет на свои места: <b style='mso-bidi-font-weight:normal'><a name="m54"><span
lang=EN-US style='mso-ansi-language:EN-US'>i</span><span lang=EN-US> </span>– </b>индекс
очередной максимальной цифры, <b style='mso-bidi-font-weight:normal'><a name="m55"><span
lang=EN-US style='mso-ansi-language:EN-US'>k</span><span lang=EN-US> </span>– </b>начало
интервала просмотра цифр на очередном шаге.</p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m56"><o:p>&nbsp;</o:p></b></p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m57">Ш</b><b style='mso-bidi-font-weight:
normal'><a name="m58"><span lang=EN-US style='mso-ansi-language:EN-US'>1: </span></b><span
lang=EN-US style='mso-ansi-language:EN-US'>void F(int A[], int n, int m){</span></p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>s</span>,<b style='mso-bidi-font-weight:
normal'><a name="m59"><span lang=EN-US style='mso-ansi-language:EN-US'>k</span>=0</b>;<span
style='mso-tab-count:3'>                                  </span>// <span
lang=EN-US style='mso-ansi-language:EN-US'>s</span> – индекс максимальной цифры
</p>

<p class=a0><span style='mso-tab-count:1'>            </span><b
style='mso-bidi-font-weight:normal'>Ш2: п4 </b><span lang=EN-US
style='mso-ansi-language:EN-US'>while</span>(<span lang=EN-US style='mso-ansi-language:
EN-US'>m</span>!=0){<span style='mso-tab-count:2'>                   </span>// <span
lang=EN-US style='mso-ansi-language:EN-US'>k</span> – начало интервала
просмотра</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><b
style='mso-bidi-font-weight:normal'>Ш3</b>: последовательность <b
style='mso-bidi-font-weight:normal'>п2,п3<o:p></o:p></b></p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m60"><span style='mso-tab-count:
2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>k</span>=</b><b style='mso-bidi-font-weight:
normal'><a name="m61"><span lang=EN-US style='mso-ansi-language:EN-US'>s</span>+1;<span
style='mso-tab-count:3'>                          </span></b>// интервал
начинается за макс. цифрой</p>

<p class=a0 style='margin-left:36.0pt;text-indent:36.0pt'>}<b style='mso-bidi-font-weight:
normal'><a name="m62"><o:p></o:p></b></p>

<p class=a>Дальше нужно сформулировать подробнее <b style='mso-bidi-font-weight:
normal'><a name="m63">п2,п3, </b>а затем формально их расписать:</p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m64"><o:p>&nbsp;</o:p></b></p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m65">Ш</b><b style='mso-bidi-font-weight:
normal'><a name="m66"><span lang=EN-US style='mso-ansi-language:EN-US'>1: </span></b><span
lang=EN-US style='mso-ansi-language:EN-US'>void F(int A[], int n, int m){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>s</span>,<b style='mso-bidi-font-weight:
normal'><a name="m67"><span lang=EN-US style='mso-ansi-language:EN-US'>k</span>=0</b>;<span
style='mso-tab-count:3'>                                  </span>// <span
lang=EN-US style='mso-ansi-language:EN-US'>s</span> – индекс максимальной цифры
</p>

<p class=a0><span style='mso-tab-count:1'>            </span><b
style='mso-bidi-font-weight:normal'>Ш2: п4 </b><span lang=EN-US
style='mso-ansi-language:EN-US'>while</span>(<span lang=EN-US style='mso-ansi-language:
EN-US'>m</span>!=0){<span style='mso-tab-count:2'>                   </span>// <span
lang=EN-US style='mso-ansi-language:EN-US'>k</span> – начало интервала
просмотра</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><b
style='mso-bidi-font-weight:normal'>Ш3</b>: последовательность <b
style='mso-bidi-font-weight:normal'>п2,п3<o:p></o:p></b></p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m68"><span style='mso-tab-count:
2'>                        </span>Ш4<span
lang=EN-US style='mso-ansi-language:EN-US'>:<o:p></o:p></span></b></p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m69">
<span style='mso-tab-count:2; mso-ansi-language:EN-US' lang="EN-US">                        </span>п2
</b>найти максимум в <b style='mso-bidi-font-weight:normal'><a name="m70"><span lang=EN-US
style='mso-ansi-language:EN-US'>A</span>[]</b> в диапазоне, начиная с <b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>k</span><span lang=EN-US> </span></b>длиной <b style='mso-bidi-font-weight:
normal'><a name="m71"><span lang=EN-US style='mso-ansi-language:EN-US'>m</span>+1<o:p></o:p></b></p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m72"><span style='mso-tab-count:
2'>                        </span><span style='mso-spacerun:yes'>     </span></b>результат
– индекс максимального значения <b style='mso-bidi-font-weight:normal'><a name="m73"><span
lang=EN-US style='mso-ansi-language:EN-US'>s</span></b></p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m74"><span style='mso-tab-count:
2'>                        </span>п3 <span
lang=EN-US style='mso-ansi-language:EN-US'>A</span>[</b><b style='mso-bidi-font-weight:
normal'><a name="m75"><span lang=EN-US style='mso-ansi-language:EN-US'>j</span>]=-1 </b>в
диапазоне от <b style='mso-bidi-font-weight:normal'><a name="m76"><span lang=EN-US
style='mso-ansi-language:EN-US'>k</span><span lang=EN-US> </span></b>до <b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>s</span>-1, </b>корректируя <b style='mso-bidi-font-weight:normal'><a name="m77"><span
lang=EN-US style='mso-ansi-language:EN-US'>s</span></b></p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m78"><span style='mso-tab-count:
2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>k</span>=</b><b style='mso-bidi-font-weight:
normal'><a name="m79"><span lang=EN-US style='mso-ansi-language:EN-US'>s</span>+1;<span
style='mso-tab-count:3'>                          </span></b>// интервал
начинается за макс. цифрой</p>

<p class=a0 style='margin-left:36.0pt;text-indent:36.0pt'><span lang=EN-US
style='mso-ansi-language:EN-US'>}<b style='mso-bidi-font-weight:normal'><a name="m80"><o:p></o:p></b></span></p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m81"><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></b></p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m82"><span style='mso-tab-count:
2'>                        </span>Ш5: п2 </b>найти максимум в <b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>A</span>[]</b> в диапазоне, начиная с <b style='mso-bidi-font-weight:
normal'><a name="m83"><span lang=EN-US style='mso-ansi-language:EN-US'>k</span><span
lang=EN-US> </span></b>длиной <b style='mso-bidi-font-weight:normal'><a name="m84"><span
lang=EN-US style='mso-ansi-language:EN-US'>m</span>+1<o:p></o:p></b></p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>for (s=j=k; j&lt;k+m+1;j++)<span
style='mso-tab-count:2'>             </span><o:p></o:p></span></p>

<p class=a0 style='margin-left:72.0pt;text-indent:36.0pt'><span lang=EN-US
style='mso-ansi-language:EN-US'>if(A[j]&gt;A[s]) s=j;<span style='mso-tab-count:
2'>             </span><o:p></o:p></span></p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m85"><span lang=EN-US
style='mso-ansi-language:EN-US'><span style='mso-tab-count:1'>            </span><o:p></o:p></span></b></p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m86">
<span style='mso-tab-count:1; mso-ansi-language:EN-US' lang="EN-US">                        </span>Ш</b><b style='mso-bidi-font-weight:
normal'><a name="m87"><span lang=EN-US style='mso-ansi-language:EN-US'>6: </span>п</b><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>3 A[j]=-1 </span></b>в<span style='mso-ansi-language:EN-US'> </span>диапазоне<span
style='mso-ansi-language:EN-US'> </span>от<span style='mso-ansi-language:EN-US'>
<b style='mso-bidi-font-weight:normal'><a name="m88"><span lang=EN-US>k </span></b></span>до<span
style='mso-ansi-language:EN-US'> <b style='mso-bidi-font-weight:normal'><a name="m89"><span
lang=EN-US>s-1, </span></b></span>корректируя<span style='mso-ansi-language:
EN-US'> <b style='mso-bidi-font-weight:normal'><a name="m90"><span lang=EN-US>s</span></b><span
lang=EN-US><o:p></o:p></span></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span>for (j=k;j!=s;j++,m--) A[j]=-1;<o:p></o:p></span></p>

<p class=a>В результате получим программу, которая будет работать на
приведенных выше примерах. </p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>//---------------------------------------------------------------------------<span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0>// Вычеркивание цифр: вычеркнуть из n-значного числа</p>

<p class=a0>// m цифр, чтобы осталось максимальное</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void F(int A[],
int n, int m){<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:1; mso-ansi-language:EN-US' lang="EN-US">            </span>int s,j,k=0;<span
style='mso-tab-count:4'>                                             </span>//
k - начало интервала просмотра</p>

<p class=a0><span style='mso-tab-count:1'>            </span>while(m!=0){<span
style='mso-tab-count:2'>                   </span><span style='mso-tab-count:
1'>            </span><span style='mso-tab-count:1'>            </span>// пока
есть что вычеркивать</p>

<p class=a0><span style='mso-tab-count:2'>                        </span>for
(s=j=k; j&lt;k+m+1;j++)<span style='mso-tab-count:2'>             </span>//
Найти максимальную цифру в</p>

<p class=a0><span style='mso-tab-count:3'>                                    </span>if(A[j]&gt;A[s])
s=j;<span style='mso-tab-count:1'>             </span>//
интервале k..k+m (включительно)</p>

<p class=a0><span style='mso-tab-count:2'>                        </span>for
(j=k;j!=s;j++,m--)<span style='mso-tab-count:1'>                   </span>// Вычеркнуть цифры перед
максимальной</p>

<p class=a0><span style='mso-tab-count:3'>                                    </span>A[j]=-1;</p>

<p class=a0><span style='mso-tab-count:2'>                        </span>k=s+1;<span
style='mso-tab-count:4'>                                      </span>//
Пропустить максимальную</p>

<p class=a0><span style='mso-tab-count:2'>                        </span>}}</p>

<p class=a>Однако, стоит на значении 98765432, при <span lang=EN-US
style='mso-ansi-language:EN-US'>n</span>=8 и <span lang=EN-US style='mso-ansi-language:
EN-US'>m</span>=4 программы «вывалится». Если попытаться проанализировать
поведение программы, либо просто проследить за ней при помощи отладчика, то мы
увидим следующее: максимальная цифра находится в начале диапазона, поэтому на
каждом шаге <b style='mso-bidi-font-weight:normal'><a name="m91">вычеркивания не будет&cedil;
</b>а начало будет смещаться на 1. В результате программа зациклится, выйдет за
пределы массива и, скорее всего, «вывалится» по защите памяти (особенности Си,
точнее, его адресной арифметики).</p>

<h3>Ошибка вида «крайняя ситуация»</h3>

<p class=a>Обнаруженная ошибка является типичной ошибкой, которая возникает
из-за неучтенной <b style='mso-bidi-font-weight:normal'><a name="m92">крайней ситуации. </b>Дело
в том, что образная модель просматривается нами на конкретном примере, не
учитывающем многообразие вариантов выходных данных, т.е. для некоторого
усредненного случая. Поэтому, общей рекомендацией является перечисление всех
«крайних ситуаций», которые могут возникнуть в программе от различных сочетаний
входных данных. Это можно сделать уже по написанному коду. Для каждой из них
возможны два варианта<span lang=EN-US style='mso-ansi-language:EN-US'>:<o:p></o:p></span></p>

<p class=a1 style='margin-left:42.55pt;text-indent:-18.0pt;mso-list:l2 level1 lfo6;
tab-stops:list 42.55pt'><![if !supportLists]>
<span
style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>написанный код адекватно реагирует на сочетание
данных, соответствующих «крайней ситуации», в программе ничего менять не надо;</p>

<p class=a1 style='margin-left:42.55pt;text-indent:-18.0pt;mso-list:l2 level1 lfo6;
tab-stops:list 42.55pt'><![if !supportLists]>
<span
style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>программа работает неправильно. В этом случае
достаточно бывает наложить «заплатку», вылавливающую «крайнюю ситуацию» и
содержащую правильной программный код.</p>

<p class=a>В нашем примере в образной модели мы пропустили ситуацию, когда количество
вычеркиваемых цифр станет равным количеству оставшихся (именно она возникла на
последнем сочетании данных). Исправить ее достаточно просто. В основной цикл
нужно добавить условие выхода по <b style='mso-bidi-font-weight:normal'><a name="m93"><span
lang=EN-US style='mso-ansi-language:EN-US'>n</span>==</b><b style='mso-bidi-font-weight:
normal'><a name="m94"><span lang=EN-US style='mso-ansi-language:EN-US'>m</span>, </b>а после
выхода добавит цикл вычеркивания, если <b style='mso-bidi-font-weight:normal'><a name="m95"><span
lang=EN-US style='mso-ansi-language:EN-US'>m</span>!=0. </b>Причем вычеркивать
нужно от начала текущего диапазона (т.е. <b style='mso-bidi-font-weight:normal'><a name="m96"><span
lang=EN-US style='mso-ansi-language:EN-US'>k</span>).</b></p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------36-02</p>

<p class=a0>// Вычеркивание цифр: вычеркнуть из n-значного числа</p>

<p class=a0>// m цифр, чтобы осталось максимальное</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void F(int A[],
int n, int m){<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:1; mso-ansi-language:EN-US' lang="EN-US">            </span>int s,j,k=0;<span
style='mso-tab-count:4'>                                             </span>//
k - начало интервала просмотра</p>

<p class=a0><span style='mso-tab-count:1'>            </span>while(!(m==0 <b
style='mso-bidi-font-weight:normal'>|| m==n</b>)){<span style='mso-tab-count:
2'>              </span><span style='mso-tab-count:1'>            </span>// есть
что вычеркивать <b style='mso-bidi-font-weight:normal'><a name="m97">или вычеркивать все</b></p>

<p class=a0><span style='mso-tab-count:2'>                        </span>for
(s=j=k; j&lt;k+m+1;j++)<span style='mso-tab-count:2'>             </span>//
Найти максимальную цифру в</p>

<p class=a0><span style='mso-tab-count:3'>                                    </span>if(A[j]&gt;A[s])
s=j;<span style='mso-tab-count:1'>             </span>//
интервале k..k+m (включительно)</p>

<p class=a0><span style='mso-tab-count:2'>                        </span>for
(j=k;j!=s;j++,m--)<span style='mso-tab-count:1'>                   </span>// Вычеркнуть цифры перед
максимальной</p>

<p class=a0><span style='mso-tab-count:3'>                                    </span>A[j]=-1;</p>

<p class=a0><span style='mso-tab-count:2'>                        </span>k=s+1;<span
style='mso-tab-count:4'>                                      </span>//
Пропустить максимальную</p>

<p class=a0><span style='mso-tab-count:2'>                        </span>}</p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m98"><span style='mso-tab-count:
1'>            </span>while(m--!=0) A[k++]=-1;<span style='mso-tab-count:2'>                       </span>//
вычеркивать все<o:p></o:p></b></p>

<p class=a0><span style='mso-tab-count:1'>            </span>}<span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<h3>Отладка: две программы – в компьютере и в голове</h3>

<p class=a>Большинство начинающих искренне считают, что их программа должна
работать уже потому, что она написана. На самом деле отладка программы является
еще более трудным делом, чем ее написание. Это только так кажется, что
программист в состоянии контролировать разработанную им программу. На самом
деле число возможных вариантов ее поведения, обусловленных как логикой
программы, так ошибками, разбросанными там и сям по ее тексту, чрезвычайно
велико. Отсюда следует, что к собственной программе следует относиться скорее
как к противнику в шахматной игре: фигуры расставлены, правила известны, число
возможных ходов не поддается логическому анализу. </p>

<p class=a>Основной принцип отладки: работающая программа на самом деле находится
в голове программиста. Реальная программа в компьютере – лишь грубое к ней
приближение. Программист должен отследить, когда между ними возникает
расхождение – в этом месте и находится очередная ошибка. Для этой цели служат
средства отладки. Они позволяют наблюдать поведение программы: значения
выбранных переменных при пошаговом ее выполнении, при выполнении ее до
заданного места (точки останова), либо до момента выполнения заданных условий.</p>

<p class=a>В отладке программы, как и в ее написании существует своя технология,
сходная со структурным программированием:</p>

<p class=a1 style='margin-left:42.55pt;text-indent:-14.2pt;mso-list:l5 level1 lfo3;
tab-stops:list 42.55pt'><![if !supportLists]>
<span
style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>нельзя отлаживать все сразу. На каждом этапе
проверяется отдельный фрагмент, для чего программа должна проходить только по
уже протестированным частям, «внушающим доверие».</p>

<p class=a1 style='margin-left:42.55pt;text-indent:-14.2pt;mso-list:l5 level1 lfo3;
tab-stops:list 42.55pt'><![if !supportLists]>
<span
style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>отладку программы нужно начинать на простых
тестовых данных, обеспечивающих прохождение программы по уже отлаженным
фрагментам. Входные данные для отладки лучше не вводить самому, а задавать в
виде статических последовательностей в массивах или в файлах;</p>

<p class=a1 style='margin-left:42.55pt;text-indent:-14.2pt;mso-list:l5 level1 lfo3;
tab-stops:list 42.55pt'><![if !supportLists]>
<span
style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>если поведение программы не поддается анализу и
определить местонахождение ошибки невозможно, необходимо произвести
«следственный эксперимент»: проследить выполнение программы на различных
комбинациях входных данных, набрать статистику уже на ее основе строить догадки
и выдвигать гипотезы, которые в свою очередь нужно проверять на новых данных;</p>

<p class=a1 style='margin-left:42.55pt;text-indent:-14.2pt;mso-list:l5 level1 lfo3;
tab-stops:list 42.55pt'><![if !supportLists]>
<span
style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>модульному программированию соответствует
модульное тестирование. Отдельные модули (функции, процедуры) следует сначала
вызывать из головной программы (<span lang=EN-US style='mso-ansi-language:EN-US'>main</span>)
и отлаживать на тестовых данных, а уже затем использовать по назначению. Вместо
ненаписанных модулей можно использовать «заглушки», дающие фиксированный
результат;</p>

<p class=a1 style='margin-left:42.55pt;text-indent:-14.2pt;mso-list:l5 level1 lfo3;
tab-stops:list 42.55pt'><![if !supportLists]>
<span
style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>нисходящему программированию соответствует
нисходящее тестирование. Внутренние части программы аналогично могут быть
заменены «заглушками», позволяющими частично отладить уже написанные внешние
части программы.</p>

<p class=a>Ошибки лучше всего различать не по сложности их обнаружения и не по
вызываемым ими последствиям, а по затратам на их исправление:</p>

<p class=a1 style='margin-left:42.55pt;text-indent:-18.0pt;mso-list:l4 level1 lfo4;
tab-stops:list 42.55pt'><![if !supportLists]>
<span
style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>мелкие ошибки типа «опечаток»,<span
style='mso-spacerun:yes'>  </span>которые обусловлены просто недостаточным
вниманием программиста. К таковым относятся неправильные ограничения цикла
(плюс-минус один шаг), использование не тех индексов или указателей,
использование одной переменной одновременно в двух «смыслах» и т.п.;</p>

<p class=a1 style='margin-left:42.55pt;text-indent:-18.0pt;mso-list:l4 level1 lfo4;
tab-stops:list 42.55pt'><![if !supportLists]>
<span
style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>локальные ошибки логики программы, состоящие в
пропуске одного из возможных вариантов ее работы или сочетания входных данных,
ошибка вида «крайняя ситуация»;</p>

<p class=a1 style='margin-left:42.55pt;text-indent:-18.0pt;mso-list:l4 level1 lfo4;
tab-stops:list 42.55pt'><![if !supportLists]>
<span
style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>грубые просчеты, связанные с неправильным
образным представлением того, что и как должна делать программа. Это «идейные»
ошибки, когда предложенная идея либо просто не работает, либо дает правильный
результат не во всех случаях.</p>

<p class=a4>
<img border="0" src="Images/smile.jpg" width="40" height="41" align="left">«Любая
программа в любой момент содержит как минимум одну ошибку». Программистский 
фольклор.</p>

<p class=a4><span style='mso-spacerun:yes'> </span></p>

<p class=a0><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>
