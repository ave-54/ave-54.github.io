<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 11">
<meta name=Originator content="Microsoft Word 11">
<link rel=Edit-Time-Data href="063.files/editdata.mso">
<title>6.3. Линейные списки</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>www.PHILka.RU</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>vtpc112</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>409</o:TotalTime>
  <o:Created>2008-07-29T07:33:00Z</o:Created>
  <o:LastSaved>2008-07-29T07:33:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>5110</o:Words>
  <o:Characters>29129</o:Characters>
  <o:Company>NSTU_VT</o:Company>
  <o:Bytes>11776</o:Bytes>
  <o:Lines>242</o:Lines>
  <o:Paragraphs>68</o:Paragraphs>
  <o:CharactersWithSpaces>34171</o:CharactersWithSpaces>
  <o:Version>11.6360</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DoNotHyphenateCaps/>
  <w:DrawingGridHorizontalSpacing>0,55 пт</w:DrawingGridHorizontalSpacing>
  <w:DrawingGridVerticalSpacing>0,55 пт</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DrawingGridVerticalOrigin>99,25 пт</w:DrawingGridVerticalOrigin>
  <w:Compatibility>
   <w:WW6BorderRules/>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
   <w:UseWord97LineBreakingRules/>
   <w:SelectEntireFieldWithStartOrEnd/>
   <w:UseWord2002TableStyleRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:"Times New Roman CYR";
	panose-1:2 2 6 3 5 4 5 2 3 4;
	mso-font-charset:204;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:536902279 -2147483648 8 0 511 0;}
@font-face
	{font-family:"Arial CYR";
	panose-1:2 11 6 4 2 2 2 2 2 4;
	mso-font-charset:204;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:536902279 -2147483648 8 0 511 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
h1
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial CYR";
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:14.0pt;
	mso-bidi-font-weight:normal;}
h2
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial CYR";
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-font-weight:normal;
	font-style:italic;
	mso-bidi-font-style:normal;}
h3
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial CYR";
	mso-bidi-font-family:"Times New Roman";
	font-weight:normal;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:center 8.0cm right 16.0cm;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:EN-US;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:center 8.0cm right 16.0cm;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:EN-US;}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
p.a, li.a, div.a
	{mso-style-name:текст;
	mso-style-link:"текст Знак";
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:36.0pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a0, li.a0, div.a0
	{mso-style-name:программа;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:Arial;
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a1, li.a1, div.a1
	{mso-style-name:список;
	mso-style-parent:текст;
	margin-top:6.0pt;
	margin-right:18.45pt;
	margin-bottom:0cm;
	margin-left:64.35pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:-18.0pt;
	mso-pagination:widow-orphan;
	mso-list:l4 level1 lfo1;
	tab-stops:42.55pt list 64.35pt;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a2, li.a2, div.a2
	{mso-style-name:определение;
	mso-style-parent:текст;
	margin-top:12.0pt;
	margin-right:32.9pt;
	margin-bottom:12.0pt;
	margin-left:35.45pt;
	text-align:justify;
	text-indent:.55pt;
	mso-pagination:widow-orphan;
	border:none;
	mso-border-alt:solid windowtext 1.5pt;
	padding:0cm;
	mso-padding-alt:1.0pt 1.0pt 1.0pt 1.0pt;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a3, li.a3, div.a3
	{mso-style-name:эпиграф;
	margin-top:0cm;
	margin-right:32.9pt;
	margin-bottom:0cm;
	margin-left:5.0cm;
	margin-bottom:.0001pt;
	text-align:right;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Arial CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-style:italic;
	mso-bidi-font-style:normal;}
p.a4, li.a4, div.a4
	{mso-style-name:"от края";
	mso-style-parent:текст;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a5, li.a5, div.a5
	{mso-style-name:Формула;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	mso-ansi-language:EN-US;
	layout-grid-mode:line;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.a6, li.a6, div.a6
	{mso-style-name:"без формата";
	mso-style-parent:программа;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:Arial;
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a7, li.a7, div.a7
	{mso-style-name:стихи;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:36.0pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.1, li.1, div.1
	{mso-style-name:эпиграф1;
	mso-style-parent:эпиграф;
	margin-top:0cm;
	margin-right:9.35pt;
	margin-bottom:0cm;
	margin-left:9.0cm;
	margin-bottom:.0001pt;
	text-align:right;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Arial CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-style:italic;
	mso-bidi-font-style:normal;}
p.2, li.2, div.2
	{mso-style-name:"заголовок 2";
	mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.3, li.3, div.3
	{mso-style-name:"заголовок 3";
	mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Arial CYR";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;
	font-style:italic;
	mso-bidi-font-style:normal;}
span.a8
	{mso-style-name:"текст Знак";
	mso-style-locked:yes;
	mso-style-link:текст;
	mso-ansi-font-size:12.0pt;
	font-family:"Times New Roman CYR";
	mso-ascii-font-family:"Times New Roman CYR";
	mso-hansi-font-family:"Times New Roman CYR";
	mso-ansi-language:RU;
	mso-fareast-language:RU;
	mso-bidi-language:AR-SA;}
 /* Page Definitions */
 @page
	{mso-footnote-separator:url("063.files/header.htm") fs;
	mso-footnote-continuation-separator:url("063.files/header.htm") fcs;
	mso-endnote-separator:url("063.files/header.htm") es;
	mso-endnote-continuation-separator:url("063.files/header.htm") ecs;}
@page Section1
	{size:21.0cm 842.0pt;
	margin:33.45pt 42.55pt 72.0pt 89.85pt;
	mso-header-margin:14.2pt;
	mso-footer-margin:31.75pt;
	mso-even-header:url("063.files/header.htm") eh1;
	mso-header:url("063.files/header.htm") h1;
	mso-even-footer:url("063.files/header.htm") ef1;
	mso-footer:url("063.files/header.htm") f1;
	mso-first-header:url("063.files/header.htm") fh1;
	mso-first-footer:url("063.files/header.htm") ff1;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:649215360;
	mso-list-type:simple;
	mso-list-template-ids:68747279;}
@list l0:level1
	{mso-level-tab-stop:18.0pt;
	mso-level-number-position:left;
	margin-left:18.0pt;
	text-indent:-18.0pt;}
@list l1
	{mso-list-id:745765435;
	mso-list-type:simple;
	mso-list-template-ids:281411914;}
@list l1:level1
	{mso-level-tab-stop:55.7pt;
	mso-level-number-position:left;
	margin-left:55.7pt;
	text-indent:-20.25pt;}
@list l2
	{mso-list-id:797407802;
	mso-list-type:hybrid;
	mso-list-template-ids:-1649350574 68747279 68747267 68747269 68747265 68747267 68747269 68747265 68747267 68747269;}
@list l2:level1
	{mso-level-tab-stop:64.35pt;
	mso-level-number-position:left;
	margin-left:64.35pt;
	text-indent:-18.0pt;}
@list l3
	{mso-list-id:1383210822;
	mso-list-type:simple;
	mso-list-template-ids:62162524;}
@list l3:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;
	font-family:"Times New Roman";}
@list l4
	{mso-list-id:1628194852;
	mso-list-type:hybrid;
	mso-list-template-ids:345382630 -1450833310 68747265 68747269 68747265 68747267 68747269 68747265 68747267 68747269;}
@list l4:level1
	{mso-level-number-format:bullet;
	mso-level-style-link:список;
	mso-level-text:\F0B7;
	mso-level-tab-stop:64.35pt;
	mso-level-number-position:left;
	margin-left:64.35pt;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l4:level2
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:100.35pt;
	mso-level-number-position:left;
	margin-left:100.35pt;
	text-indent:-18.0pt;
	font-family:Symbol;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Обычная таблица";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-bidi-font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
table.MsoTableGrid
	{mso-style-name:"Сетка таблицы";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	border:solid windowtext 1.0pt;
	mso-border-alt:solid windowtext .5pt;
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-border-insideh:.5pt solid windowtext;
	mso-border-insidev:.5pt solid windowtext;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman CYR";
	mso-bidi-font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
  <o:regrouptable v:ext="edit">
   <o:entry new="1" old="0"/>
   <o:entry new="2" old="1"/>
   <o:entry new="3" old="0"/>
   <o:entry new="4" old="0"/>
   <o:entry new="5" old="0"/>
   <o:entry new="6" old="0"/>
   <o:entry new="7" old="0"/>
   <o:entry new="8" old="0"/>
   <o:entry new="9" old="0"/>
   <o:entry new="10" old="9"/>
   <o:entry new="11" old="0"/>
   <o:entry new="12" old="0"/>
   <o:entry new="13" old="12"/>
   <o:entry new="14" old="0"/>
  </o:regrouptable>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=RU style='tab-interval:36.0pt' background="back.gif">

<div class=Section1>

<h2>6.3. Линейные списки</h2>

<p class=a3><span style='mso-spacerun:yes'> </span>«Щас по списку и пойдем...»</p>

<p class=a3><b style='mso-bidi-font-weight:normal'><a name="m1">М.Жванецкий «Ставь птицу</b>».</p>

<p class=a>Реальное многообразие структур данных базируется всего на двух
основных способах получения адреса хранимого элемента: вычисление (массив) и
хранение (указатель). До сих пор основной компонентой структуры данных являлся
массив (обычный массив, массив указателей). Если же попытаться построить
структуру данных, исходя только из указателей, то получается цепочка
(последовательность) элементов, содержащих указатели друг на друга. В простейшем
случае она может быть линейной (список), в более сложных случаях – ветвящейся
(деревья, графы). Итак, <b style='mso-bidi-font-weight:normal'><a name="m2">список –
линейная последовательность элементов, каждый из которых содержит указатели
(ссылается) на своих соседей.<o:p></o:p></b></p>

<p class=a4 align=center style='text-align:center'>
<img border="0" src="Images/063-01.gif" width="525" height="150"><br
style='mso-ignore:vglayout' clear=ALL>
<b style='mso-bidi-font-weight:normal'><a name="m3">рис. 63-1. Списковая структура<o:p></o:p></b><p></p>

<p class=a>Сразу же отметим основную особенность: физическое размещение в
памяти элементов списка не имеет никакого значения, все определяется наличием
ссылок на него в других элементах и извне. У массива всегда есть «начало». У
списка по определению отсутствует фиксированная привязка к памяти. Перечислим
основные <b style='mso-bidi-font-weight:normal'><a name="m4">релятивистские </b>свойства
списка<span lang=EN-US style='mso-ansi-language:EN-US'>:<o:p></o:p></span></p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>элемент списка доступен в программе через
указатель. «Смысл» этого указателя отражает функциональное назначение элемента
списка в программе: первый, последний, текущий, предыдущий, новый и т.п.. Между
указателем и элементом списка имеется такая же взаимосвязь, как между индексом
в массиве и элементом массива;</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>в программе список задается посредством <b
style='mso-bidi-font-weight:normal'>заголовка – </b>указателя на первый элемент
списка;</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>порядок следования элементов определяется
последовательностью связей между элементами. Изменение порядка следования
элементов (вставка, удаление) осуществляются изменением переустановкой
указателей на соседние элементы.</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><b style='mso-bidi-font-weight:normal'><a name="m5">логический
(порядковый) номер </b>элемента списка также задается его естественной
нумерацией в цепочке элементов;</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>список является <b style='mso-bidi-font-weight:
normal'><a name="m6">структурой данных<span style='mso-spacerun:yes'>  </span>с
последовательным доступом. </b>Для получения <span lang=EN-US style='mso-ansi-language:
EN-US'>n</span>-го по счету элемента необходимо последовательно пройти по
цепочке от элемента, на который имеется указатель (например, от заголовка);</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>список удобен для использования именно как <i
style='mso-bidi-font-style:normal'>динамическая структура данных</i>: элементы
списка обычно создаются как динамические переменные, а связи между ними
устанавливаются программно (динамически);<b style='mso-bidi-font-weight:normal'><a name="m7"><o:p></o:p></b></p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>список обладает свойством <b style='mso-bidi-font-weight:
normal'><a name="m8">локальности изменений: </b>при вставке/удалении элемента изменения
касаются только текущего и его соседей. Вспомним массив: при вставке/удалении
его элементов происходит физическое перемещение (сдвиг) всех элементов от
текущего до конца.<b style='mso-bidi-font-weight:normal'><a name="m9"><o:p></o:p></b></p>

<p class=a>Отсюда следует, что преимущества списков проявляются в таких
структурах данных, где операции изменения порядка превалируют над операциями
доступа и поиска.</p>

<h3>Определение списка и работа с ним</h3>

<p class=a>Повторим все то же самое, но уже в терминах языка программирования.
Начнем с элемента списка. Он является составной (структурированной) переменной,
содержащей собственно хранимые данные и указатели на соседей:</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=a0>struct <span style='mso-tab-count:1'>   </span>elem<span
style='mso-tab-count:3'>                             </span>// определение структурированного
типа</p>

<p class=a0>{<span style='mso-tab-count:1'>           </span>int<span
style='mso-spacerun:yes'>     </span>value;<span style='mso-tab-count:2'>                   </span>//
значение элемента (хранимые данные)</p>

<p class=a0><span style='mso-tab-count:1'>            </span>elem *next;<span
style='mso-tab-count:2'>                    </span>// единственный указатель <b
style='mso-bidi-font-weight:normal'>или</b></p>

<p class=a0><span style='mso-tab-count:1'>            </span>elem *next,*pre<span
lang=EN-US style='mso-ansi-language:EN-US'>v</span>; <span style='mso-tab-count:
1'>           </span>// два указателя <b style='mso-bidi-font-weight:normal'><a name="m10">или</b></p>

<p class=a0><span style='mso-tab-count:1'>            </span>elem *links[10]; <span
style='mso-tab-count:2'>             </span>// ограниченное количество
указателей (не больше 10) <b style='mso-bidi-font-weight:normal'><a name="m11">или</b></p>

<p class=a0><span style='mso-tab-count:1'>            </span>elem **plinks; <span
style='mso-tab-count:2'>               </span>// произвольное количество
указателей (внешний МУ)</p>

<p class=a0><span style='mso-tab-count:1'>            </span>};</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=a>Переменная такого типа может содержать одну, две, не более 10 и
произвольное (динамический массив) количество указателей на аналогичные
переменные. Но это еще не список, а описание его составляющих (элементов) как
типа данных. Из него следует только, что каждый из них ссылается на <b
style='mso-bidi-font-weight:normal'>аналогичные </b>элементы. Никак нельзя
определить ни количества таких переменных в структуре данных, ни характера
связей между ними (последовательный, циклический, произвольный). Следовательно,
конкретный тип структуры данных (линейный список, дерево, граф) зависит от
функций, которые с ней работают. Значит, структура данных «зашита» не столько в
этом определении, сколько в алгоритмах, работающих с этим типом. </p>

<p class=a><span style='mso-spacerun:yes'> </span>Списковые структуры данных
обычно являются динамическими по двум причинам: </p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span style='mso-spacerun:yes'> </span>сами
переменные таких структур создаются как динамические переменные, то есть
количество их может быть произвольным; </p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span style='mso-spacerun:yes'> </span>количество
связей между переменными и их характер также определяются динамически в
процессе работы программы. </p>

<p class=a4>В зависимости от связей списки бывают следующих видов: </p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span
style='mso-spacerun:yes'> </span>односвязные - каждый элемент списка имеет
указатель на следующий; </p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>двусвязные - каждый элемент списка имеет
указатель на следующий и на предыдущий элементы; </p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>циклические - первый и последний элементы списка
ссылаются друг на друга и цепочка представляет собой кольцо. </p>

<p class=a>Отсюда же следует, что «обычные» (разомкнутые) списки имеют в
качестве ограничителя последовательности <b style='mso-bidi-font-weight:normal'><a name="m12"><span
lang=EN-US style='mso-ansi-language:EN-US'>NULL</span></b>-указатель.
Соответственно, возможет случай пустого списка, в котором заголовок - указатель
на первый элемент также содержит значение <b style='mso-bidi-font-weight:normal'><a name="m13"><span
lang=EN-US style='mso-ansi-language:EN-US'>NULL</span></b>.</p>

<p class=a>Оставим пока за кадром вопрос, а как же создаются списки. Ибо в
динамической структуре данных мы попадаем в замкнутый круг: чтобы работать со
структурой данных, необходимо ее создать, а при создании нужно знать
технологические приемы работы с ней.</p>

<p class=a>Итак, положим, что список существует. Работа со списками
осуществляется исключительно через указатели. Каждый из них может перемещаться
по списку (переустанавливаться с элемента на элемент), приобретая одну из
смысловых интерпретаций – указатель на <b style='mso-bidi-font-weight:normal'><a name="m14">первый,
последний, текущий, предыдущий, новый </b>и т.п. элементы списка. Здесь
уместной является аналогия с массивом и индексом в нем, но при условии, что
индекс меняется линейно, а не произвольно, а текущее количество заполненных
элементов в массиве задано отдельной переменной. В результате получим следующие
выражения, определяющие базовые действия со списком.</p>

<p class=a4><o:p>&nbsp;</o:p></p>

<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0 width=546
 style='width:409.4pt;border-collapse:collapse;border:none;mso-border-alt:solid windowtext .5pt;
 mso-padding-alt:0cm 5.4pt 0cm 5.4pt;mso-border-insideh:.5pt solid windowtext;
 mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes'>
  <td width=158 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4><o:p>&nbsp;</o:p></p>
  </td>
  <td width=208 valign=top style='width:155.95pt;border:solid windowtext 1.0pt;
  border-left:none;mso-border-left-alt:solid windowtext .5pt;mso-border-alt:
  solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a0 align=center style='text-align:center'><b style='mso-bidi-font-weight:
  normal'><a name="m15">Список<o:p></o:p></b></p>
  </td>
  <td width=180 valign=top style='width:134.65pt;border:solid windowtext 1.0pt;
  border-left:none;mso-border-left-alt:solid windowtext .5pt;mso-border-alt:
  solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a0 align=center style='text-align:center'><b style='mso-bidi-font-weight:
  normal'><a name="m16">Массив<o:p></o:p></b></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:1;height:20.65pt'>
  <td width=158 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:20.65pt'>
  <p class=a4><span style='font-size:10.0pt;font-family:Arial'>Определение<o:p></o:p></span></p>
  </td>
  <td width=208 valign=top style='width:155.95pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt;height:20.65pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>struct list {int
  val; <o:p></o:p></span></p>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>list *next,
  *prev; };<o:p></o:p></span></p>
  </td>
  <td width=180 valign=top style='width:134.65pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt;height:20.65pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>int A[100];<o:p></o:p></span></p>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>int n;<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:2;height:16.95pt'>
  <td width=158 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:16.95pt'>
  <p class=a4><span style='font-size:10.0pt;font-family:Arial'>Пустой список<o:p></o:p></span></p>
  </td>
  <td width=208 valign=top style='width:155.95pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt;height:16.95pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>list *ph=NULL; <o:p></o:p></span></p>
  </td>
  <td width=180 valign=top style='width:134.65pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt;height:16.95pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>n=0;<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:3'>
  <td width=158 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4><span style='font-size:10.0pt;font-family:Arial'>Первый<o:p></o:p></span></p>
  </td>
  <td width=208 valign=top style='width:155.95pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>list *p;<span
  style='mso-spacerun:yes'>   </span>p=ph; <o:p></o:p></span></p>
  </td>
  <td width=180 valign=top style='width:134.65pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>Int i=0;<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:4'>
  <td width=158 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4><span style='font-size:10.0pt;font-family:Arial'>Следующий</span><span
  lang=EN-US style='font-size:10.0pt;font-family:Arial;mso-ansi-language:EN-US'><o:p></o:p></span></p>
  </td>
  <td width=208 valign=top style='width:155.95pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>p-&gt;next<o:p></o:p></span></p>
  </td>
  <td width=180 valign=top style='width:134.65pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>i+1<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:5'>
  <td width=158 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4><span style='font-size:10.0pt;font-family:Arial'>Предыдущий<o:p></o:p></span></p>
  </td>
  <td width=208 valign=top style='width:155.95pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>p-&gt;prev<o:p></o:p></span></p>
  </td>
  <td width=180 valign=top style='width:134.65pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>i-1<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:6'>
  <td width=158 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=left style='text-align:left'><span lang=EN-US
  style='font-size:10.0pt;font-family:Arial;mso-ansi-language:EN-US'>К</span><span
  style='font-size:10.0pt;font-family:Arial'> следующему<o:p></o:p></span></p>
  </td>
  <td width=208 valign=top style='width:155.95pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>p=p-&gt;next<o:p></o:p></span></p>
  </td>
  <td width=180 valign=top style='width:134.65pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>i++<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:7'>
  <td width=158 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=left style='text-align:left'><span style='font-size:10.0pt;
  font-family:Arial'>К предыдущему<o:p></o:p></span></p>
  </td>
  <td width=208 valign=top style='width:155.95pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>p=p-&gt;prev<o:p></o:p></span></p>
  </td>
  <td width=180 valign=top style='width:134.65pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>i--<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:8'>
  <td width=158 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4><span style='font-size:10.0pt;font-family:Arial'>Просмотр<o:p></o:p></span></p>
  </td>
  <td width=208 valign=top style='width:155.95pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>for (p=ph;
  p!=NULL; p=p-&gt;next)<o:p></o:p></span></p>
  <p class=a0><span style='mso-spacerun:yes'>         </span><span lang=EN-US
  style='mso-ansi-language:EN-US'>…p-&gt;val…<o:p></o:p></span></p>
  </td>
  <td width=180 valign=top style='width:134.65pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>for (i=0;
  i&lt;n; i++)<o:p></o:p></span></p>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
  style='mso-spacerun:yes'>        </span>…A[i]…<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:9'>
  <td width=158 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 align=left style='text-align:left'><span style='font-size:10.0pt;
  font-family:Arial'>Проверка<span style='mso-spacerun:yes'>  </span>на последний</span><span
  lang=EN-US style='font-size:10.0pt;font-family:Arial;mso-ansi-language:EN-US'><o:p></o:p></span></p>
  </td>
  <td width=208 valign=top style='width:155.95pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>p-&gt;next
  ==NULL<o:p></o:p></span></p>
  </td>
  <td width=180 valign=top style='width:134.65pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>i==n-1<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:10'>
  <td width=158 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4><span style='font-size:10.0pt;font-family:Arial'>К последнему<o:p></o:p></span></p>
  </td>
  <td width=208 valign=top style='width:155.95pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>for (p=ph;
  p-&gt;next!=NULL; <o:p></o:p></span></p>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>p=p-&gt;next);</span></p>
  </td>
  <td width=180 valign=top style='width:134.65pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>i=n-1<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:11'>
  <td width=158 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4><span style='font-size:10.0pt;font-family:Arial'>Новый<o:p></o:p></span></p>
  </td>
  <td width=208 valign=top style='width:155.95pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>list *q = new
  list;<o:p></o:p></span></p>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>q-&gt;val = v;<o:p></o:p></span></p>
  </td>
  <td width=180 valign=top style='width:134.65pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>int v;<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:12'>
  <td width=158 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4><span style='font-size:10.0pt;font-family:Arial'>Включить последним<o:p></o:p></span></p>
  </td>
  <td width=208 valign=top style='width:155.95pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>for (p=ph;
  p-&gt;next!=NULL; <o:p></o:p></span></p>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>p=p-&gt;next);<o:p></o:p></span></p>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>q-&gt;next=NULL;
  p-&gt;next=q;<o:p></o:p></span></p>
  </td>
  <td width=180 valign=top style='width:134.65pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>A[n++]=v;<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:13;mso-yfti-lastrow:yes'>
  <td width=158 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4><span style='font-size:10.0pt;font-family:Arial'>Включить первым<o:p></o:p></span></p>
  </td>
  <td width=208 valign=top style='width:155.95pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>q-&gt;next=ph;
  ph=q;<o:p></o:p></span></p>
  </td>
  <td width=180 valign=top style='width:134.65pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>for (i=n;
  i&gt;0; i--) A[i]=A[i-1];<o:p></o:p></span></p>
  <p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>A[0]=v;<o:p></o:p></span></p>
  </td>
 </tr>
</table>

<p class=a>Основная операция при работе с элементами массива – «стрелочка»
выполняется в контексте: <b style='mso-bidi-font-weight:normal'><a name="m17">указатель на
элемент-&gt;поле элемента списка. <o:p></o:p></b></p>

<p class=a>Собственно сам список представляет собой множество связанных
указателями переменных. В простейшем случае, например, для создания тестовых
данных, можно использовать <b style='mso-bidi-font-weight:normal'><a name="m18">статический
список:</b> его элементы представляет собой обычные структурированные переменные,
связи между ними инициализируются транслятором, и вся структура данных
«зашивается» в программный код.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>struct list { int
val; list *next; } a={0,NULL}, b={1,&amp;a}, c={2,&amp;b}, *ph = &amp;c;<o:p></o:p></span></p>

<p class=a4>Заметим, что по условиям определения переменных, список создается
«хвостом вперед». В двусвязном списке проблема «ссылок вперед» на еще
неопределенные элементы решается так: сначала переменные объявляются, как
внешние (см. 5.7), а потом определяются и инициализируются.</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>struct list2 { int
val; list *next,*prev;};<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>extern</span><span
lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:EN-US'>list</span>2
<span lang=EN-US style='mso-ansi-language:EN-US'>a</span>,<span lang=EN-US
style='mso-ansi-language:EN-US'>b</span>,<span lang=EN-US style='mso-ansi-language:
EN-US'>c</span>;<span style='mso-tab-count:3'>                                   </span>//
предварительное объявление элементов списка</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>list</span>2 <span
lang=EN-US style='mso-ansi-language:EN-US'>a</span>={0,<b style='mso-bidi-font-weight:
normal'><a name="m19">&amp;</b><b style='mso-bidi-font-weight:normal'><a name="m20"><span lang=EN-US
style='mso-ansi-language:EN-US'>b</span></b>,<span lang=EN-US style='mso-ansi-language:
EN-US'>NULL</span>}, <span lang=EN-US style='mso-ansi-language:EN-US'>b</span>={1,<b
style='mso-bidi-font-weight:normal'>&amp;</b><b style='mso-bidi-font-weight:
normal'><a name="m21"><span lang=EN-US style='mso-ansi-language:EN-US'>c</span></b>,&amp;<span
lang=EN-US style='mso-ansi-language:EN-US'>a</span>}, <span lang=EN-US
style='mso-ansi-language:EN-US'>c</span>={2,<span lang=EN-US style='mso-ansi-language:
EN-US'>NULL</span>&amp;<span lang=EN-US style='mso-ansi-language:EN-US'>b</span>},
*<span lang=EN-US style='mso-ansi-language:EN-US'>ph</span> = &amp;<span
lang=EN-US style='mso-ansi-language:EN-US'>c</span>; // выделены «ссылки
вперед»</p>

<p class=a4><o:p>&nbsp;</o:p></p>

<p class=a>Список может содержать ограниченное количество элементов, взятых из
массива. Связи устанавливаются динамически, то есть программой. Такой вариант
используется, когда заданное количество элементов образуют несколько различных
динамических структур (например, очередей), переходя из одной в другую. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=a0>list<span style='mso-tab-count:1'>        </span>A[100],*ph;<span
style='mso-tab-count:2'>                    </span>// Создать список элементов,</p>

<p class=a0>for (i=0; i&lt;99; i++) {<span style='mso-tab-count:1'>                    </span>// размещенных в статическом массиве</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>A</span>[<span lang=EN-US style='mso-ansi-language:
EN-US'>i</span>].<span lang=EN-US style='mso-ansi-language:EN-US'>next</span> =
<span lang=EN-US style='mso-ansi-language:EN-US'>A</span>+<span lang=EN-US
style='mso-ansi-language:EN-US'>i</span>+1;<span style='mso-tab-count:1'>          </span>//
Адрес следующего <b style='mso-bidi-font-weight:normal'><a name="m22">вычисляется<o:p></o:p></b></p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>A[i].val = i;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>}<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>A[99].next = NULL;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>ph = &amp;A[0];<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=a>В <b style='mso-bidi-font-weight:normal'><a name="m23">динамическом списке</b>
элементы являются динамическими переменными, связи между ними устанавливаются
программно.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=a0>list *p<span lang=EN-US style='mso-ansi-language:EN-US'>h</span>=<span
lang=EN-US style='mso-ansi-language:EN-US'>NULL</span>;<span style='mso-tab-count:
3'>                           </span>// Список пустой</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>for</span> (<span
lang=EN-US style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>i</span>=0; <span lang=EN-US
style='mso-ansi-language:EN-US'>i</span>&lt;<span lang=EN-US style='mso-ansi-language:
EN-US'>n</span>; <span lang=EN-US style='mso-ansi-language:EN-US'>i</span>++){<span
style='mso-tab-count:2'>                  </span>// Создать список из <span
lang=EN-US style='mso-ansi-language:EN-US'>n</span> элементов,</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>list</span> *<span lang=EN-US style='mso-ansi-language:
EN-US'>q</span>=<span lang=EN-US style='mso-ansi-language:EN-US'>new</span><span
lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:EN-US'>list</span>;<span
style='mso-tab-count:2'>              </span>// включая очередной в начало</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>q-&gt;val=i;<span style='mso-tab-count:2'>                        </span>//
</span>списка<span lang=EN-US style='mso-ansi-language:EN-US'>:<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>q</span>-&gt;<span lang=EN-US
style='mso-ansi-language:EN-US'>next</span>=<span lang=EN-US style='mso-ansi-language:
EN-US'>ph</span>;<span style='mso-tab-count:2'>                   </span>// следующий
за новым – бывший первый</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>ph</span>=<span lang=EN-US style='mso-ansi-language:
EN-US'>q</span>; }<span style='mso-tab-count:2'>              </span><span
style='mso-tab-count:1'>            </span>// новый становится первым</p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m24"><o:p>&nbsp;</o:p></b></p>

<p class=a><span style='mso-spacerun:yes'> </span>При модульном проектировании
программы функции, работающие со списком, получают его через формальный
параметр – заголовок списка. </p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------63-01.<span
lang=EN-US style='mso-ansi-language:EN-US'>cpp</span></p>

<p class=a0>//------ формальный параметр - заголовок списка</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>void</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>F</span>1(<span lang=EN-US
style='mso-ansi-language:EN-US'>list</span> *<span lang=EN-US style='mso-ansi-language:
EN-US'>p</span>) {</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>for (; p!=NULL; p=p-&gt;next) puts(p-&gt;val);<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US"> </span>}</p>

<p class=a>Но здесь имеется «подводный камень». Этот<span
style='mso-spacerun:yes'>  </span>вариант полезен только в том случае, когда
первый (по счету) элемент списка остается таковым в процессе работы со списком.
Поскольку заголовок передается по значению (как копия), то его изменение никак
не сказывается на оригинале – истинном заголовке списка в <b style='mso-bidi-font-weight:
normal'><a name="m25"><span lang=EN-US style='mso-ansi-language:EN-US'>main</span></b>. Необходимое
изменение заголовка можно получить другими способами:</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>путем возврата измененного значения заголовка в
виде результата функции;</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>передачей указателя на заголовок<span
style='mso-spacerun:yes'>  </span>списка (указателя<span
style='mso-spacerun:yes'>  </span>на указатель);</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>передачей ссылки на заголовок. Напомним, что
ссылка - неявный указатель, использующий при работе синтаксис объекта, который
«отображается» на соответствующий ему фактический параметр.</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------<span
lang=EN-US style='mso-ansi-language:EN-US'>63</span>-02.<span lang=EN-US
style='mso-ansi-language:EN-US'>cpp</span></p>

<p class=a0>//---- включение в начало списка с изменением заголовка</p>

<p class=a0>// Вариант 1. Измененный указатель возвращается</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>list</span> *<span lang=EN-US style='mso-ansi-language:
EN-US'>Ins</span>1(<span lang=EN-US style='mso-ansi-language:EN-US'>list</span>
*<span lang=EN-US style='mso-ansi-language:EN-US'>ph</span>, <span lang=EN-US
style='mso-ansi-language:EN-US'>int</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>v</span>)</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>{ list *q=new list;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>q-&gt;val=v; q-&gt;next=ph; ph=q;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>return</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>ph</span>; }</p>

<p class=a0>//----------------------------------------------------------------------</p>

<p class=a0>// Вариант 2. Используется указатель на заголовок</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>void Ins2(list **pp, int v)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>{ list *q=new list;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>q-&gt;val=v; q-&gt;next=*pp; *pp=q; }<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US"> </span>//----------------------------------------------------------------------</p>

<p class=a0><span style='mso-spacerun:yes'> </span>// Вариант 3. Используется
ссылка на указатель</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>void</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>Ins</span>3(<span lang=EN-US
style='mso-ansi-language:EN-US'>list</span> *&amp;<span lang=EN-US
style='mso-ansi-language:EN-US'>pp</span>, <span lang=EN-US style='mso-ansi-language:
EN-US'>int</span><span lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:
EN-US'>v</span>)</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>{ list *q=new list;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>q-&gt;val=v; q-&gt;next=pp; pp=q; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>//----------- Пример
вызова-----------------------------------------<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>void main(){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>list *ph=NULL;<span
style='mso-spacerun:yes'>                     </span><span style='mso-tab-count:
1'>     </span>// пустой список<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>ph</span>=<span lang=EN-US style='mso-ansi-language:
EN-US'>Ins</span>1(<span lang=EN-US style='mso-ansi-language:EN-US'>ph</span>,5);<span
style='mso-spacerun:yes'>                           </span><span
style='mso-tab-count:1'>           </span>// сохранить новый заголовок</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>Ins</span>2(&amp;<span lang=EN-US
style='mso-ansi-language:EN-US'>ph</span>,66);<span
style='mso-spacerun:yes'>                           </span>// передается адрес заголовка</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>Ins</span>3(<span lang=EN-US style='mso-ansi-language:
EN-US'>ph</span>,7); }<span style='mso-spacerun:yes'>                        
</span><span style='mso-tab-count:1'>     </span>// передается ссылка на
заголовок</p>

<p class=a0><b style='mso-bidi-font-weight:normal'><a name="m26"><o:p>&nbsp;</o:p></b></p>

<h3>Изменение порядка следования</h3>

<p class=a>Наибольшие проблемы при работе со списками вызывают действия по
изменению порядка следования элементов. Это осуществляется путем переустановки
указателей в элементах списка и производится<span style='mso-spacerun:yes'> 
</span>операциями присваивания указателей. Для понимания их сущности, прежде
всего, надо четко разделять понятия «указатель» и «указуемый объект», а также учитывать
асимметричный характер операции присваивания (см. <b style='mso-bidi-font-weight:
normal'><a name="m27">1.4</b>). Можно воспользоваться различными содержательными
интерпретациями этого процесса.</p>

<p class=a4><span style='font-family:"Times New Roman"'>1. </span><b
style='mso-bidi-font-weight:normal'>Графическая интерпретация</b><span
style='font-family:"Times New Roman"'>: изменение порядка следования состоит в
«соединении стрелкой» связываемых элементов:</span></p>
<p class=a4>&nbsp;</p>

<p class=a4 align=center style='text-align:center'>
<img border="0" src="Images/063-02.gif" width="389" height="159"><p></p>

<p class=a4 align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><a name="m28">рис. 63-2. Графическая интерпретация переустановки связей<o:p></o:p></b></p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>в левой части операции присваивания должно
находиться обозначение ячейки, в которую заносится новое значение указателя<span
style='font-family:"Times New Roman"'> – ссылка на нее (2)</span>. При этом она
должна быть достижима через имеющиеся рабочие указатели. На рисунке этому
соответствует цепочка операций <b style='mso-bidi-font-weight:normal'><a name="m29"><span
lang=EN-US style='mso-ansi-language:EN-US'>q</span>-&gt;pre<span lang=EN-US style='mso-ansi-language:
EN-US'>v</span>-&gt;next;<o:p></o:p></b></p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>в правой части операции присваивания должно
находиться обозначение ячейки, из которой берется значение указателя элемента,
на который ссылаются <span style='font-family:"Times New Roman"'>(1) </span>-
на рисунке<span style='font-family:"Times New Roman"'> - </span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:"Times New Roman";
mso-ansi-language:EN-US'>p</span><span
style='font-family:"Times New Roman"'>.</span></b></p>

<p class=a1 style='margin-left:0cm;text-indent:0cm;mso-list:none;tab-stops:
42.55pt'>2. <b style='mso-bidi-font-weight:normal'><a name="m30">Адресная интерпретация</b><span
style='font-family:"Times New Roman"'>. </span>Содержимым указателя является
адрес указуемой переменной. Тогда элементам списка можно присвоить условные
адреса – целые значения и в этом свете рассматривать операции копирования
значений указателей.</p>

<p class=a1 style='text-indent:0cm;mso-list:none;tab-stops:42.55pt'><o:p>&nbsp;</o:p><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:"Times New Roman CYR";
mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:"Times New Roman";
mso-ansi-language:RU;mso-fareast-language:RU;mso-bidi-language:AR-SA'><br
clear=all style='mso-special-character:line-break;page-break-before:always'>
<img border="0" src="Images/063-03.gif" width="403" height="158"></span></p>
<p align="center"><b style='mso-bidi-font-weight:normal'><a name="m31">рис. 63-3. Адресная интерпретация переустановки
связей<o:p></o:p></b></p>
</p>

<p class=a4>3. <b style='mso-bidi-font-weight:normal'><a name="m32">Смысловая интерпретация</b>.
При работе со списками каждый указатель имеет определенный смысл – ссылка на первый,
текущий, следующий, предыдущий и т.п. элементы списка. Поля<span
style='mso-spacerun:yes'>  </span><b style='mso-bidi-font-weight:normal'><a name="m33"><span
lang=EN-US style='mso-ansi-language:EN-US'>prev</span>, <span lang=EN-US style='mso-ansi-language:
EN-US'>next</span><span lang=EN-US> </span> </b>также интерпретируются как
указатели на следующий и предыдущий в элементе списка, доступном через указатель.
Присваивание указателей однозначно можно однозначно выразить в словесной
формулировке. Например, последовательность действий по включению нового
элемента (указатель <b style='mso-bidi-font-weight:normal'><a name="m34"><span lang=EN-US
style='mso-ansi-language:EN-US'>q</span></b>) в двусвязный список перед текущим
(указатель <b style='mso-bidi-font-weight:normal'><a name="m35"><span lang=EN-US
style='mso-ansi-language:EN-US'>p</span></b>) словесно формулируется так:</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>q</span>-&gt;<span
lang=EN-US style='mso-ansi-language:EN-US'>next</span>=<span lang=EN-US
style='mso-ansi-language:EN-US'>p</span>;<span style='mso-tab-count:3'>                                </span>//
<u>следующий для нового = текущий</u></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>q</span>-&gt;<span
lang=EN-US style='mso-ansi-language:EN-US'>prev</span>=<span lang=EN-US
style='mso-ansi-language:EN-US'>p</span>-&gt;<span lang=EN-US style='mso-ansi-language:
EN-US'>prev</span>; <span style='mso-tab-count:1'>                       </span>// <u>предыдущий для нового =
предыдущий</u> </p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>if</span> (<span
lang=EN-US style='mso-ansi-language:EN-US'>p</span>-&gt;<span lang=EN-US
style='mso-ansi-language:EN-US'>prev</span> == <span lang=EN-US
style='mso-ansi-language:EN-US'>NULL</span>)<span style='mso-tab-count:1'>                   </span>// <u>для текущего</u></p>

<p class=a0><span style='mso-tab-count:1'>            </span>ph = q;<span
style='mso-tab-count:2'>              </span><span style='mso-tab-count:1'>            </span>//
включение в начало списка</p>

<p class=a0>else<span style='mso-tab-count:3'>                              </span><span
style='mso-tab-count:1'>            </span>// включение в середину</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>p</span>-&gt;pre<span lang=EN-US
style='mso-ansi-language:EN-US'>v</span>-&gt;next = q;<span style='mso-tab-count:
1'>          </span>// <u>следующий для предыдущего <span
style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>=</span>
новый</u></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>p</span>-&gt;<span
lang=EN-US style='mso-ansi-language:EN-US'>prev</span>=<span lang=EN-US
style='mso-ansi-language:EN-US'>q</span>;<span style='mso-tab-count:3'>                                 </span>//
<u>предыдущий<span style='font-family:"Courier New";mso-bidi-font-family:
"Times New Roman"'> </span>для текущего = новый</u></p>

<h3>Односвязный список</h3>

<p class=a>Простейший случай: элемент списка содержит единственный указатель на
следующий (<b style='mso-bidi-font-weight:normal'><a name="m36"><span lang=EN-US
style='mso-ansi-language:EN-US'>next</span></b>), что создает «улицу с
односторонним движением» и позволяет двигаться по списку только в одном
направлении. </p>

<p class=a4>Операций включения и исключения элемента в начало списка вообще
реализуются парой присваиваний, для включения в конец списка требуется
дополнительный цикл просмотра списка до последнего элемента. Поэтому с помощью
односвязного списка удобно представлять такие структуры данных, как стек и
очередь: операции извлечения из очереди и стека реализуются через исключение из
списка первого элемента, операция включения в стек соответствует включению
элемента в начло списка, а включение в очередь – добавлению в конец.</p>

<p class=MsoPlainText><o:p>&nbsp;</o:p></p>

<p class=a0>//---------------------------------------------------------63-03.cpp</p>

<p class=a0>// Представление очереди и стека односвязным списком</p>

<p class=a0>// Включение в конец списка - помещение в очередь</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void In(list
*&amp;ph,int v){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>list *q=new list;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>q-&gt;next=NULL; <o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:1; mso-ansi-language:EN-US' lang="EN-US">            </span>q-&gt;val=v;</p>

<p class=a0><span style='mso-tab-count:1'>            </span>if (ph==NULL)
ph=q;<span style='mso-tab-count:2'>                   </span>// список пуст -
единственный</p>

<p class=a0><span style='mso-tab-count:1'>            </span>else {<span
style='mso-tab-count:4'>                                        </span>// цикл
поиска конца списка</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
lang=EN-US style='mso-ansi-language:EN-US'>for (list *p=ph; p-&gt;next!=NULL;
p=p-&gt;next);<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:2; mso-ansi-language:EN-US' lang="EN-US">                        </span>p-&gt;next=q;<span
style='mso-tab-count:2'>                    </span>// следующий за последним -
новый</p>

<p class=a0><span style='mso-tab-count:1'>            </span>}}</p>

<p class=a0>// Включение в начало списка - помещение в стек</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void PUSH(list
*&amp;ph,int v){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>list *q=new list;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>q-&gt;next=NULL; <o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:1; mso-ansi-language:EN-US' lang="EN-US">            </span>q-&gt;val=v;</p>

<p class=a0><span style='mso-tab-count:1'>            </span>q-&gt;next=ph;<span
style='mso-tab-count:3'>                               </span>// следующий за
новым - бывший первый</p>

<p class=a0><span style='mso-tab-count:1'>            </span>ph=q; }<span
style='mso-tab-count:4'>                                      </span>// новый
теперь первый</p>

<p class=a0>// Исключение из очереди и стека – удалени первого элемента списка</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>int Out(list
*&amp;ph){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>if (ph==NULL) return -1;<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:1; mso-ansi-language:EN-US' lang="EN-US">            </span>list *q=ph;<span
style='mso-tab-count:3'>                                 </span>// запомнить
текущий</p>

<p class=a0><span style='mso-tab-count:1'>            </span>ph=ph-&gt;next;<span
style='mso-tab-count:3'>                             </span>// сдвинуться к
следующему<span style='mso-tab-count:1'>    </span></p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>int v=q-&gt;val;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>delete q;<span style='mso-tab-count:
3'>                                    </span>// </span>удалить<span
style='mso-ansi-language:EN-US'> </span>текущий<span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>return v;}</span></p>

<p class=a>Чтобы не «мотаться все время» к концу односвязного списка, можно
добавить еще один указатель на последний элемент, и тогда операция помещения в
очередь аналогично реализуется парой присваиваний.</p>

<p class=a><o:p>&nbsp;</o:p></p>

<p class=a0>//---------------------------------------------------------63-03.cpp</p>

<p class=a0>// Представление очереди односвязным списком</p>

<p class=a0>// Указатели на первый и последний элементы</p>

<p class=a0>// list<span style='mso-tab-count:1'>     </span>*PH[2];<span
style='mso-spacerun:yes'>  </span>-<span style='mso-spacerun:yes'>  
</span>заголовок очереди, [0]-первый, [1]-последний</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void<span
style='mso-tab-count:1'>       </span>In(list *ph[], int v){<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:1; mso-ansi-language:EN-US' lang="EN-US">            </span>list *p= new list;<span
style='mso-tab-count:2'>             </span><span style='mso-tab-count:1'>            </span>//
создать элемент списка;</p>

<p class=a0><span style='mso-tab-count:1'>            </span>p-&gt;val=v;<span
style='mso-tab-count:3'>                                   </span>// и
заполнить его</p>

<p class=a0><span style='mso-tab-count:1'>            </span>p-&gt;next=NULL; <span
style='mso-tab-count:3'>                         </span>// новый элемент -
последний<span style='mso-tab-count:2'>                </span></p>

<p class=a0><span style='mso-tab-count:1'>            </span>if (ph[0]==NULL) ph[0]=ph[1]=p;<span
style='mso-tab-count:1'>  </span>// включение в пустую очередь</p>

<p class=a0><span style='mso-tab-count:1'>            </span>else {<span
style='mso-tab-count:4'>                                        </span>//
включение за последним элементом<span style='mso-tab-count:1'>  </span></p>

<p class=a0><span style='mso-tab-count:2'>                        </span>ph[1]-&gt;next
= p;<span style='mso-tab-count:1'>             </span>//
следующий за последним = новый</p>

<p class=a0><span style='mso-tab-count:2'>                        </span>ph[1]
= p;<span style='mso-tab-count:2'>                      </span>// последний =
новый </p>

<p class=a0><span style='mso-tab-count:1'>            </span>}}</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>int<span style='mso-tab-count:1'>         </span>Out(list *ph[]){ <span
style='mso-tab-count:2'>               </span><span style='mso-tab-count:1'>            </span>//
извлечение из очереди </p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>if (ph[0]==NULL) return -1; <span
style='mso-tab-count:1'>         </span>// </span>очередь<span
style='mso-ansi-language:EN-US'> </span>пуста<span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p class=a0>
<span
style='mso-tab-count:1; mso-ansi-language:EN-US' lang="EN-US">            </span>list *q=ph[0];<span
style='mso-tab-count:3'>                              </span>// исключение
первого элемента</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>ph[0]=q-&gt;next;<span style='mso-tab-count:
2'>               </span><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>if</span> (<span lang=EN-US
style='mso-ansi-language:EN-US'>ph</span>[0]==<span lang=EN-US
style='mso-ansi-language:EN-US'>NULL</span>) ph[1]=NULL;<span style='mso-tab-count:
1'>     </span>// элемент единственный</p>

<p class=a0><span style='mso-tab-count:1'>            </span>int v = q-&gt;val;</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>delete q; return v; }<o:p></o:p></span></p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a>В операциях, связанных с элементами в середине списка возникает
проблема – недоступность предыдущего элемента. Если необходимо изменить его
содержимое, то потребуются некоторые ухищрения, например:</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>дополнительный цикл, пробегающий от начала
списка до предыдущего элемента для найденного, например <b style='mso-bidi-font-weight:
normal'><a name="m37"><span lang=EN-US style='mso-ansi-language:EN-US'>for</span>(</b><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>q</span>=<span lang=EN-US
style='mso-ansi-language:EN-US'>ph</span>; </b><b style='mso-bidi-font-weight:
normal'><a name="m38"><span lang=EN-US style='mso-ansi-language:EN-US'>q</span>-&gt;</b><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>next</span>!=<span
lang=EN-US style='mso-ansi-language:EN-US'>p</span>; </b><b style='mso-bidi-font-weight:
normal'><a name="m39"><span lang=EN-US style='mso-ansi-language:EN-US'>q</span>=</b><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>q</span>-&gt;<span
lang=EN-US style='mso-ansi-language:EN-US'>next</span>)</b>;</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>явное использование цикла с указателем на элемент,
предыдущий по отношению к проверяемому, например <b style='mso-bidi-font-weight:
normal'><a name="m40"><span lang=EN-US style='mso-ansi-language:EN-US'>for</span>(</b><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>p</span>=<span lang=EN-US
style='mso-ansi-language:EN-US'>ph</span>-&gt;</b><b style='mso-bidi-font-weight:
normal'><a name="m41"><span lang=EN-US style='mso-ansi-language:EN-US'>next</span>; </b><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>p</span>-&gt;<span
lang=EN-US style='mso-ansi-language:EN-US'>next</span>!=<span lang=EN-US style='mso-ansi-language:
EN-US'>NULL</span> &amp;&amp; <span
lang=EN-US style='mso-ansi-language:EN-US'>p</span>-&gt;<span lang=EN-US style='mso-ansi-language:
EN-US'>next</span>-&gt;<span
lang=EN-US style='mso-ansi-language:EN-US'>val</span>!=</b><b style='mso-bidi-font-weight:
normal'><a name="m42"><span lang=EN-US style='mso-ansi-language:EN-US'>x</span>; </b><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>p</span>=<span lang=EN-US
style='mso-ansi-language:EN-US'>p</span>-&gt;</b><b style='mso-bidi-font-weight:
normal'><a name="m43"><span lang=EN-US style='mso-ansi-language:EN-US'>next</span>)</b>. Обратите
внимание, что такой цикл начинается со второго элемента, а значит, требуется
отдельная проверка для первого элемента списка;</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>использование дополнительного указателя на
предыдущий элемент, запоминающего свое значение при переходе к следующему (см. <b
style='mso-bidi-font-weight:normal'>2.4</b>).</p>

<p class=a>Последний вариант используется при вставке с сохранением порядка.
Вставка происходит <b style='mso-bidi-font-weight:normal'><a name="m44">перед очередным,
большим заданного, </b>что требует коррекции предыдущего элемента списка.</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------63-04.<span
lang=EN-US style='mso-ansi-language:EN-US'>cpp</span></p>

<p class=a0>//--- Включение в односвязный с сохранением порядка</p>

<p class=a0>// <span lang=EN-US style='mso-ansi-language:EN-US'>pr</span> -
указатель на предыдущий элемент списка</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>void InsSort(list *&amp;ph, int v)<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US"> </span>{ <span lang=EN-US style='mso-ansi-language:
EN-US'>list</span> *<span lang=EN-US style='mso-ansi-language:EN-US'>q</span>
,*<span lang=EN-US style='mso-ansi-language:EN-US'>pr</span>,*<span lang=EN-US
style='mso-ansi-language:EN-US'>p</span>;<span style='mso-tab-count:3'>                          </span>//
перед переходом к следующему указатель на текущий</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>q</span>=<span lang=EN-US style='mso-ansi-language:
EN-US'>new</span><span lang=EN-US> </span><span lang=EN-US style='mso-ansi-language:
EN-US'>list</span>; <span lang=EN-US style='mso-ansi-language:EN-US'>q</span>-&gt;<span
lang=EN-US style='mso-ansi-language:EN-US'>val</span>=<span lang=EN-US
style='mso-ansi-language:EN-US'>v</span>;<span style='mso-tab-count:2'>                  </span>//
запоминается как указатель на предыдущий</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>for ( p=ph,<b style='mso-bidi-font-weight:normal'><a name="m45">pr=NULL</b>;
p!=NULL &amp;&amp; v&gt;p-&gt;val; <b style='mso-bidi-font-weight:normal'><a name="m46">pr=p</b>,p=p-&gt;next);<o:p></o:p></span></p>

<p class=a0><span style='mso-spacerun:yes' lang="EN-US"> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>if</span> (<span lang=EN-US
style='mso-ansi-language:EN-US'>pr</span>==<span lang=EN-US style='mso-ansi-language:
EN-US'>NULL</span>)<span style='mso-spacerun:yes'>                            
</span>// включение перед первым</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span
style='mso-spacerun:yes'>  </span><span lang=EN-US style='mso-ansi-language:
EN-US'>{ q-&gt;next=ph; ph=q; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>else</span><span
style='mso-spacerun:yes'>                                  </span><span
style='mso-tab-count:1'>       </span>// иначе после предыдущего</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span
style='mso-spacerun:yes'>  </span>{ <span lang=EN-US style='mso-ansi-language:
EN-US'>q</span>-&gt;<span lang=EN-US style='mso-ansi-language:EN-US'>next</span>=<span
lang=EN-US style='mso-ansi-language:EN-US'>p</span>;<span
style='mso-spacerun:yes'>           </span><span style='mso-tab-count:1'>     </span>//
следующий для нового = текущий</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span
style='mso-spacerun:yes'>  </span><b style='mso-bidi-font-weight:normal'><a name="m47"><span
lang=EN-US style='mso-ansi-language:EN-US'>pr</span>-&gt;<span lang=EN-US style='mso-ansi-language:
EN-US'>next</span>=<span lang=EN-US
style='mso-ansi-language:EN-US'>q</span>;</b> }}<span
style='mso-spacerun:yes'>          </span><span style='mso-tab-count:1'>   </span>//
<b style='mso-bidi-font-weight:normal'><a name="m48">следующий для предыдущего = новый</b></p>

<p class=a>Дополнительная проверка «крайних ситуаций» показывает, что фрагмент,
производящий поиск места включения, корректно работает и в случае пустого
списка (производит включение перед первым).</p>

<p class=a>При сортировке массивов происходит физическое перемещение
упорядочиваемых элементов (например, обмен значений). В списках принята другая
технология, основанная на том, что вместо перемещения элементов происходит
переустановка<span style='mso-spacerun:yes'>  </span>их связей, что создает
«иллюзию» изменения порядка. Поэтому создание и уничтожение динамических переменных
– элементов списка не требуется. Вместо этого в программе имеются два списка –
входной и выходной, и в процессе сортировки элементы перемещаются из из одного
в другой путем «переброски» указателей. В случае вставок внешний цикл
поочередно выбирает элементы входного списка, а внутренний – включает их в
выходной список с сохранением порядка. Заметим, что программа составлена
достаточно формально из перечисленных операций со списками.</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------63-05.cpp</p>

<p class=a0>//--- Сортировка односвязного списка вставками</p>

<p class=a0><span style='mso-spacerun:yes'> </span>list *sort(list *ph)<span
style='mso-spacerun:yes'>       </span><span style='mso-tab-count:3'>                            </span>//
функция возвращает заголовок нового списка</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>{ list *q, *out, *p , *pr;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>out = NULL;<span
style='mso-spacerun:yes'>                               </span></span><span
style='mso-tab-count:1'>           </span><span lang=EN-US style='mso-ansi-language:
EN-US'><span style='mso-tab-count:1'>            </span>// </span>выходной<span
style='mso-ansi-language:EN-US'> </span>список<span style='mso-ansi-language:
EN-US'> </span>пуст<span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>while</span> (<span lang=EN-US
style='mso-ansi-language:EN-US'>ph</span> !=<span lang=EN-US style='mso-ansi-language:
EN-US'>NULL</span>)<span style='mso-spacerun:yes'>                     </span><span style='mso-tab-count:1'>             </span>// пока не пуст входной список</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span
style='mso-spacerun:yes'>  </span><span lang=EN-US style='mso-ansi-language:
EN-US'>{ q = ph; ph = ph-&gt;next;<span style='mso-spacerun:yes'>           
</span><span style='mso-tab-count:1'>            </span>// </span>исключить<span
style='mso-ansi-language:EN-US'> </span>очередной<span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:5'>                                                            </span>//
</span>поиск<span style='mso-ansi-language:EN-US'> </span>места<span
style='mso-ansi-language:EN-US'> </span>включения<span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span>for ( p=out,pr=NULL; p!=NULL </span>&amp;&amp; q-&gt;val&gt;p-&gt;val;
pr=p,p=p-&gt;next);</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span
style='mso-spacerun:yes'>  </span>if (pr==NULL)<span
style='mso-spacerun:yes'>                          </span>// включение перед первым</p>

<p class=a0><span style='mso-tab-count:2'>                        </span><span
style='mso-spacerun:yes'>   </span><span lang=EN-US style='mso-ansi-language:
EN-US'>{ q-&gt;next=out; out=q; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span>else<span style='mso-spacerun:yes'>                                 
</span><span style='mso-tab-count:1'>      </span>// </span>иначе<span
style='mso-ansi-language:EN-US'> </span>после<span style='mso-ansi-language:
EN-US'> </span>предыдущего<span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:2'>                        </span><span
style='mso-spacerun:yes'>   </span>{ q-&gt;next=p; pr-&gt;next=q; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span></span>}</p>

<p class=a0><span style='mso-spacerun:yes'> </span>return out; }</p>

<h3>Двусвязный список</h3>

<p class=a7><span class=a8><span style='mso-bidi-font-family:"Times New Roman"'>Двусвязный
список позволяет двигаться по цепочке элементов в обоих направлениях, поскольку
доступны следующий и предыдущий элементы. Расплачиваться</span></span> за это
приходится увеличением количества операций над указателями. </p>

<p class=a>Здесь уместно напомнить о такой проблеме проектирования как <b
style='mso-bidi-font-weight:normal'>крайние ситуации </b>(см. <b
style='mso-bidi-font-weight:normal'>3.6</b>). Необходимо рассматривать все возможные
качественные комбинации входных данных и все варианты структур данных, с
которыми может столкнуться программа. Применительно к двусвязному списку при
удалении выбранного элемента возможны следующие варианты:</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>пустой список<span lang=EN-US style='mso-ansi-language:
EN-US'>;</span></p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>единственный элемент<span lang=EN-US
style='mso-ansi-language:EN-US'>;</span></p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>удаление первого элемента<span lang=EN-US
style='mso-ansi-language:EN-US'>;</span></p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>удаление последнего элемента<span lang=EN-US
style='mso-ansi-language:EN-US'>;</span></p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>удаление из середины.</p>

<p class=a>«Пропуск» одного из вариантов при проектировании приводит к
появлению «мерцающих» ошибок, проявляющихся не постоянно, а периодически в
зависимости от входных данных и порядка выполнения операций. Чтобы учесть эти
варианты при уже написанном программном коде, нужно рассмотреть «историческое»
поведение программы на каждом из этих вариантов:</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>написанный код может корректно отрабатывать
крайнюю ситуацию, она «вписывается» в существующий программный код;</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>крайняя ситуация не отрабатывается программным
кодом, в него вносится дополнительное проверочное условие с «заплаткой»,
обеспечивающей правильное поведение программы.</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------63-06.cpp</p>

<p class=a0>//-------- Удаление элемента списка по заданному логическому номеру</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>list *Remove(list *&amp;pp, int n)<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US"> </span>{ list *q;<span style='mso-tab-count:
5'>                                                            </span>//
Указатель на текущий элемент</p>

<p class=a0><span style='mso-spacerun:yes'> </span>for (q = pp; q!=NULL
&amp;&amp; n!=0; q = q-&gt;next, n--);<span style='mso-tab-count:1'>   </span>//
Отсчитать n -ый</p>

<p class=a0><span style='mso-spacerun:yes'> </span>if (q==NULL) return NULL;<span
style='mso-tab-count:3'>                                  </span>// нет
элемента с таким номером</p>

<p class=a0><span style='mso-spacerun:yes'> </span>if (<b style='mso-bidi-font-weight:
normal'><a name="m49">q-&gt;prev</b>==NULL)<span style='mso-tab-count:4'>                                           </span>//
удаление первого -</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span style='mso-tab-count:
1'>           </span>pp=q-&gt;next;<span style='mso-tab-count:4'>                                           </span>//
коррекция заголовка</p>

<p class=a0><span style='mso-spacerun:yes'> </span>else <span style='mso-tab-count:
1'>    </span>q-&gt;prev-&gt;next = q-&gt;next;<span style='mso-tab-count:2'>                        </span>//
следующий для предыдущего<span style='mso-spacerun:yes'>  </span>=</p>

<p class=a0><span style='mso-tab-count:6'>                                                                        </span>//
следующий за текущим</p>

<p class=a0><span style='mso-spacerun:yes'> </span>if (<b style='mso-bidi-font-weight:
normal'><a name="m50">q-&gt;next</b>!=NULL)<span style='mso-tab-count:4'>                                            </span>//
удаление не последнего -</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span style='mso-tab-count:
1'>           </span>q-&gt;next-&gt;prev = q-&gt;prev;<span style='mso-tab-count:
2'>             </span>// предыдущий для следующего<span
style='mso-spacerun:yes'>  </span>=<span style='mso-tab-count:2'>                   </span></p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>return</span><span lang=EN-US> </span><span
lang=EN-US style='mso-ansi-language:EN-US'>q</span>; }<span style='mso-tab-count:
5'>                                                         </span>// предыдущий
текущего</p>

<p class=a>Витиеватое выражение <b style='mso-bidi-font-weight:normal'><a name="m51">q-&gt;prev-&gt;next=q-&gt;next
</b>производит «выкусывание» текущего элемента из списка путем перекидывания
указателей с предыдущего на следующий, минуя текущий, что в словесной
интерпретации звучит так: «указатель на следующий элемент в предыдущем получает
значение указателя на следующий, взятый из текущего». Не обладающие достаточным
образным воображением могут прибегнуть к соответствующей графической интерпретации.</p>

<p class=a>В разомкнутом списке проверяется наличие следующего и предыдущего
элементов для удаляемого. При отсутствии предыдущего корректируется заголовок
(удаление первого). Все крайние ситуации корректно «вписываются» в программный
код.</p>

<p class=a>Сравнение операций включения с сохранением порядка в односвязный и
двусвязный список дает ожидаемые выводы: сохранять указатель на предыдущий
элемент нет необходимости, но программный код разрастается за счет увеличения
количества переназначаемых указателей и крайних ситуаций.</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0><span
style='mso-spacerun:yes'> </span>//--------------------------------------------------------------63-07<span
lang=EN-US style='mso-ansi-language:EN-US'>.cpp<o:p></o:p></span></p>

<p class=a0><span style='mso-spacerun:yes'> </span>//--------Включение в
двусвязный список с сохранением порядка</p>

<p class=a0><span style='mso-spacerun:yes'> </span>void InsSort(list *&amp;ph,
int v)<span style='mso-tab-count:2'>                    </span>// ссылка на
заголовок</p>

<p class=a0><span style='mso-spacerun:yes'> </span>{ list *q , *p=new list;<span
style='mso-tab-count:3'>                             </span>// новый элемент
списка</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>p-&gt;val = v;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>p-&gt;prev = p-&gt;next = NULL;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span><span style='mso-spacerun:yes'> 
</span></span>if (ph == NULL) {<span style='mso-spacerun:yes'>           
</span><span style='mso-tab-count:1'>          </span><span
style='mso-spacerun:yes'> </span>// включение в пустой список</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span
style='mso-spacerun:yes'>  </span>ph=p; return ;</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span
style='mso-spacerun:yes'>  </span>}<span
style='mso-spacerun:yes'>                             </span><span
style='mso-tab-count:2'>                </span>// поиск места включения - q</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>for</span> (<span lang=EN-US style='mso-ansi-language:
EN-US'>q</span>=<span lang=EN-US style='mso-ansi-language:EN-US'>ph</span>; <span
lang=EN-US style='mso-ansi-language:EN-US'>q</span> !=<span lang=EN-US
style='mso-ansi-language:EN-US'>NULL</span> &amp;&amp; <span lang=EN-US
style='mso-ansi-language:EN-US'>v</span> &gt; <span lang=EN-US
style='mso-ansi-language:EN-US'>q</span>-&gt;<span lang=EN-US style='mso-ansi-language:
EN-US'>val</span>; <span lang=EN-US style='mso-ansi-language:EN-US'>q</span>=<span
lang=EN-US style='mso-ansi-language:EN-US'>q</span>-&gt;<span lang=EN-US
style='mso-ansi-language:EN-US'>next</span>);</p>

<p class=a0><span style='mso-spacerun:yes'> </span>if (q == NULL){<span
style='mso-spacerun:yes'>                     </span><span style='mso-tab-count:
2'>                 </span>// включение в конец списка</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span
style='mso-spacerun:yes'>  </span>for (q=ph; q-&gt;next!=NULL; q=q-&gt;next);</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span
style='mso-spacerun:yes'>  </span><span lang=EN-US style='mso-ansi-language:
EN-US'>p</span>-&gt;<span lang=EN-US style='mso-ansi-language:EN-US'>prev</span>
= <span lang=EN-US style='mso-ansi-language:EN-US'>q</span>;<span
style='mso-tab-count:3'>                             </span>// восстановить
указатель на последний</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0><span style='mso-tab-count:1'>            </span><span
style='mso-spacerun:yes'>  </span><span lang=EN-US style='mso-ansi-language:
EN-US'>q</span>-&gt;<span lang=EN-US style='mso-ansi-language:EN-US'>next</span>
= <span lang=EN-US style='mso-ansi-language:EN-US'>p</span>; <span
style='mso-tab-count:3'>                           </span>// включить перед
текущим </p>

<p class=a0><span style='mso-tab-count:1'>            </span><span
style='mso-spacerun:yes'>  </span>return; }<span
style='mso-spacerun:yes'>                         </span><span
style='mso-tab-count:2'>                      </span></p>

<p class=a0><span style='mso-spacerun:yes'> </span>p-&gt;next=q;<span
style='mso-tab-count:4'>                                           </span>//
следующий за новым = текущий</p>

<p class=a0><span style='mso-spacerun:yes'> </span>p-&gt;prev=q-&gt;prev;<span
style='mso-tab-count:3'>                                   </span>// предыдущий
нового = предыдущий текущего</p>

<p class=a0><span style='mso-spacerun:yes'> </span>if (q-&gt;prev == NULL)<span
style='mso-spacerun:yes'>               </span><span style='mso-tab-count:2'>               </span>//
включение в начало списка</p>

<p class=a0><span style='mso-tab-count:1'>            </span>ph = p;</p>

<p class=a0><span style='mso-spacerun:yes'> </span>else<span
style='mso-spacerun:yes'>                               </span><span style='mso-tab-count:
3'>                                  </span>// включение в середину</p>

<p class=a0><span style='mso-tab-count:1'>            </span>q-&gt;prev-&gt;next
= p;<span style='mso-tab-count:2'>                      </span>// следующий за
предыдущим = новый</p>

<p class=a0><span style='mso-spacerun:yes'> </span>q-&gt;prev=p;<span
style='mso-tab-count:4'>                                            </span>//
предыдущий текущего = новый</p>

<p class=a0><span style='mso-spacerun:yes'> </span>}</p>

<p class=MsoPlainText><o:p>&nbsp;</o:p></p>

<h3>Двусвязный циклический список</h3>

<p class=1>Любовь - кольцо, а у кольца</p>

<p class=1>Начала нет и нет конца!</p>

<p class=1><b style='mso-bidi-font-weight:normal'><a name="m52">Песня из к/ф «Женщины»<o:p></o:p></b></p>

<p class=a>Циклический список<b style='mso-bidi-font-weight:normal'><a name="m53"> </b>связывает
крайние элементы списка между собой, образуя кольцевую структуру. На практике
«замкнутость» списка является удобным технологическим решением, позволяющим
исключить постоянные проверки на «первый» и «последний». Т.е. логически
последовательность элементов для внешнего пользователя остается линейной. Особенности
такого списка:</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><![endif]>поле <b style='mso-bidi-font-weight:normal'><a name="m54">next</b>
последнего элемента ссылается на первый, а поле <b style='mso-bidi-font-weight:
normal'><a name="m55">pre</b><b style='mso-bidi-font-weight:normal'><a name="m56"><span lang=EN-US
style='mso-ansi-language:EN-US'>v</span></b> первого – на последний элемент
списка;</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>единственный элемент списка ссылается сам на
себя (<b style='mso-bidi-font-weight:normal'><a name="m57">q-&gt;next=q</b> и<span
style='mso-spacerun:yes'> </span><b style='mso-bidi-font-weight:normal'><a name="m58">q-&gt;pre<span lang=EN-US style='mso-ansi-language:
EN-US'>v</span> =q</b>);</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><![endif]>операции включение элемента в начало и конец списка идентичны (перед первым и
после последнего) за исключением того, что при включении в начало меняется
заголовок.<p></p>

<p class=a4 align=center style='text-align:center'>
<img border="0" src="Images/063-04.gif" width="384" height="137"></p>
<p class=a4 align=center style='text-align:center'>
<b style='mso-bidi-font-weight:
normal'><a name="m59">рис. 63-4. Двусвязный циклический список<o:p></o:p></b></p>

<p class=a>Цикл просмотра списка завершается, когда<span
style='mso-spacerun:yes'>  </span>указатель<span style='mso-spacerun:yes'> 
</span>текущего <span style='mso-spacerun:yes'> </span>элемента возвращается на
начало списка. Это удобно сделать в цикле с постусловием.</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>list</span> *<span
lang=EN-US style='mso-ansi-language:EN-US'>p</span>=<span lang=EN-US
style='mso-ansi-language:EN-US'>ph</span>;</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>do</span><span
style='mso-tab-count:1'>         </span>{</p>

<p class=a0><span style='mso-tab-count:1'>            </span>// тело цикла для
текущего элемента – <span lang=EN-US style='mso-ansi-language:EN-US'>p</span></p>

<p class=a0><span style='mso-tab-count:1'>            </span><span lang=EN-US
style='mso-ansi-language:EN-US'>p=p-&gt;next;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>            </span>} while (p!=ph);</span></p>

<p class=a>Доступность первого и последнего элемента циклического списка через
заголовок позволяет реализовать на нем стек и очередь, не используя циклов
движения по списку.<span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoPlainText><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------63-08.cpp</p>

<p class=a0>//--- Очередь на циклическом списке</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>void In(list
*&amp;ph, int v){<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US"> </span>list *q = new list;<span
style='mso-spacerun:yes'>                </span><span style='mso-tab-count:
1'>       </span>// Новый элемент как единственный</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>q-&gt;val = v; q-&gt;next = q-&gt;prev = q;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>if (ph == NULL) { ph=q; return; } // </span>Список<span
style='mso-ansi-language:EN-US'> </span>пуст<span lang=EN-US style='mso-ansi-language:
EN-US'> - </span>единственный<span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US"> </span>q-&gt;next = ph;<span
style='mso-spacerun:yes'>                      </span><span style='mso-tab-count:
1'>      </span>// следующий за новым = первый</p>

<p class=a0><span style='mso-spacerun:yes'> </span>q-&gt;prev = ph-&gt;prev;<span
style='mso-tab-count:2'>                   </span>// предыдущий для нового =
последний</p>

<p class=a0><span style='mso-spacerun:yes'> </span>ph-&gt;prev-&gt;next = q;<span
style='mso-tab-count:2'>                   </span>// следующий для последнего =
новый</p>

<p class=a0><span style='mso-spacerun:yes'> </span>ph-&gt;prev = q; }<span
style='mso-tab-count:3'>                          </span>// предыдущий для
первого = новый</p>

<p class=a0><o:p>&nbsp;</o:p></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>int Out(list
*&amp;ph){<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>  </span>if (ph==NULL) return -1;<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US">  </span>int v=ph-&gt;val;</p>

<p class=a0><span style='mso-spacerun:yes'>  </span>list *q=ph;<span
style='mso-tab-count:3'>                               </span>// Запомнить
текущий</p>

<p class=a0><span style='mso-spacerun:yes'>  </span>ph=ph-&gt;next;<span
style='mso-tab-count:3'>                           </span>// Перейти на
следующий<span style='mso-tab-count:1'>         </span></p>

<p class=a0><span style='mso-spacerun:yes'>  </span>if (ph-&gt;next==ph)
ph=NULL;<span style='mso-tab-count:1'>      </span>// Единственный стал пустой</p>

<p class=a0><span style='mso-spacerun:yes'> 
</span>q-&gt;next-&gt;prev=q-&gt;prev;<span style='mso-tab-count:1'> </span>//
Элемент сам себя &quot;выкусывает&quot;</p>

<p class=a0><span style='mso-spacerun:yes'>  </span><span lang=EN-US
style='mso-ansi-language:EN-US'>q-&gt;prev-&gt;next=q-&gt;next;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>  </span>delete q;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>  </span>return v;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>}<o:p></o:p></span></p>

<p class=a>Все перечисленные особенности можно увидеть в примере включения
нового элемента с сохранением упорядоченности. Поиск места включения
завершается обнаружением первого элемента, большего заданного, либо
возвращением на начало списка. В последней ситуации (вставка в конец списка)
место вставки перед текущим элементом также является корректным: вставка перед
первым – есть вставка после последнего. </p>

<p class=MsoPlainText><o:p>&nbsp;</o:p></p>

<p class=a0>//------------------------------------------------------63-09.cpp</p>

<p class=a0>//--- Включение в циклический список с сохранением порядка</p>

<p class=a0><span style='mso-spacerun:yes'> </span>list *InsSort(list *ph, int
v)<span style='mso-tab-count:2'>                       </span>// Функция
возвращает новый заголовок</p>

<p class=a0><span style='mso-spacerun:yes'> </span>{ list *q = new list;<span
style='mso-spacerun:yes'>              </span><span style='mso-tab-count:2'>                   </span>//
Новый элемент как единственный</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>q-&gt;val = v; q-&gt;next = q-&gt;prev = q;<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US"> </span>if (ph == NULL) return q;<span
style='mso-spacerun:yes'>          </span><span style='mso-tab-count:2'>              </span>//
Список пуст вернуть новый</p>

<p class=a0><span style='mso-spacerun:yes'> </span>list *p = ph;</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span
style='mso-spacerun:yes'>  </span>do { if (v &lt; p-&gt;val) break;<span
style='mso-spacerun:yes'>   </span><span style='mso-tab-count:1'>        </span>//
Место вставки перед первым,</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span
style='mso-spacerun:yes'>  </span>p=p-&gt;next;<span
style='mso-spacerun:yes'>                    </span><span style='mso-tab-count:
1'>          </span>// большим заданного, иначе -</p>

<p class=a0><span style='mso-tab-count:1'>            </span><span
style='mso-spacerun:yes'>  </span>} while (p!=ph);<span style='mso-tab-count:
3'>                         </span>// перед первым в списке (после последнего)</p>

<p class=a0><span style='mso-spacerun:yes'> </span>q-&gt;next = p;<span
style='mso-spacerun:yes'>                       </span><span style='mso-tab-count:
2'>                  </span>// следующий за новым = текущий</p>

<p class=a0><span style='mso-spacerun:yes'> </span>q-&gt;prev = p-&gt;prev;<span
style='mso-tab-count:3'>                                 </span>// предыдущий
для нового = предыдущий текущего</p>

<p class=a0><span style='mso-spacerun:yes'> </span>p-&gt;prev-&gt;next = q;<span
style='mso-tab-count:3'>                                 </span>// следующий
для предыдущего = новый</p>

<p class=a0><span style='mso-spacerun:yes'> </span>p-&gt;prev = q;<span
style='mso-tab-count:4'>                                          </span>//
предыдущий для текущего = новый</p>

<p class=a0><span style='mso-spacerun:yes'> </span><b style='mso-bidi-font-weight:
normal'><a name="m60">if ( ph-&gt;val &gt; v) ph=q;</b><span
style='mso-spacerun:yes'>            </span><span style='mso-tab-count:2'>              </span>//
<b style='mso-bidi-font-weight:normal'><a name="m61">включение перед первым -<o:p></o:p></b></p>

<p class=a0><span style='mso-spacerun:yes'> </span>return ph; }<span
style='mso-spacerun:yes'>                       </span><span style='mso-tab-count:2'>                    </span>//
<b style='mso-bidi-font-weight:normal'><a name="m62">коррекция заголовка</b></p>

<p class=a0><span style='font-family:"Courier New"'><o:p></o:p></span></p>

<p class=a>Еще одна крайняя ситуация – вставка перед первым, почти
«вписывается» общую схему. Цикл при этом не делает ни одного шага, и место
вставки выбирается корректно, но после вставки заголовок требуется
переустановить на новый элемент.</p>

<h3>Ошибки при работе со списками</h3>

<p class=a>При отладке программ, работающих со списками, могут возникать
специфические ошибки, связанные некорректной переустановкой связей между
элементами:</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>потеря связности – в результате нарушения
порядка присваиваний (переустановки связей) некоторые элементы списка могут
оказаться недоступными, или «потерянными»;</p>

<p class=a1><![if !supportLists]>
<span style='mso-list:Ignore; font-family:Symbol; mso-fareast-font-family:Symbol; mso-bidi-font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>топологические ошибки - нарушается линейность
списка, «список перестает быть списком», а становится топологически более
сложной<span style='mso-spacerun:yes'>  </span>структурой, на которой поведение
программы становится непредсказуемым.</p>

<p class=a>Аналогичный эффект можно получить, если забыть скорректировать заголовок
списка, если операция касается первого элемента. Например, если в сортировке
односвязного списка вставками (63-04.<span lang=EN-US style='mso-ansi-language:
EN-US'>cpp</span>) забыть присваивание указателя при вставке перед первым (<b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>out</span>=<span lang=EN-US
style='mso-ansi-language:EN-US'>q</span></b>), то в такой ситуации очередной элемент
входного списка просто будет потерян. Этот эффект будет «мерцающим»: теряться
будут некоторые элементы со значением меньше всех предыдущих во входном списке
(например, 6,7,<b style='mso-bidi-font-weight:normal'><a name="m63">3</b>,8,4,<b
style='mso-bidi-font-weight:normal'>2</b>,6,5). Но программа все-таки будет
работать. В случаях более серьезного нарушения топологии она может зациклиться
или вообще «упасть».<b style='mso-bidi-font-weight:normal'><a name="m64"><o:p></o:p></b></p>

<a name="lr10"><h3 style='mso-outline-level:3'>Лабораторный практикум</h3>

<a name="m65">
<p class="a"><b>Замечания по выполняемым операциям. Объединение -</b> результат 
содержит элементы из двух исходных структур данных (СД), элемент, присутствующий 
в обеих СД, включается в одном экземпляре. <b>Пересечение - </b>результат 
содержит элементы, одновременно присутствующие в обеих структурах данных. <b>
Разность - </b>результат содержит элементы из первой СД, которые отсутствуют во 
второй.</p>
<p class="a4" style="text-indent: -20.25pt; margin-left: 55.7pt">1.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Объединение двух односвязных списков.</p>
<p class="a4" style="text-indent: -20.25pt; margin-left: 55.7pt">2.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Пересечение двух односвязных списков.</p>
<p class="a4" style="text-indent: -20.25pt; margin-left: 55.7pt">3.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Разность двух односвязных списков.</p>
<p class="a4" style="text-indent: -20.25pt; margin-left: 55.7pt">4.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Объединение двух двусвязных списков.</p>
<p class="a4" style="text-indent: -20.25pt; margin-left: 55.7pt">5.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Пересечение двух двусвязных списков.</p>
<p class="a4" style="text-indent: -20.25pt; margin-left: 55.7pt">6.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Разность двух двусвязных списков.</p>
<p class="a4" style="text-indent: -20.25pt; margin-left: 55.7pt">7.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Объединение двух циклических списков.</p>
<p class="a4" style="text-indent: -20.25pt; margin-left: 55.7pt">8.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Пересечение двух циклических списков.</p>
<p class="a4" style="text-indent: -20.25pt; margin-left: 55.7pt">9.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Разность двух циклических списков.</p>
<p class="a4" style="text-indent: -20.25pt; margin-left: 55.7pt">10.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;
</span>Сортировка двусвязного списка выбором.</p>
<p class="a4" style="text-indent: -20.25pt; margin-left: 55.7pt">11.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;
</span>Сортировка двусвязного списка вставками.</p>
<p class="a4" style="text-indent: -20.25pt; margin-left: 55.7pt">12.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;
</span>Сортировка циклического списка выбором.</p>
<p class="a4" style="text-indent: -20.25pt; margin-left: 55.7pt">13.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;
</span>Сортировка циклического списка вставками.</p>
<p class="a4" style="text-indent: -20.25pt; margin-left: 55.7pt">14.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;
</span>Элемент односвязного списка содержит массив указателей на строки. Функция 
создает структуру данных, читает из файла строки и заполняет ее, пока файл не 
кончится. (В конце последнего МУ записывается NULL-указатель).</p>
<p class="a4" style="text-indent: -20.25pt; margin-left: 55.7pt">15.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;
</span>Элемент двусвязного списка содержит массив указателей на строки. Функция 
создает структуру данных, читает из файла строки и заполняет ее, пока файл не 
кончится.(В конце последнего МУ записывается NULL-указатель).</p>
<p class="a4" style="text-indent: -20.25pt; margin-left: 55.7pt">16.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;
</span>Элемент циклического списка содержит массив указателей на строки. Функция 
создает структуру данных, читает из файла строки и заполняет ее, пока файл не 
кончится.(В конце последнего МУ записывается NULL-указатель).</p>
<p class="a4" style="text-indent: -20.25pt; margin-left: 55.7pt">17.<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;
</span>Элемент односвязного списка содержит заголовок односвязного списка 
(двухуровневый список). Функция создает структуру данных, читает из файла строки 
и заполняет ее, пока файл не кончится. (длина списка нижнего уровня задана 
параметром).</p>

<h3>Вопросы без ответов<span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></h3>

<p class=a4><b style='mso-bidi-font-weight:normal'><a name="m66">Пример оформления тестового
задания<span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></b></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=a0>//------------------------------------------------------63-10.cpp</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>struct list { int
val; list *next ,*prev; };<o:p></o:p></span></p>

<p class=a0>void F0(list *&amp;ph, int v)<span style='mso-tab-count:3'>                            </span>//
ph - ссылка на заголовок </p>

<p class=a0><span style='mso-spacerun:yes'> </span>{<span
style='mso-spacerun:yes'>  </span>list *p,*q = new list;<span style='mso-tab-count:
3'>                            </span>// Создать новый элемент списка</p>

<p class=a0><span style='mso-spacerun:yes'>    </span>q-&gt;val=v; q-&gt;next=q-&gt;prev
= NULL; <span style='mso-tab-count:1'>     </span>// По умолчанию -
единственный</p>

<p class=a0><span style='mso-spacerun:yes'>    </span>if (ph == NULL) {ph=p;
return; }<span style='mso-tab-count:1'>            </span>// Список пуст -
включить новый</p>

<p class=a0><span style='mso-spacerun:yes'>    </span><span
lang=EN-US style='mso-ansi-language:EN-US'>for
(p=ph;p-&gt;next!=NULL;p=p-&gt;next);<span style='mso-tab-count:1'>   </span>//
</span>Найти<span style='mso-ansi-language:EN-US'> </span>последний<span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=a0><span style='mso-spacerun:yes'>    </span>p-&gt;next=q;
q-&gt;prev=p; }<span style='mso-tab-count:2'>                      </span>//
Новый - следующий за последним</p>

<p class=a>Программа работает с двусвязным списком. Использование <b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>NULL</span></b>-указателей говорит о том, что список разомкнутый. Создание
в функции динамического элемента списка говорит о том, что речь идет об
операции включения. Цикл просмотра списка до конца «подсказывает», что это
будет включение в конец списка. Это подтверждают финальные присваивания: «следующий
за последним – новый, предыдущий для нового - последний». Соответственно
инициализируется исходный список и пишется цикл просмотра в прямом и обратном
направлениях.</p>

<p class=a><o:p>&nbsp;</o:p></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>//--------------------------------------------------------<o:p></o:p></span></p>

<p class=a0>extern list a,b,c;<span style='mso-spacerun:yes'>                  
</span><span style='mso-tab-count:1'>      </span><span style='mso-tab-count:
1'>            </span><span style='mso-tab-count:1'>            </span>//
Статический двусвязный список</p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'>list a={0,
&amp;b,NULL}, b={1,&amp;c,&amp;a}, c={2, NULL,&amp;b}, *ph = &amp;a;<o:p></o:p></span></p>

<p class=a0>// Включение в конец двусвязного списка</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>void main(){<span style='mso-tab-count:5'>                                                       </span><o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>F0(ph,5); F0(ph,4); F0(ph,6); F0(ph,3);<span
style='mso-spacerun:yes'>                        </span><o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US"> </span>// Просмотр списка в прямом и обратном
направлениях</p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>for (list *q=ph; q-&gt;next!=NULL;
q=q-&gt;next) printf(&quot;%d &quot;,q-&gt;val);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for (; q!=NULL; q=q-&gt;prev) printf(&quot;%d
&quot;,q-&gt;val);<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US"> </span>}</p>

<p class=a>Определите вид списка, «смысл» каждого указателя, выполняемое
действие над списком, напишите вызов функции для статического списка.</p>

<p class=a0><span
style='mso-spacerun:yes; mso-ansi-language:EN-US'> </span></p>

<p class=a0><span style='mso-spacerun:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'>//-----------------------------------------------------63-11.cpp<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>struct list { int val; list *next,*prev; };<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>//-------------------------------------------------------
1<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>int F1(list *p) <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>{ int n;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for (n=0; p!=NULL; p=p-&gt;next, n++);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>return n; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>//-------------------------------------------------------
2<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>list *F2(list *ph, int v)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>{ list *q = new list;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>q-&gt;val = v; q-&gt;next = ph; ph = q;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>return ph; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>//-------------------------------------------------------
3<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>list *F3(list *p, int n) <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>{ for (; n!=0 &amp;&amp; p!=NULL; n--,
p=p-&gt;next);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>return p; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>//-------------------------------------------------------
4<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>list *F4(list *ph, int v)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>{ list *p,*q = new list;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>q-&gt;val = v; q-&gt;next = NULL; <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>if (ph == NULL) return q;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for ( p=ph ; p -&gt;next !=NULL; p =
p-&gt;next);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>p -&gt;next = q; return ph; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>//-------------------------------------------------------
5<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>list *F5(list *ph, int n)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>{ list *q ,*pr,*p; <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for ( p=ph,pr=NULL; n!=0 &amp;&amp; p!=NULL;
n--, pr=p, p =p-&gt;next);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>if (p==NULL) return ph;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>      </span>if (pr==NULL) { q=ph; ph=ph-&gt;next; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>      </span>else { q=p; pr-&gt;next=p-&gt;next; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>delete q; <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>return ph; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>//-------------------------------------------------------
6<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>int F6(list *p)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>{ int n; list *q;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>if (p==NULL) return 0;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for (q = p, p = p-&gt;next, n=1; p !=q;
p=p-&gt;next, n++);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>return n; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>//-------------------------------------------------------
7<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>list *F7(list *p, int v)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>{ list *q;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>q = new list;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>q-&gt;val = v; q-&gt;next = q-&gt;prev = q;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>if (p == NULL) p = q;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>else<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>      </span>{ q-&gt;next = p; q-&gt;prev =
p-&gt;prev;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>      </span>p-&gt;prev-&gt;next = q; p-&gt;prev = q;
p=q;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>      </span>} <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>return p; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>//-------------------------------------------------------
8<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>list *F8(list *ph) <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>{ list *q, *out, *p , *pr;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>out = NULL; <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>while (ph !=NULL) <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>      </span>{ q = ph; ph = ph-&gt;next; <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>      </span>for ( p=out,pr=NULL; p!=NULL &amp;&amp;
q-&gt;val&gt;p-&gt;val; pr=p,p=p-&gt;next); <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>      </span>if (pr==NULL) <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>           </span>{ q-&gt;next=out; out=q; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>      </span>else
<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>           </span>{ q-&gt;next=p; pr-&gt;next=q; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>      </span>} return out; } <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>//-------------------------------------------------------
9<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>list *F9(list *pp, int n)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>{ list *q;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for (q = pp; n!=0; q = q-&gt;next, n--);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>      </span>if (q-&gt;next == q) { delete q; return
NULL; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>if (q == pp) pp = q-&gt;next;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>q-&gt;prev-&gt;next = q-&gt;next;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>q-&gt;next-&gt;prev = q-&gt;prev;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>delete q; return pp; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>//------------------------------------------------------
10<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>list *F10(list *ph, int v)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>{ list *q ,*pr,*p; <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>q=new list; q-&gt;val=v; q-&gt;next=NULL;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>if (ph==NULL) return q;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for ( p=ph,pr=NULL; p!=NULL &amp;&amp;
v&gt;p-&gt;val; pr=p,p=p-&gt;next); <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>      </span>if (pr==NULL) { q-&gt;next=ph; ph=q; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>      </span>else { q-&gt;next=p; pr-&gt;next=q; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>return ph; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>//------------------------------------------------------
11<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>list *F11(list *ph, int v)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>{ list *q = new list;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>q-&gt;val = v; q-&gt;next = q-&gt;prev = q;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>if (ph == NULL) return q;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>list *p = ph;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>      </span>do { <o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>      </span>if (v &lt; p-&gt;val) break;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>      </span>p=p-&gt;next;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>      </span>} while (p!=ph);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>q-&gt;next = p; q-&gt;prev = p-&gt;prev;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>p-&gt;prev-&gt;next = q; p-&gt;prev = q;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>if ( ph-&gt;val &gt; v) ph=q;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>return ph; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>//------------------------------------------------------
12<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>void F12(list *&amp;ph, int v, int n)<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>{ list *q = new list;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>int n0=n;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>q-&gt;val = v; q-&gt;next = q-&gt;prev = q;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>if (ph == NULL) { ph=q; return; }<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>list *p;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>for (p=ph; n--!=0; p=p-&gt;next);<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>q-&gt;next = p; q-&gt;prev = p-&gt;prev;<o:p></o:p></span></p>

<p class=a0><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>p-&gt;prev-&gt;next = q; p-&gt;prev = q;<o:p></o:p></span></p>

<p class=a0>
<span
style='mso-spacerun:yes; mso-ansi-language:EN-US' lang="EN-US"> </span>if ( n0==0) ph=q; }</p>

</div>

</body>

</html>
