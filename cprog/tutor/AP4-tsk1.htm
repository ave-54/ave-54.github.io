<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 11">
<meta name=Originator content="Microsoft Word 11">
<link rel=Edit-Time-Data href="000.files/editdata.mso">
<title>Романов Е.Л. Беседы о программировании</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>student</o:Author>
  <o:Template>bk.dot</o:Template>
  <o:LastAuthor>www.PHILka.RU</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>300</o:TotalTime>
  <o:Created>2008-02-13T22:31:00Z</o:Created>
  <o:LastSaved>2008-02-13T22:31:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>1143</o:Words>
  <o:Characters>6520</o:Characters>
  <o:Company>NSTU_VT</o:Company>
  <o:Bytes>11776</o:Bytes>
  <o:Lines>54</o:Lines>
  <o:Paragraphs>15</o:Paragraphs>
  <o:CharactersWithSpaces>7648</o:CharactersWithSpaces>
  <o:Version>11.6360</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DoNotHyphenateCaps/>
  <w:DrawingGridHorizontalSpacing>6 пт</w:DrawingGridHorizontalSpacing>
  <w:DrawingGridVerticalSpacing>6 пт</w:DrawingGridVerticalSpacing>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:Compatibility>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:WW6BorderRules/>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:AutoSpaceLikeWord95/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
   <w:UseWord97LineBreakingRules/>
   <w:SelectEntireFieldWithStartOrEnd/>
   <w:UseWord2002TableStyleRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	mso-layout-grid-align:none;
	punctuation-wrap:simple;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	mso-layout-grid-align:none;
	punctuation-wrap:simple;
	text-autospace:none;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:Arial;
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:14.0pt;
	mso-bidi-font-weight:normal;}
h2
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	mso-layout-grid-align:none;
	punctuation-wrap:simple;
	text-autospace:none;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:Arial;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-font-weight:normal;
	font-style:italic;
	mso-bidi-font-style:normal;}
h3
	{mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	mso-layout-grid-align:none;
	punctuation-wrap:simple;
	text-autospace:none;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:Arial;
	mso-bidi-font-family:"Times New Roman";
	font-weight:normal;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:center 8.0cm right 16.0cm;
	mso-layout-grid-align:none;
	punctuation-wrap:simple;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:EN-US;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:center 8.0cm right 16.0cm;
	mso-layout-grid-align:none;
	punctuation-wrap:simple;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:EN-US;}
p.a, li.a, div.a
	{mso-style-name:текст;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:36.0pt;
	mso-pagination:widow-orphan;
	mso-layout-grid-align:none;
	punctuation-wrap:simple;
	text-autospace:none;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.a0, li.a0, div.a0
	{mso-style-name:программа;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	mso-layout-grid-align:none;
	punctuation-wrap:simple;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a1, li.a1, div.a1
	{mso-style-name:список;
	mso-style-parent:текст;
	margin-top:6.0pt;
	margin-right:18.45pt;
	margin-bottom:0cm;
	margin-left:35.45pt;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	tab-stops:42.55pt;
	mso-layout-grid-align:none;
	punctuation-wrap:simple;
	text-autospace:none;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.a2, li.a2, div.a2
	{mso-style-name:определение;
	mso-style-parent:текст;
	margin-top:12.0pt;
	margin-right:32.9pt;
	margin-bottom:12.0pt;
	margin-left:35.45pt;
	text-align:justify;
	text-indent:.55pt;
	mso-pagination:widow-orphan;
	mso-layout-grid-align:none;
	punctuation-wrap:simple;
	text-autospace:none;
	border:none;
	mso-border-alt:solid windowtext 1.5pt;
	padding:0cm;
	mso-padding-alt:1.0pt 1.0pt 1.0pt 1.0pt;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:Arial;
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.a3, li.a3, div.a3
	{mso-style-name:эпиграф;
	margin-top:12.0pt;
	margin-right:32.9pt;
	margin-bottom:12.0pt;
	margin-left:5.0cm;
	text-align:justify;
	mso-pagination:widow-orphan;
	mso-layout-grid-align:none;
	punctuation-wrap:simple;
	text-autospace:none;
	font-size:10.0pt;
	font-family:Arial;
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-style:italic;
	mso-bidi-font-style:normal;}
p.a4, li.a4, div.a4
	{mso-style-name:"от края";
	mso-style-parent:текст;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	mso-layout-grid-align:none;
	punctuation-wrap:simple;
	text-autospace:none;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
 /* Page Definitions */
 @page
	{mso-footnote-separator:url("000.files/header.htm") fs;
	mso-footnote-continuation-separator:url("000.files/header.htm") fcs;
	mso-endnote-separator:url("000.files/header.htm") es;
	mso-endnote-continuation-separator:url("000.files/header.htm") ecs;}
@page Section1
	{size:21.0cm 842.0pt;
	margin:33.45pt 42.55pt 72.0pt 89.85pt;
	mso-header-margin:14.2pt;
	mso-footer-margin:31.75pt;
	mso-header:url("000.files/header.htm") h1;
	mso-even-footer:url("000.files/header.htm") ef1;
	mso-footer:url("000.files/header.htm") f1;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:450169596;
	mso-list-type:hybrid;
	mso-list-template-ids:-1016825004 -777771050 68747267 68747269 68747265 68747267 68747269 68747265 68747267 68747269;}
@list l0:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:53.45pt;
	mso-level-number-position:left;
	margin-left:53.45pt;
	text-indent:-18.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Обычная таблица";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="2"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=RU style='tab-interval:36.0pt' background="back.gif">

<h3><b>Расчетно-графическая работа. Классы иерархических структур данных и 
двоичных файлов.</b></h3>
<p class="a">Разработанный класс включает в себя<span lang="en-us">:</span></p>
<ul>
	<li>
	<p class="a">определение динамической структуры данных и необходимых ее 
	размерностей (в виде параметров конструктора)<span lang="en-us">;</span></p>
	</li>
	<li>
	<p class="a">необходимые конструкторы и деструктор (в т.ч. конструктор 
	копирования)<span lang="en-us">;</span></p></li>
	<li>
	<p class="a">метод вывода текущего содержимого структуры данных<span lang="en-us">
	</span>(или двоичного файла)<span lang="en-us"> </span>со вспомогательными 
	данными о текущем состоянии структуры данных (например, индексы в массиве 
	верхнего и нижнего уровней<span lang="en-us">,</span> номера элементов 
	списка и т.д.)<span lang="en-us">;</span></p></li>
	<li>
	<p class="a">указанный в задании метод (переопределенной операции)<span lang="en-us">;</span></p>
	</li>
</ul>
<p class="a">В <span lang="en-us">main-</span>е необходимо проверить 
работоспособность путем генерации шаблона для какого-либо базового типа или 
класса строк. Генерируется случайная последовательность значений (или указателей 
на динамические переменные) и для них выполняется указанный в задании метод. В 
отчете необходимо предоставить описание структур данных, алгоритма указанного 
метода, закомментированные фрагменты кода для существенных частей алгоритма, 
результаты тестирования. Также сдаются и исходные тексты программы. </p>
<ol>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон структуры данных –&nbsp; двухуровневый массив указателей на объекты. 
Массив верхнего уровня - статический, массивы нижнего уровня – динамические, 
размерность – параметр конструктора.&nbsp; Включение указателя на объект с 
сохранением упорядоченности. Если после включения указателя массив заполняется 
полностью, то создается еще один массив указателей, в который переписывается 
половина указателей из старого. Предполагается, что операции сравнения хранимых 
объектов переопределены стандартным образом (в виде операций &lt;,&gt; &nbsp;и т.д..).</p>
	</li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">
	<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7.0pt; font-family: Times New Roman">&nbsp;</span>Шаблон структуры данных –&nbsp; двухуровневый массив указателей на объекты. 
Массив верхнего уровня - статический, массивы нижнего уровня – динамические, 
размерность – параметр конструктора.&nbsp; Включение указателя на объект по заданному 
логическому номеру. Если после включения указателя массив заполняется полностью, 
то создается еще один массив указателей, в который переписывается половина 
указателей из старого. Предполагается, что операции сравнения хранимых объектов 
переопределены стандартным образом (в виде операций &lt;,&gt; &nbsp;и т.д..).</p>
	</li>
	<li>
	<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7.0pt; font-family: Times New Roman">&nbsp;</span>Шаблон структуры данных –&nbsp; двухуровневый массив указателей на объекты. 
Массив верхнего уровня - статический, массивы нижнего уровня – динамические, 
размерность – параметр конструктора.&nbsp; Сортировка выбором - в старой структуре 
данных выбирается указатель на минимальный объект и включается последним в новую 
структуру данных. Новая структура данных замещает старую в том же объекте.</li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">
	<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7.0pt; font-family: Times New Roman">&nbsp;</span>Шаблон структуры данных – двухуровневый массив указателей на объекты с 
типом – параметром шаблона. Массив верхнего уровня – статический. Массивы 
нижнего уровня – динамические, размерность каждого следующего в 2 раза больше 
размерности предыдущего. Метод включения указателя на объект по логическому 
номеру в структуре данных. При переполнении текущего массива указателей нижнего 
уровня последний указатель переносится в следующий массив указателей.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон структуры данных – двухуровневый массив указателей на объекты с 
типом – параметром шаблона. Структура данных упорядочена по возрастанию. Массив 
верхнего уровня – статический. Массивы нижнего уровня – динамические, 
размерность каждого следующего в 2 раза больше размерности. Метод включения 
указателя на объект с сохранением упорядоченности. При переполнении текущего 
массива указателей нижнего уровня последний указатель переносится в следующий 
массив указателей. Предполагается, что операции сравнения хранимых объектов 
переопределены стандартным образом (в виде операций &lt;,&gt; &nbsp;и т.д..).</p>
	</li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон структуры данных – двухуровневый массив указателей на объекты с 
типом – параметром шаблона. Массив верхнего уровня – статический. Массивы 
нижнего уровня – динамические, размерность каждого следующего в 2 раза больше 
размерности предыдущего. Метод добавления указателя последним в структуру 
данных. Предполагается, что для хранимого типа данных переопределена операция
	<span lang="EN-US">ifstream</span> &gt;&gt; <span lang="EN-US">TYPE</span> – загрузки 
содержимого объекта из последовательного потока. Метод загрузки структуры данных 
из последовательного&nbsp; файла с заданным именем, содержащим объекты хранимого 
типа.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон структуры данных – односвязный список, содержащий статический 
массив указателей на объекты. Метод включения указателя на объект по логическому 
номеру в структуре данных. При переполнении текущего массива указателей 
создается новый элемент списка, в который переписывается половина указателей из 
текущего.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон структуры данных – односвязный список, содержащий статический 
массив указателей на объекты. Структура данных упорядочена. Метод включения 
указателя на объект с сохранением упорядоченности. Операция сравнения включаемых 
объектов переопределена.&nbsp; При переполнении текущего массива указателей создается 
новый элемент списка, в который переписывается половина указателей из текущего.</p>
	</li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон структуры данных – односвязный список, содержащий статический 
массив указателей на объекты. Сортировка выбором. В структуре данных выбирается 
указатель на минимальный объект и добавляется в новую структуру данных 
последним. Новая структура данных замещает старую в том же объекте.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон структуры данных – односвязный список, содержащий динамический 
массив указателей на объекты. Размерность массива указателей в каждом 
последующем элементе списка в 2 раза больше, чем в предыдущем. Метод включения 
указателя на объект по логическому номеру в структуре данных. При переполнении 
текущего массива указателей последний указатель переносится в следующий элемент 
списка.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон структуры данных – односвязный список, содержащий динамический 
массив указателей на объекты. Размерность массива указателей в каждом 
последующем элементе списка в 2 раза больше, чем в предыдущем. Структура данных 
упорядочена. Метод включения указателя на объект с сохранением упорядоченности. 
При переполнении текущего массива указателей последний указатель переносится в 
следующий элемент списка. Предполагается, что операции сравнения хранимых 
объектов переопределены стандартным образом (в виде операций &lt;,&gt; &nbsp;и т.д..).</p>
	</li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон структуры данных – односвязный список, содержащий динамический 
массив указателей на объекты. Размерность массива указателей в каждом 
последующем элементе списка в 2 раза больше, чем в предыдущем. Метод добавления&nbsp; 
указателя на объект последним в структуру данных. Предполагается, что для 
хранимого типа данных переопределена операция <span lang="EN-US">ifstream</span> 
&gt;&gt; <span lang="EN-US">TYPE</span> – загрузки содержимого объекта из 
последовательного потока. Метод загрузки структуры данных из последовательного&nbsp; 
файла с заданным именем, содержащим объекты хранимого типа.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон структуры данных – односвязный список, содержащий динамический 
массив указателей на объекты. Размерность массива указателей в каждом 
последующем элементе списка в 2 раза больше, чем в предыдущем. Метод добавления&nbsp; 
указателя на объект последним в структуру данных. Сортировка выбором - в старой 
структуре данных выбирается указатель на минимальный объект и включается 
последним в новую структуру данных. Новая структура данных замещает старую в том 
же объекте.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон структуры данных – двусвязный циклический список, содержащий 
статический массив указателей на объекты. Метод включения указателя на объект по 
логическому номеру в структуре данных. При переполнении текущего массива 
указателей создается новый элемент списка, в который переписывается половина 
указателей из текущего.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон структуры данных – двусвязный циклический список, содержащий 
статический массив указателей на объекты. Структура данных упорядочена. Метод 
включения указателя на объект с сохранением упорядоченности. Операция сравнения 
включаемых объектов переопределена.&nbsp; При переполнении текущего массива 
указателей создается новый элемент списка, в который переписывается половина 
указателей из текущего.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон структуры данных – дерево. Вершина&nbsp; дерева содержит&nbsp; статический 
массив указателей на объекты (ограниченный <span lang="EN-US">NULL</span>-указателем)&nbsp; 
и&nbsp; два указателя на правое&nbsp; и&nbsp; левое&nbsp; поддерево. Значения в дереве не 
упорядочены. Естественная нумерация значений производится путем обхода дерева по 
принципу «левое поддерево - вершина - правое поддерево». Разработать методы&nbsp; 
включения элемента по заданному логическому номеру и получения значения элемента 
по заданному логическому номеру. Если при включении указателя в найденный массив 
последний переполняется, то самый правый указатель включается в правое поддерево 
с относительным номером 0.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон структуры данных – двоичное дерево. Вершина&nbsp; дерева содержит&nbsp; 
статический массив указателей на объекты и&nbsp; два указателя на правое&nbsp; и&nbsp; левое&nbsp; 
поддерево. Значения в дереве (в массиве и в поддеревьях) упорядочены. Если при 
включении указателя в найденный массив последний переполняется, то самый правый 
указатель переносится в правое поддерево.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон структуры данных – дерево. Вершина дерева содержит указатель на 
объект и <span lang="EN-US" style="font-family: Times New Roman">N</span><span lang="EN-US" style="font-family: Times New Roman">
	</span>указателей на потомков. Функция помещает указатели на объекты в дерево 
так, что объекты с меньшим значением располагаются ближе к корню. Если новый 
объект «проходит» через вершину, в которой находится объект с большим значением, 
то новый объект занимает место старого, а алгоритм включения продолжается для 
вытесненного объекта. Метод включения выбирает потомка минимальным количеством 
вершин в поддереве. Предполагается, что операции сравнения хранимых объектов 
переопределены стандартным образом (в виде операций &lt;,&gt; &nbsp;и т.д..).</p>
	</li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm; text-align:left">
	Шаблон структуры данных – дерево. Вершина дерева содержит два указателя на 
	объекты и три&nbsp; указателя на&nbsp; поддеревья.&nbsp; Данные&nbsp; в&nbsp; 
	дереве&nbsp; упорядочены.&nbsp;&nbsp; Метод включения нового значения в&nbsp; 
	дерево&nbsp; с&nbsp; сохранением упорядоченности<br>
	<br>
	<img border="0" src="Images/kr-01.gif" width="252" height="110"></p>
	</li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон структуры 
	данных – двоичное дерево. Вершина&nbsp; дерева содержит&nbsp; статический 
	массив указателей на объекты и&nbsp; два указателя на правое&nbsp; и&nbsp; 
	левое&nbsp; поддерево. Значения в дереве упорядочены. ( объекты в массиве 
	указателей&nbsp;&nbsp; в каждом элементе упорядочены, дерево&nbsp; в&nbsp; 
	целом&nbsp; также&nbsp; упорядочено).&nbsp; Метод&nbsp; включает&nbsp; в&nbsp; 
	дерево&nbsp; указатель на объект&nbsp; с сохранением упорядоченности. . Если 
	при включении указателя в найденный массив последний переполняется, то самый 
	правый указатель переносится в правое поддерево. Предполагается, что 
	операции сравнения хранимых объектов переопределены стандартным образом (в 
	виде операций &lt;,&gt; &nbsp;и т.д..)<br>
	<br>
	<img border="0" src="Images/kr-02.gif" width="368" height="103"></p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">
	<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7.0pt; font-family: Times New Roman">&nbsp;</span>Класс – двоичный файл, производный от 
	<span lang="EN-US">fstream</span>. 
Файл содержит массив указателей на упорядоченные по алфавиту строки, 
представленные записями переменной длины: целый счетчик и последовательность 
символов строки (без 0-ограничителя). Формат файла: в начале – файла, 
размерность массива указателей, текущее количество указателей, адрес (смещение) 
массива указателей в файле. Переопределение операции сложения “объект + 
указатель на строку” – добавление строки в файл с сохранением порядка.
	<span lang="EN-US">Результат – ссылка на первый операнд.</span></p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Класс – двоичный файл, производный от 
	<span lang="EN-US">fstream</span>. 
Файл содержит массив указателей на упорядоченные по алфавиту строки, 
представленные записями переменной длины: целый счетчик и последовательность 
символов строки (без 0-ограничителя). Формат файла: в начале – файла, 
размерность массива указателей, текущее количество указателей, адрес (смещение) 
массива указателей в файле. Операция сортировки выбором: выбирается строка 
минимальной длины и копируется в выходной файл того же формата. Во входном файле 
выбранная строка отмечается значением счетчика «-1».</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Класс – двоичный файл, производный от 
	<span lang="EN-US">fstream</span>. 
Файл содержит массив указателей на упорядоченные по алфавиту строки, 
представленные записями переменной длины: целый счетчик и последовательность 
символов строки (без 0-ограничителя). Формат файла: в начале – файла, 
размерность массива указателей, текущее количество указателей, адрес (смещение) 
массива указателей в файле. Операция сортировки вставками: выбирается очередная 
строка и копируется с сохранением порядка в выходной файл того же формата.</p>
	</li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Класс – двоичный файл, производный от 
	<span lang="EN-US">fstream</span>. 
Файл содержит массив указателей на упорядоченные по алфавиту строки, 
представленные записями переменной длины: целый счетчик и последовательность 
символов строки (без 0-ограничителя). Формат файла: в начале – файла, 
размерность массива указателей, текущее количество указателей, адрес (смещение) 
массива указателей в файле. Двоичный поиск по строке-образцу. Операция 
возвращает номер первой строки, начало которой совпадает с образцом.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Класс – двоичный файл, производный от 
	<span lang="EN-US">fstream</span>. 
Файл содержит массив указателей на строки, представленные записями переменной 
длины: целый счетчик и последовательность символов строки (без 0-ограничителя). 
Формат файла: в начале файла - размерность массива указателей, текущее 
количество указателей, адрес (смещение) массива указателей в файле. Операция 
создания нового двоичного файла и заполнения его из заданного текстового.
	<span lang="EN-US">Параметр – имя текстового файла.</span></p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Класс – двоичный файл, производный от 
	<span lang="EN-US">fstream</span>. 
Файл содержит двоичное дерево, каждая вершина которого содержит строку, 
представленную записью переменной длины: целый счетчик и последовательность 
символов строки (без 0-ограничителя). Формат файла: в начале – файла, указатель 
на корневую вершину. Вершина содержит файловые указатели на правое и левое 
поддеревья и непосредственно за ними строку. Переопределение операции сложения 
“объект + указатель на строку” – добавление строки в файл. <span lang="EN-US">Результат – ссылка на первый операнд.</span></p>
	</li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Класс – двоичный файл, производный от 
	<span lang="EN-US">fstream</span>. 
Файл содержит двоичное дерево, каждая вершина которого содержит статический 
массив целых переменных. Целые в дереве и в массивах упорядочены. Формат файла: 
в начале файла - указатель на корневую вершину. Вершина содержит файловые 
указатели на правое и левое поддеревья,&nbsp; количество заполненных элементов в 
массиве и сам массив. Переопределение операции сложения “объект + целое” – 
добавление целого в файл. Результат – ссылка на первый операнд. Если массив, в 
который необходимо производить включение, заполнен, то самый последний его 
элемент рекурсивно «сносится» в правое поддерево.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Класс – двоичный файл, производный от 
	<span lang="EN-US">fstream</span>. 
Файл содержит двоичное дерево, каждая вершина которого содержит динамический 
массив целых переменных. Целые в дереве и в массивах упорядочены. Формат файла: 
в начале файла - указатель на корневую вершину. Вершина содержит файловые 
указатели на правое и левое поддеревья, количество целых значений во всем 
поддереве, размерность&nbsp; массива сам массив. Переопределение операции&nbsp; 
“объект[целое]” – двоичный поиск заданного значения в файле. <span lang="EN-US">Результат – логический номер элемента в структуре данных.
	</span></p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Класс – двоичный файл, производный от 
	<span lang="EN-US">fstream</span>. 
Файл содержит односвязный список строк в формате записей переменной длины со 
счетчиком.&nbsp; Формат файла: в начале файла – заголовок списка. Элемент списка 
содержит файловый указатель на следующий и саму строку в виде записи переменной 
длины. Функция сортировки выбором. Из входного файла&nbsp; выбирается минимальная 
строка и переписывается последней в выходной файл того же самого формата.
	<span lang="EN-US">Во входном файле выбраные строки помечаются нулевым счетчиком 
длины.</span></p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Класс – двоичный файл, производный от 
	<span lang="EN-US">fstream</span>. 
Файл содержит односвязный список строк в формате записей переменной длины со 
счетчиком.&nbsp; Формат файла: в начале файла – заголовок списка. Элемент списка 
содержит файловый указатель на следующий и саму строку в виде записи переменной 
длины. Операция сортировки вставками: выбирается очередная строка и копируется с 
сохранением порядка в выходной файл того же формата.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Класс – двоичный файл, производный от 
	<span lang="EN-US">fstream</span>. 
Файл содержит двусвязный циклический список строк в формате записей переменной 
длины со счетчиком.&nbsp; Формат файла: в начале файла – заголовок списка. Элемент 
списка содержит файловые указатели на следующий и предыдущий и саму строку в 
виде записи переменной длины. Функция сортировки выбором. Из входного файла&nbsp; 
выбирается минимальная строка и переписывается последней в выходной файл того же 
самого формата. <span lang="EN-US">Во входном файле выбраные строки помечаются 
нулевым счетчиком длины.</span></p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Класс – двоичный файл, производный от 
	<span lang="EN-US">fstream</span>. 
Файл содержит двусвязный циклический список строк в формате записей переменной 
длины со счетчиком.&nbsp; Формат файла: в начале файла – заголовок списка. Элемент 
списка содержит файловые указатели на следующий и предыдущий и саму строку в 
виде записи переменной длины. Операция сортировки вставками: выбирается 
очередная строка и копируется с сохранением порядка в выходной файл того же 
формата.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон – двоичный файл, содержащий двусвязный циклический список 
объектов. Тип хранимого в файле объекта – параметр шаблона. В начале файла 
расположен&nbsp; файловый указатель на первый элемент списка. Элемент списка содержит 
2 файловых указателя на следующий и предыдущий элементы, за которыми следует 
объект. Разработать метод включения объекта по логическому номеру. Использовать 
поэлементную загрузку структуры данных.&nbsp; Для позиционирования в потоке можно 
использовать методы <span lang="EN-US">seekg</span>(<span lang="EN-US">long</span>,<span lang="EN-US">mode</span>) 
и <span lang="EN-US">long tellg</span>(), для хранимого объекта переопределен 
метод <span lang="EN-US">fstream</span> &lt;&lt; <span lang="EN-US">object</span> 
который записывает объект с текущей позиции в открытый двоичный поток и метод
	<span lang="EN-US">fstream</span> &gt;&gt; <span lang="EN-US">object</span>, который 
читает содержимое объекта с текущей позиции открытого потока.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон – двоичный файл, содержащий двусвязный циклический список 
объектов. . Тип хранимого в файле объекта – параметр шаблона. В начале файла 
расположен&nbsp; файловый указатель на первый элемент списка. Элемент списка содержит 
2 файловых указателя на следующий и предыдущий элементы, за которыми следует 
объект. Разработать метод добавления объекта с сохранением упорядоченности. 
Предполагается, что операции сравнения хранимых объектов переопределены 
стандартным образом (в виде операций &lt;,&gt; &nbsp;и т.д..). Использовать поэлементную 
загрузку структуры данных. Для позиционирования в потоке можно использовать 
методы <span lang="EN-US">seekg</span>(<span lang="EN-US">long</span>,<span lang="EN-US">mode</span>) 
и <span lang="EN-US">long tellg</span>(), для хранимого объекта переопределен 
метод <span lang="EN-US">fstream</span> &lt;&lt; <span lang="EN-US">object</span> 
который записывает объект с текущей позиции в открытый двоичный поток и метод
	<span lang="EN-US">fstream</span> &gt;&gt; <span lang="EN-US">object</span>, который 
читает содержимое объекта с текущей позиции открытого потока.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон&nbsp; – двоичный файл, содержащий односвязный список объектов. Тип 
хранимого в файле объекта – параметр шаблона В начале файла расположен&nbsp; файловый 
указатель на первый элемент списка. Элемент списка содержит&nbsp; файловый указатель 
на следующий элемент, за которым следует объект. Разработать метод включения 
объекта по логическому номеру. Использовать поэлементную загрузку структуры 
данных. Для позиционирования в потоке можно использовать методы
	<span lang="EN-US">seekg</span>(<span lang="EN-US">long</span>,<span lang="EN-US">mode</span>) 
и <span lang="EN-US">long tellg</span>(), для хранимого объекта переопределен 
метод <span lang="EN-US">fstream</span> &lt;&lt; <span lang="EN-US">object</span> 
который записывает объект с текущей позиции в открытый двоичный поток и метод
	<span lang="EN-US">fstream</span> &gt;&gt; <span lang="EN-US">object</span>, который 
читает содержимое объекта с текущей позиции открытого потока.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон– двоичный файл, содержащий односвязный&nbsp; список объектов. Тип 
хранимого в файле объекта – параметр шаблона. В начале файла расположен&nbsp; 
файловый указатель на первый элемент списка. Элемент списка содержит файловый 
указатель на следующий элемент, за которым следует объект. Разработать метод 
добавления объекта с сохранением упорядоченности. Предполагается, что операции 
сравнения хранимых объектов переопределены стандартным образом (в виде операций 
&lt;,&gt; &nbsp;и т.д..). Использовать поэлементную загрузку структуры данных. Для 
позиционирования в потоке можно использовать методы <span lang="EN-US">seekg</span>(<span lang="EN-US">long</span>,<span lang="EN-US">mode</span>) 
и <span lang="EN-US">long tellg</span>(), для хранимого объекта переопределен 
метод <span lang="EN-US">fstream</span> &lt;&lt; <span lang="EN-US">object</span> 
который записывает объект с текущей позиции в открытый двоичный поток и метод
	<span lang="EN-US">fstream</span> &gt;&gt; <span lang="EN-US">object</span>, который 
читает содержимое объекта с текущей позиции открытого потока.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон – двоичный файл, содержащий массив указателей на объекты. Тип 
хранимого в файле объекта – параметр шаблона. В начале файла расположены: 
размерность массива указателей (<span lang="EN-US">int</span>), текущее 
количество указателей (<span lang="EN-US">int</span>) и смещение (адрес) массива 
указателей. Разработать метод добавления объекта в файл по заданному логическому 
номеру. Если происходит заполнение массива указателей, то его размерность 
увеличивается в 2 раза и он переписывается в конец файла. Использовать 
поэлементную загрузку структуры данных. Для позиционирования в потоке можно 
использовать методы <span lang="EN-US">seekg</span>(<span lang="EN-US">long</span>,<span lang="EN-US">mode</span>) 
и <span lang="EN-US">long tellg</span>(), для хранимого объекта переопределен 
метод <span lang="EN-US">fstream</span> &lt;&lt; <span lang="EN-US">object</span> 
который записывает объект с текущей позиции в открытый двоичный поток и метод
	<span lang="EN-US">fstream</span> &gt;&gt; <span lang="EN-US">object</span>, который 
читает содержимое объекта с текущей позиции открытого потока.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон&nbsp; – двоичный файл, содержащий массив указателей на объекты. Тип 
хранимого в файле объекта – параметр шаблона. В начале файла расположены: 
размерность массива указателей (<span lang="EN-US">int</span>), текущее 
количество указателей (<span lang="EN-US">int</span>) и смещение (адрес) массива 
указателей. Разработать метод двоичного поиска объекта на основе сравнения с 
объектом-образцом. Предполагается, что операции сравнения хранимых объектов 
переопределены стандартным образом (в виде операций &lt;,&gt; &nbsp;и т.д..). Использовать 
поэлементную загрузку структуры данных. Для позиционирования в потоке можно 
использовать методы <span lang="EN-US">seekg</span>(<span lang="EN-US">long</span>,<span lang="EN-US">mode</span>) 
и <span lang="EN-US">long tellg</span>(), для хранимого объекта переопределен 
метод <span lang="EN-US">fstream</span> &lt;&lt; <span lang="EN-US">object</span> 
который записывает объект с текущей позиции в открытый двоичный поток и метод
	<span lang="EN-US">fstream</span> &gt;&gt; <span lang="EN-US">object</span>, который 
читает содержимое объекта с текущей позиции открытого потока.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон&nbsp; – двоичный файл, содержащий массив указателей на объекты. Тип 
хранимого в файле объекта – параметр шаблона. В начале файла расположены: 
размерность массива указателей (<span lang="EN-US">int</span>), текущее 
количество указателей (<span lang="EN-US">int</span>) и смещение (адрес) массива 
указателей. Разработать метод сортировки объектов выбором: выбирается 
минимальный объект и переписывается в выходной файл аналогичного формата. 
Удаленная из файла строка помечается в массиве файловых указателей нулевым (0<span lang="EN-US">L</span>) 
адресом. Предполагается, что операции сравнения хранимых объектов переопределены 
стандартным образом (в виде операций &lt;,&gt; &nbsp;и т.д..). Использовать поэлементную 
загрузку хранимых объектов и хранение в памяти массива файловых указателей. Для 
позиционирования в потоке можно использовать методы <span lang="EN-US">seekg</span>(<span lang="EN-US">long</span>,<span lang="EN-US">mode</span>) 
и <span lang="EN-US">long tellg</span>(), для хранимого объекта переопределен 
метод <span lang="EN-US">fstream</span> &lt;&lt; <span lang="EN-US">object</span> 
который записывает объект с текущей позиции в открытый двоичный поток и метод
	<span lang="EN-US">fstream</span> &gt;&gt; <span lang="EN-US">object</span>, который 
читает содержимое объекта с текущей позиции открытого потока.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон&nbsp; – двоичный файл, содержащий массив указателей на объекты. Тип 
хранимого в файле объекта – параметр шаблона. В начале файла расположены: 
размерность массива указателей (<span lang="EN-US">int</span>), текущее 
количество указателей (<span lang="EN-US">int</span>) и смещение (адрес) массива 
указателей. Разработать метод сортировки объектов вставками: выбирается 
очередной объект и переписывается в выходной файл аналогичного формата с 
сохранением порядка. Предполагается, что операции сравнения хранимых объектов 
переопределены стандартным образом (в виде операций &lt;,&gt; &nbsp;и т.д..). Использовать 
поэлементную загрузку хранимых объектов и хранение в памяти массива файловых 
указателей. Для позиционирования в потоке можно использовать методы
	<span lang="EN-US">seekg</span>(<span lang="EN-US">long</span>,<span lang="EN-US">mode</span>) 
и <span lang="EN-US">long tellg</span>(), для хранимого объекта переопределен 
метод <span lang="EN-US">fstream</span> &lt;&lt; <span lang="EN-US">object</span> 
который записывает объект с текущей позиции в открытый двоичный поток и метод
	<span lang="EN-US">fstream</span> &gt;&gt; <span lang="EN-US">object</span>, который 
читает содержимое объекта с текущей позиции открытого потока.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон – двоичный файл, содержащий двоичное дерево объектов. Тип 
хранимого в файле объекта – параметр шаблона. В начале файла расположен 
указатель на корневую вершину. Вершина содержит два файловых указателя на правое 
и левое поддерево и сам объект, который непосредственно следует за указателями. 
Структура данных упорядочена. Разработать метод добавления объекта в файл. 
Предполагается, что операции сравнения хранимых объектов переопределены 
стандартным образом (в виде операций &lt;,&gt; &nbsp;и т.д..). Использовать поэлементную 
загрузку структуры данных. Для позиционирования в потоке можно использовать 
методы <span lang="EN-US">seekg</span>(<span lang="EN-US">long</span>,<span lang="EN-US">mode</span>) 
и <span lang="EN-US">long tellg</span>(), для хранимого объекта переопределен 
метод <span lang="EN-US">fstream</span> &lt;&lt; <span lang="EN-US">object</span> 
который записывает объект с текущей позиции в открытый двоичный поток и метод
	<span lang="EN-US">fstream</span> &gt;&gt; <span lang="EN-US">object</span>, который 
читает содержимое объекта с текущей позиции открытого потока.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон – двоичный файл, содержащий двоичное дерево объектов. Тип 
хранимого в файле объекта – параметр шаблона. В начале файла расположен 
указатель на корневую вершину. Вершина содержит два файловых указателя на правое 
и левое поддерево, счетчик количества объектов (<span lang="EN-US">int</span>) и 
непосредственно следующий за ним массив объектов. Структура данных упорядочена 
(дерево и массив объектов). Разработать метод поиска и возвращения указателя на 
объект, совпадающий со значением объекта-ключа (двоичный поиск по ключу). 
Предполагается, что операции сравнения хранимых объектов переопределены 
стандартным образом (в виде операций &lt;,&gt; &nbsp;и т.д..). Использовать поэлементную 
загрузку структуры данных. Для позиционирования в потоке можно использовать 
методы <span lang="EN-US">seekg</span>(<span lang="EN-US">long</span>,<span lang="EN-US">mode</span>) 
и <span lang="EN-US">long tellg</span>(), для хранимого объекта переопределен 
метод <span lang="EN-US">fstream</span> &lt;&lt; <span lang="EN-US">object</span> 
который записывает объект с текущей позиции в открытый двоичный поток и метод
	<span lang="EN-US">fstream</span> &gt;&gt; <span lang="EN-US">object</span>, который 
читает содержимое объекта с текущей позиции открытого потока.</p></li>
	<li>
	<p class="a1" style="text-indent: 0cm; margin-left: 0cm">Шаблон – двоичный файл, содержащий двоичное дерево объектов. Тип 
хранимого в файле объекта – параметр шаблона. В начале файла расположен 
указатель на корневую вершину. Вершина содержит два файловых указателя на правое 
и левое поддерево, счетчик количества объектов (<span lang="EN-US">int</span>) и 
статический массив указателей на объекты. Структура данных упорядочена (дерево и 
массив объектов). Разработать метод поиска и возвращения указателя на объект, 
совпадающий со значением объекта-ключа (двоичный поиск по ключу). 
Предполагается, что операции сравнения хранимых объектов переопределены 
стандартным образом (в виде операций &lt;,&gt; &nbsp;и т.д..). Использовать поэлементную 
загрузку структуры данных. Для позиционирования в потоке можно использовать 
методы <span lang="EN-US">seekg</span>(<span lang="EN-US">long</span>,<span lang="EN-US">mode</span>) 
и <span lang="EN-US">long tellg</span>(), для хранимого объекта переопределен 
метод <span lang="EN-US">fstream</span> &lt;&lt; <span lang="EN-US">object</span> 
который записывает объект с текущей позиции в открытый двоичный поток и метод
	<span lang="EN-US">fstream</span> &gt;&gt; <span lang="EN-US">object</span>, который 
читает содержимое объекта с текущей позиции открытого потока.</p></li>
</ol>

</body>

</html>