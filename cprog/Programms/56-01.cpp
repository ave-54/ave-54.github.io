#include <stdio.h>
//------------------------------------------------------56-01.cpp

//------ Динамический массив простых множителей числа
//       Размерность массива определяется двойным вычислением
int *mnog(long vv){
long nn=vv; int i,sz,k;
for (sz=0; vv!=1; sz++){      		// Цикл определения количества
	for (i=2; vv%i!=0; i++);   		// Определить очередной множитель
      	vv = vv / i; }
int *p=new int[sz+1];				// Создать динамический массив
for (k=0; nn!=1; k++){         		// Повторный цикл заполнения 
	for (i=2; nn%i!=0; i++);   		// Определить очередной множитель
      	p[k]=i;                    	// Сохранить множитель в массиве
      	nn = nn / i; }
p[k]=0; return p;}                	// Вернуть указатель на ДМ


//----------------------------------------------------------
// Строка как динамический массив - объединение строк
char	*twoToOne(char *p1, char *p2){			
char	*out;	int	n1,n2;
for (n1=0; p1[n1]!='\0'; n1++);		// Длина первой строки
for (n2=0; p2[n2]!='\0'; n2++);		// Длина второй строки
if ((out = new char [n1+n2+1]) == NULL) 
	return NULL;					// Выделить память под результат
for (n1=0; *p1!='\0';)  out[n1++] = *p1++;
while(*p2!=0) out[n1++] = *p2++;	// Копировать строки
out[n1] = '\0';
return out; }

//----------------------------------------------------------
// Загрузка динамического массива целых из файла
int *loadInt(char nm[],int &n){
FILE *fd=fopen(nm,"r");
int sz=10,*p=new int[sz]; n=0;
// или	p=(int*)malloc(sz*sizeof(int));
while(fscanf(fd,"%d",&p[n])==1){	// пока есть числа в файле
	n++;
	if (n==sz){						// массив заполнен
		sz*=2;						// удвоить размерность
		int *q=new int[sz];			// создать новый
		for (int i=0;i<n;i++)		// копировать старый в новый	
				q[i]=p[i];			
		delete p;					// уничтожить старый
		p=q;						// считать новый за старый
// или	p=(int*)realloc(p,sz*sizeof(int));
		}
	}
return p;
}

void main(){
long vv=1646455;
int *p=mnog(vv),i;
printf("%ld",vv);
for (i=0;p[i]!=0;i++) printf(i==0 ? "=%d" : "*%d",p[i]);
delete p;
char *s=twoToOne("aaaa","bbbbbbb");
printf("\n%s\n",s);
delete s;
int m;
p=loadInt("56-01.txt",m);
for (i=0;i<m;i++) printf("%d ",p[i]);
delete p;
}
