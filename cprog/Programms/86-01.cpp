#include <stdio.h>

//--- Полный рекурсивный обход графа, матрица смежности
void scan_1(int i,int **M, int n, int D[]){
	D[i]=1;
	for (int j=0;j<n;j++)
		if (M[i][j]!=0 && D[j]==0) printf("%d-%d[%d]\n",i,j,M[i][j]),scan_1(j,M,n,D);
	D[i]=0;
}
//--- Полный рекурсивный обход графа, таблица пар
struct link2{ int v1,v2,lnt; };
void scan_2(int i,link2 M[], int D[]){
	D[i]=1;
	for (int j=0;M[j].v1!=-1;j++){
		if (M[j].v1==i && D[M[j].v2]==0) printf("%d-%d[%d]\n",M[j].v1,M[j].v2,M[j].lnt),scan_2(M[j].v2,M,D);
		if (M[j].v2==i && D[M[j].v1]==0) printf("%d-%d[%d]\n",M[j].v2,M[j].v1,M[j].lnt),scan_2(M[j].v1,M,D);
		}
	D[i]=0;
}
//--- Полный рекурсивный обход графа, таблица списков смежных вершин
struct link3{ 
	int v2,lnt; 
	link3 *next;
	link3(int vv,int ll){ v2=vv; lnt=ll; next=NULL; }
	};
void scan_3(int i,link3 *M[], int n, int D[]){
	D[i]=1;
	link3 *q;
	for (q=M[i];q!=NULL;q=q->next)
		if (D[q->v2]==0) printf("%d-%d[%d]\n",i,q->v2,q->lnt),scan_3(q->v2,M,n,D);
	D[i]=0;
}
struct link4{ int v2,lnt; };
//--- Полный рекурсивный обход графа, массив указателей на массивы ребер
void scan_4(int i,link4 *M[], int n, int D[]){
	D[i]=1;
	for (int j=0;M[i][j].v2!=-1;j++)
		if (D[M[i][j].v2]==0) printf("%d-%d[%d]\n",i,M[i][j].v2,M[i][j].lnt),scan_4(M[i][j].v2,M,n,D);
	D[i]=0;
}
//-------------------------------------------------------------------
int a00[]={ 0,  5, 8, 0, 0, 0, 0};
int a01[]={ 5,  0, 0,12, 0, 9, 0};
int a02[]={ 8,  0, 0, 0, 8, 4, 2};
int a03[]={ 0, 12, 0, 0, 3, 6, 0};
int a04[]={ 0,  0, 8, 3, 0, 0, 7};  
int a05[]={ 0,  9, 4, 6, 0, 0, 0};
int a06[]={ 0,  0, 2, 0, 7, 0, 0};
int *A1[]={a00,a01,a02,a03,a04,a05,a06};
//-------------------------------------------------------------------
link2 A2[]={{0,1,5},{0,2,8},{1,3,12},{1,5,9},{3,5,6},
{2,5,4},{3,4,3},{2,4,8},{2,6,2},{4,6,7},{-1,-1,0}}; 
//-------------------------------------------------------------------
link4 a0[]={{1,5},{2,8},{-1,-1}}; 
link4 a1[]={{0,5},{3,12},{5,9},{-1,-1}};
link4 a2[]={{0,8},{4,8},{5,4},{6,2},{-1,-1}};
link4 a3[]={{1,12},{4,3},{5,6},{-1,-1}};
link4 a4[]={{2,8},{3,3},{6,7},{-1,-1}};
link4 a5[]={{1,9},{2,4},{3,6},{-1,-1}};
link4 a6[]={{2,2},{4,7},{-1,-1}};
link4 *pp[]={a0,a1,a2,a3,a4,a5,a6};
//-----------------------------------------------------------
// Создание массива указателей на списки из матрицы смежности
link3 **create(int *pp[],int N){
	int i,j;
	link3 **M=new link3*[N];
	for (i=0;i<N;i++) M[i]=NULL;
	for (i=0;i<N;i++)
	for (j=0;j<N;j++)
		if (pp[i][j]!=0){
			int vv2,l2;
			link3 *q=new link3(j,pp[i][j]);
			q->next=M[i]; M[i]=q;
			}
	return M;
	}
//-----------------------------------------------------------
void main(){
int DD[7];
int i,N=7;
for (i=0;i<N;i++) DD[i]=0;
scan_1(0,A1,N,DD);
puts("-----------------------------------");
for (i=0;i<N;i++) DD[i]=0;
scan_2(0,A2,DD);
puts("-----------------------------------");
link3 **Q=create(A1,N);
for (i=0;i<N;i++) DD[i]=0;
scan_3(0,Q,N,DD);
puts("-----------------------------------");
for (i=0;i<N;i++) DD[i]=0;
scan_4(0,pp,7,DD);}
