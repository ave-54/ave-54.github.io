#include <stdio.h>
//------------------------------------------------------87-03.cpp
//----- Двухуровневый массив указателей на целые
 #define N 4
 int **p[20]={NULL};		// Исходное состояние структура данных пуста
 //--- Вспомогательные функции для нижнего уровня
 int size(int *p[])			// Количество элементов в массиве указателей 
 { int i; for (i=0; p[i]!=NULL; i++); return i; }
 //--- Включение в массив указателей нижнего уровня по номеру 
 int F3(int *p[], int *q, int n) {
 int i,m=size(p);
 for (i=m; i>=n; i--) p[i+1] = p[i];
 p[n] = q;
 return m+1==N; }			// Результат - проверка на переполнение 
//------------------------------------------------------87-03.cpp
//----- Обход структуры данных со сквозной нумерацией
 void show(int **p[]) 
 { int i,j,k;
 for (i=0,k=0; p[i] != NULL; i++)
      for (j =0; p[i][j] != NULL; j++,k++)
	   printf("A[%d(%d,%d)]=%d\n",k,i,j,*p[i][j]);
 }
//------------------------------------------------------87-03.cpp
//------ Включение по логическому номеру
 void Insert_Num(int **p[],int *q, int n)
 { int i,j,l,sz;
      if (p[0]==NULL){      // Отдельно для пустой структуры данных
      p[0]=new int*[N+1]; 
      p[0][0]=q; p[0][1]=NULL; return;
      }                     // Поиск места включения 
      for (i =0; p[i] != NULL; i++,n-=sz) {
      sz=size(p[i]);        // Количество указателей в массиве
      if (n<=sz) break;     // Номер попадает в текущий массив
      } 
 if (p[i]==NULL)            // Не найден включить последним 
      { i--; n=size(p[i]); }
 if (F3(p[i],q,n))			// Вызов функции включения для нижнего уровня
      { int h,ii;           // Переполнение создание нового массива
      for (ii=0; p[ii] != NULL; ii++);
      for(h=ii;h>i;h--)		// Раздвижка в массиве указателей
      p[h+1]=p[h];          // верхнего уровня 
      p[i+1]=new int*[N+1]; // Создание массива нижнего уровня
      for(j=0;j<N/2;j++)    // Перенос указателей
      p[i+1][j]=p[i][j+N/2];
      p[i][N/2]=NULL;
      p[i+1][N/2]=NULL;
      }}

 void main(){
 int A[]={1,7,3,4,6,2,6,7,98,4,5};
 for (int i=0; i<sizeof(A)/sizeof(int); i++) Insert_Num(p,&A[i],1);
 show(p);
 }
