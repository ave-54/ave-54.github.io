//------------------------------------------------------74-04.cpp
//----- Задача коммивояжера - полный обход графа
#define N 5
int R[N][N]={
		{0,4,2,0,0},				// Матрица расстояний
		{4,0,2,1,3},
		{2,2,0,0,6},
		{0,1,0,0,1},
		{0,3,6,1,0}};
int M[N]={0,0,0,0,0};               // Отметка пройденных "городов"
int W[N];							// Текущая последовательность обхода
int Wmin[N];						// Оптимальная последовательность обхода
int minlnt=-1;						// Длина минимального пути
void step(int n, int k, int lnt){	// n - номер шага, k - номер "города"
if (n==N){							// lnt - длина пройденого пути
	if (minlnt==-1 || lnt<minlnt)	// Обход закончен - фиксировать минимум
		{
		minlnt=lnt;					// Запомнить длину и последовательность
		for (int i=0;i<N;i++)		// обхода
			Wmin[i]=W[i];
		}
	return;
	}
if (M[k]==1) return;				// Повторное прохождение
W[n]=k;								// Дополнить последовательность обхода
M[k]=1;								// Отметить прохождение
for (int i=0; i<N; i++){            // Просмотр соседей
	if (R[k][i]==0) continue;		// Соседи не связаны - пропустить
	step(n+1,i,lnt+R[k][i]);		// Рекурсивный вызов для соседнего
	}								// "города" с учетом расстояния до него
M[k]=0;								// Сбросить отметку
}

#include <stdio.h>
void main(){
step(0,0,0);
printf("\nmin=%d\ntowns:",minlnt);
 for (int i=0; i<N; i++) printf("%d-",Wmin[i]); }
